# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from . import utilities, tables

class ComputeCluster(pulumi.CustomResource):
    """
    -> **A note on the naming of this resource:** VMware refers to clusters of
    hosts in the UI and documentation as _clusters_, _HA clusters_, or _DRS
    clusters_. All of these refer to the same kind of resource (with the latter two
    referring to specific features of clustering). In Terraform, we use
    `vsphere_compute_cluster` to differentiate host clusters from _datastore
    clusters_, which are clusters of datastores that can be used to distribute load
    and ensure fault tolerance via distribution of virtual machines. Datastore
    clusters can also be managed through Terraform, via the
    [`vsphere_datastore_cluster` resource][docs-r-vsphere-datastore-cluster].
    
    [docs-r-vsphere-datastore-cluster]: /docs/providers/vsphere/r/datastore_cluster.html
    
    The `vsphere_compute_cluster` resource can be used to create and manage
    clusters of hosts allowing for resource control of compute resources, load
    balancing through DRS, and high availability through vSphere HA.
    
    For more information on vSphere clusters and DRS, see [this
    page][ref-vsphere-drs-clusters]. For more information on vSphere HA, see [this
    page][ref-vsphere-ha-clusters].
    
    [ref-vsphere-drs-clusters]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-8ACF3502-5314-469F-8CC9-4A9BD5925BC2.html
    [ref-vsphere-ha-clusters]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-5432CA24-14F1-44E3-87FB-61D937831CF6.html
    
    ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi
    connections.
    
    ~> **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.
    """
    def __init__(__self__, __name__, __opts__=None, custom_attributes=None, datacenter_id=None, dpm_automation_level=None, dpm_enabled=None, dpm_threshold=None, drs_advanced_options=None, drs_automation_level=None, drs_enable_predictive_drs=None, drs_enable_vm_overrides=None, drs_enabled=None, drs_migration_threshold=None, folder=None, force_evacuate_on_destroy=None, ha_admission_control_failover_host_system_ids=None, ha_admission_control_host_failure_tolerance=None, ha_admission_control_performance_tolerance=None, ha_admission_control_policy=None, ha_admission_control_resource_percentage_auto_compute=None, ha_admission_control_resource_percentage_cpu=None, ha_admission_control_resource_percentage_memory=None, ha_admission_control_slot_policy_explicit_cpu=None, ha_admission_control_slot_policy_explicit_memory=None, ha_admission_control_slot_policy_use_explicit_size=None, ha_advanced_options=None, ha_datastore_apd_recovery_action=None, ha_datastore_apd_response=None, ha_datastore_apd_response_delay=None, ha_datastore_pdl_response=None, ha_enabled=None, ha_heartbeat_datastore_ids=None, ha_heartbeat_datastore_policy=None, ha_host_isolation_response=None, ha_host_monitoring=None, ha_vm_component_protection=None, ha_vm_dependency_restart_condition=None, ha_vm_failure_interval=None, ha_vm_maximum_failure_window=None, ha_vm_maximum_resets=None, ha_vm_minimum_uptime=None, ha_vm_monitoring=None, ha_vm_restart_additional_delay=None, ha_vm_restart_priority=None, ha_vm_restart_timeout=None, host_cluster_exit_timeout=None, host_system_ids=None, name=None, proactive_ha_automation_level=None, proactive_ha_enabled=None, proactive_ha_moderate_remediation=None, proactive_ha_provider_ids=None, proactive_ha_severe_remediation=None, tags=None):
        """Create a ComputeCluster resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['custom_attributes'] = custom_attributes

        if not datacenter_id:
            raise TypeError('Missing required property datacenter_id')
        __props__['datacenter_id'] = datacenter_id

        __props__['dpm_automation_level'] = dpm_automation_level

        __props__['dpm_enabled'] = dpm_enabled

        __props__['dpm_threshold'] = dpm_threshold

        __props__['drs_advanced_options'] = drs_advanced_options

        __props__['drs_automation_level'] = drs_automation_level

        __props__['drs_enable_predictive_drs'] = drs_enable_predictive_drs

        __props__['drs_enable_vm_overrides'] = drs_enable_vm_overrides

        __props__['drs_enabled'] = drs_enabled

        __props__['drs_migration_threshold'] = drs_migration_threshold

        __props__['folder'] = folder

        __props__['force_evacuate_on_destroy'] = force_evacuate_on_destroy

        __props__['ha_admission_control_failover_host_system_ids'] = ha_admission_control_failover_host_system_ids

        __props__['ha_admission_control_host_failure_tolerance'] = ha_admission_control_host_failure_tolerance

        __props__['ha_admission_control_performance_tolerance'] = ha_admission_control_performance_tolerance

        __props__['ha_admission_control_policy'] = ha_admission_control_policy

        __props__['ha_admission_control_resource_percentage_auto_compute'] = ha_admission_control_resource_percentage_auto_compute

        __props__['ha_admission_control_resource_percentage_cpu'] = ha_admission_control_resource_percentage_cpu

        __props__['ha_admission_control_resource_percentage_memory'] = ha_admission_control_resource_percentage_memory

        __props__['ha_admission_control_slot_policy_explicit_cpu'] = ha_admission_control_slot_policy_explicit_cpu

        __props__['ha_admission_control_slot_policy_explicit_memory'] = ha_admission_control_slot_policy_explicit_memory

        __props__['ha_admission_control_slot_policy_use_explicit_size'] = ha_admission_control_slot_policy_use_explicit_size

        __props__['ha_advanced_options'] = ha_advanced_options

        __props__['ha_datastore_apd_recovery_action'] = ha_datastore_apd_recovery_action

        __props__['ha_datastore_apd_response'] = ha_datastore_apd_response

        __props__['ha_datastore_apd_response_delay'] = ha_datastore_apd_response_delay

        __props__['ha_datastore_pdl_response'] = ha_datastore_pdl_response

        __props__['ha_enabled'] = ha_enabled

        __props__['ha_heartbeat_datastore_ids'] = ha_heartbeat_datastore_ids

        __props__['ha_heartbeat_datastore_policy'] = ha_heartbeat_datastore_policy

        __props__['ha_host_isolation_response'] = ha_host_isolation_response

        __props__['ha_host_monitoring'] = ha_host_monitoring

        __props__['ha_vm_component_protection'] = ha_vm_component_protection

        __props__['ha_vm_dependency_restart_condition'] = ha_vm_dependency_restart_condition

        __props__['ha_vm_failure_interval'] = ha_vm_failure_interval

        __props__['ha_vm_maximum_failure_window'] = ha_vm_maximum_failure_window

        __props__['ha_vm_maximum_resets'] = ha_vm_maximum_resets

        __props__['ha_vm_minimum_uptime'] = ha_vm_minimum_uptime

        __props__['ha_vm_monitoring'] = ha_vm_monitoring

        __props__['ha_vm_restart_additional_delay'] = ha_vm_restart_additional_delay

        __props__['ha_vm_restart_priority'] = ha_vm_restart_priority

        __props__['ha_vm_restart_timeout'] = ha_vm_restart_timeout

        __props__['host_cluster_exit_timeout'] = host_cluster_exit_timeout

        __props__['host_system_ids'] = host_system_ids

        __props__['name'] = name

        __props__['proactive_ha_automation_level'] = proactive_ha_automation_level

        __props__['proactive_ha_enabled'] = proactive_ha_enabled

        __props__['proactive_ha_moderate_remediation'] = proactive_ha_moderate_remediation

        __props__['proactive_ha_provider_ids'] = proactive_ha_provider_ids

        __props__['proactive_ha_severe_remediation'] = proactive_ha_severe_remediation

        __props__['tags'] = tags

        __props__['resource_pool_id'] = None

        super(ComputeCluster, __self__).__init__(
            'vsphere:index/computeCluster:ComputeCluster',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

