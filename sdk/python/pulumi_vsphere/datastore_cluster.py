# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from . import utilities

class DatastoreCluster(pulumi.CustomResource):
    """
    The `vsphere_datastore_cluster` resource can be used to create and manage
    datastore clusters. This can be used to create groups of datastores with a
    shared management interface, allowing for resource control and load balancing
    through Storage DRS.
    
    For more information on vSphere datastore clusters and Storage DRS, see [this
    page][ref-vsphere-datastore-clusters].
    
    [ref-vsphere-datastore-clusters]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-598DF695-107E-406B-9C95-0AF961FC227A.html
    
    ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi
    connections.
    
    ~> **NOTE:** Storage DRS requires a vSphere Enterprise Plus license.
    """
    def __init__(__self__, __name__, __opts__=None, custom_attributes=None, datacenter_id=None, folder=None, name=None, sdrs_advanced_options=None, sdrs_automation_level=None, sdrs_default_intra_vm_affinity=None, sdrs_enabled=None, sdrs_free_space_threshold=None, sdrs_free_space_threshold_mode=None, sdrs_free_space_utilization_difference=None, sdrs_io_balance_automation_level=None, sdrs_io_latency_threshold=None, sdrs_io_load_balance_enabled=None, sdrs_io_load_imbalance_threshold=None, sdrs_io_reservable_iops_threshold=None, sdrs_io_reservable_percent_threshold=None, sdrs_io_reservable_threshold_mode=None, sdrs_load_balance_interval=None, sdrs_policy_enforcement_automation_level=None, sdrs_rule_enforcement_automation_level=None, sdrs_space_balance_automation_level=None, sdrs_space_utilization_threshold=None, sdrs_vm_evacuation_automation_level=None, tags=None):
        """Create a DatastoreCluster resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['customAttributes'] = custom_attributes

        if not datacenter_id:
            raise TypeError('Missing required property datacenter_id')
        __props__['datacenterId'] = datacenter_id

        __props__['folder'] = folder

        __props__['name'] = name

        __props__['sdrsAdvancedOptions'] = sdrs_advanced_options

        __props__['sdrsAutomationLevel'] = sdrs_automation_level

        __props__['sdrsDefaultIntraVmAffinity'] = sdrs_default_intra_vm_affinity

        __props__['sdrsEnabled'] = sdrs_enabled

        __props__['sdrsFreeSpaceThreshold'] = sdrs_free_space_threshold

        __props__['sdrsFreeSpaceThresholdMode'] = sdrs_free_space_threshold_mode

        __props__['sdrsFreeSpaceUtilizationDifference'] = sdrs_free_space_utilization_difference

        __props__['sdrsIoBalanceAutomationLevel'] = sdrs_io_balance_automation_level

        __props__['sdrsIoLatencyThreshold'] = sdrs_io_latency_threshold

        __props__['sdrsIoLoadBalanceEnabled'] = sdrs_io_load_balance_enabled

        __props__['sdrsIoLoadImbalanceThreshold'] = sdrs_io_load_imbalance_threshold

        __props__['sdrsIoReservableIopsThreshold'] = sdrs_io_reservable_iops_threshold

        __props__['sdrsIoReservablePercentThreshold'] = sdrs_io_reservable_percent_threshold

        __props__['sdrsIoReservableThresholdMode'] = sdrs_io_reservable_threshold_mode

        __props__['sdrsLoadBalanceInterval'] = sdrs_load_balance_interval

        __props__['sdrsPolicyEnforcementAutomationLevel'] = sdrs_policy_enforcement_automation_level

        __props__['sdrsRuleEnforcementAutomationLevel'] = sdrs_rule_enforcement_automation_level

        __props__['sdrsSpaceBalanceAutomationLevel'] = sdrs_space_balance_automation_level

        __props__['sdrsSpaceUtilizationThreshold'] = sdrs_space_utilization_threshold

        __props__['sdrsVmEvacuationAutomationLevel'] = sdrs_vm_evacuation_automation_level

        __props__['tags'] = tags

        super(DatastoreCluster, __self__).__init__(
            'vsphere:index/datastoreCluster:DatastoreCluster',
            __name__,
            __props__,
            __opts__)

