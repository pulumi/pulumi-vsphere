# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetHostBaseImagesResult',
    'AwaitableGetHostBaseImagesResult',
    'get_host_base_images',
    'get_host_base_images_output',
]

@pulumi.output_type
class GetHostBaseImagesResult:
    """
    A collection of values returned by getHostBaseImages.
    """
    def __init__(__self__, id=None, versions=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if versions and not isinstance(versions, list):
            raise TypeError("Expected argument 'versions' to be a list")
        pulumi.set(__self__, "versions", versions)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def versions(self) -> Sequence[str]:
        """
        The ESXi version identifier for the image
        """
        return pulumi.get(self, "versions")


class AwaitableGetHostBaseImagesResult(GetHostBaseImagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHostBaseImagesResult(
            id=self.id,
            versions=self.versions)


def get_host_base_images(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHostBaseImagesResult:
    """
    The `get_host_base_images` data source can be used to get the list of ESXi base images available
    for cluster software management.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vsphere as vsphere

    baseimages = vsphere.get_host_base_images()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vsphere:index/getHostBaseImages:getHostBaseImages', __args__, opts=opts, typ=GetHostBaseImagesResult).value

    return AwaitableGetHostBaseImagesResult(
        id=pulumi.get(__ret__, 'id'),
        versions=pulumi.get(__ret__, 'versions'))


@_utilities.lift_output_func(get_host_base_images)
def get_host_base_images_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetHostBaseImagesResult]:
    """
    The `get_host_base_images` data source can be used to get the list of ESXi base images available
    for cluster software management.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vsphere as vsphere

    baseimages = vsphere.get_host_base_images()
    ```
    """
    ...
