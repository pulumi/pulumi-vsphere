# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from . import utilities

class Folder(pulumi.CustomResource):
    """
    The `vsphere_folder` resource can be used to manage vSphere inventory folders.
    The resource supports creating folders of the 5 major types - datacenter
    folders, host and cluster folders, virtual machine folders, datastore folders,
    and network folders.
    
    Paths are always relative to the specific type of folder you are creating.
    Subfolders are discovered by parsing the relative path specified in `path`, so
    `foo/bar` will create a folder named `bar` in the parent folder `foo`, as long
    as that folder exists.
    """
    def __init__(__self__, __name__, __opts__=None, custom_attributes=None, datacenter_id=None, path=None, tags=None, type=None):
        """Create a Folder resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['customAttributes'] = custom_attributes

        __props__['datacenterId'] = datacenter_id

        if not path:
            raise TypeError('Missing required property path')
        __props__['path'] = path

        __props__['tags'] = tags

        if not type:
            raise TypeError('Missing required property type')
        __props__['type'] = type

        super(Folder, __self__).__init__(
            'vsphere:index/folder:Folder',
            __name__,
            __props__,
            __opts__)

