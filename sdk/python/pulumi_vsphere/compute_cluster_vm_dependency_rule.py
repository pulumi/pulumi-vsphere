# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from . import utilities

class ComputeClusterVmDependencyRule(pulumi.CustomResource):
    """
    The `vsphere_compute_cluster_vm_dependency_rule` resource can be used to manage
    VM dependency rules in a cluster, either created by the
    [`vsphere_compute_cluster`][tf-vsphere-cluster-resource] resource or looked up
    by the [`vsphere_compute_cluster`][tf-vsphere-cluster-data-source] data source.
    
    [tf-vsphere-cluster-resource]: /docs/providers/vsphere/r/compute_cluster.html
    [tf-vsphere-cluster-data-source]: /docs/providers/vsphere/d/compute_cluster.html
    
    A virtual machine dependency rule applies to vSphere HA, and allows
    user-defined startup orders for virtual machines in the case of host failure.
    Virtual machines are supplied via groups, which can be managed via the
    [`vsphere_compute_cluster_vm_group`][tf-vsphere-cluster-vm-group-resource]
    resource.
    
    [tf-vsphere-cluster-vm-group-resource]: /docs/providers/vsphere/r/compute_cluster_vm_group.html
    
    ~> **NOTE:** This resource requires vCenter and is not available on direct ESXi
    connections.
    """
    def __init__(__self__, __name__, __opts__=None, compute_cluster_id=None, dependency_vm_group_name=None, enabled=None, mandatory=None, name=None, vm_group_name=None):
        """Create a ComputeClusterVmDependencyRule resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not compute_cluster_id:
            raise TypeError('Missing required property compute_cluster_id')
        __props__['computeClusterId'] = compute_cluster_id

        if not dependency_vm_group_name:
            raise TypeError('Missing required property dependency_vm_group_name')
        __props__['dependencyVmGroupName'] = dependency_vm_group_name

        __props__['enabled'] = enabled

        __props__['mandatory'] = mandatory

        __props__['name'] = name

        if not vm_group_name:
            raise TypeError('Missing required property vm_group_name')
        __props__['vmGroupName'] = vm_group_name

        super(ComputeClusterVmDependencyRule, __self__).__init__(
            'vsphere:index/computeClusterVmDependencyRule:ComputeClusterVmDependencyRule',
            __name__,
            __props__,
            __opts__)

