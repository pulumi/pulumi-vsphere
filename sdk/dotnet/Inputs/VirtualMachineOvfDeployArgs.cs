// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere.Inputs
{

    public sealed class VirtualMachineOvfDeployArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allow unverified ssl certificates while deploying ovf/ova from url.
        /// </summary>
        [Input("allowUnverifiedSslCert")]
        public Input<bool>? AllowUnverifiedSslCert { get; set; }

        /// <summary>
        /// The Deployment option to be chosen. If empty, the default option is used.
        /// </summary>
        [Input("deploymentOption")]
        public Input<string>? DeploymentOption { get; set; }

        /// <summary>
        /// An optional disk provisioning. If set, all the disks in the deployed ovf will have the same specified disk type (e.g., thin provisioned).
        /// </summary>
        [Input("diskProvisioning")]
        public Input<string>? DiskProvisioning { get; set; }

        /// <summary>
        /// Allow properties with ovf:userConfigurable=false to be set.
        /// </summary>
        [Input("enableHiddenProperties")]
        public Input<bool>? EnableHiddenProperties { get; set; }

        /// <summary>
        /// The IP allocation policy.
        /// </summary>
        [Input("ipAllocationPolicy")]
        public Input<string>? IpAllocationPolicy { get; set; }

        /// <summary>
        /// The IP protocol.
        /// </summary>
        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        /// <summary>
        /// The absolute path to the ovf/ova file in the local system.
        /// </summary>
        [Input("localOvfPath")]
        public Input<string>? LocalOvfPath { get; set; }

        [Input("ovfNetworkMap")]
        private InputMap<string>? _ovfNetworkMap;

        /// <summary>
        /// The mapping of name of network identifiers from the ovf descriptor to network UUID in the VI infrastructure.
        /// </summary>
        public InputMap<string> OvfNetworkMap
        {
            get => _ovfNetworkMap ?? (_ovfNetworkMap = new InputMap<string>());
            set => _ovfNetworkMap = value;
        }

        /// <summary>
        /// URL to the remote ovf/ova file to be deployed.
        /// </summary>
        [Input("remoteOvfUrl")]
        public Input<string>? RemoteOvfUrl { get; set; }

        public VirtualMachineOvfDeployArgs()
        {
        }
        public static new VirtualMachineOvfDeployArgs Empty => new VirtualMachineOvfDeployArgs();
    }
}
