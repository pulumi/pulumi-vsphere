// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere.Inputs
{

    public sealed class VirtualMachineCloneCustomizeNetworkInterfaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A DNS search domain to add to the DNS configuration on the virtual machine.
        /// </summary>
        [Input("dnsDomain")]
        public Input<string>? DnsDomain { get; set; }

        [Input("dnsServerLists")]
        private InputList<string>? _dnsServerLists;

        /// <summary>
        /// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
        /// </summary>
        public InputList<string> DnsServerLists
        {
            get => _dnsServerLists ?? (_dnsServerLists = new InputList<string>());
            set => _dnsServerLists = value;
        }

        /// <summary>
        /// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
        /// </summary>
        [Input("ipv4Address")]
        public Input<string>? Ipv4Address { get; set; }

        /// <summary>
        /// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
        /// </summary>
        [Input("ipv4Netmask")]
        public Input<int>? Ipv4Netmask { get; set; }

        /// <summary>
        /// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
        /// </summary>
        [Input("ipv6Address")]
        public Input<string>? Ipv6Address { get; set; }

        /// <summary>
        /// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
        /// </summary>
        [Input("ipv6Netmask")]
        public Input<int>? Ipv6Netmask { get; set; }

        public VirtualMachineCloneCustomizeNetworkInterfaceArgs()
        {
        }
        public static new VirtualMachineCloneCustomizeNetworkInterfaceArgs Empty => new VirtualMachineCloneCustomizeNetworkInterfaceArgs();
    }
}
