// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere
{
    [VSphereResourceType("vsphere:index/configurationProfile:ConfigurationProfile")]
    public partial class ConfigurationProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identifier of the cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The configuration JSON provided as a plain string. This argument can only be specified if `reference_host_id` is not set.
        /// </summary>
        [Output("configuration")]
        public Output<string> Configuration { get; private set; } = null!;

        /// <summary>
        /// The identifier of the host to use as a configuration source.
        /// The host needs to be a member of the cluster identified by `cluster_id`. This argument can only be specified if
        /// `configuration` is not set.
        /// </summary>
        [Output("referenceHostId")]
        public Output<string?> ReferenceHostId { get; private set; } = null!;

        /// <summary>
        /// The JSON schema for the profile.
        /// </summary>
        [Output("schema")]
        public Output<string> Schema { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationProfile(string name, ConfigurationProfileArgs args, CustomResourceOptions? options = null)
            : base("vsphere:index/configurationProfile:ConfigurationProfile", name, args ?? new ConfigurationProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationProfile(string name, Input<string> id, ConfigurationProfileState? state = null, CustomResourceOptions? options = null)
            : base("vsphere:index/configurationProfile:ConfigurationProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationProfile Get(string name, Input<string> id, ConfigurationProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigurationProfile(name, id, state, options);
        }
    }

    public sealed class ConfigurationProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The configuration JSON provided as a plain string. This argument can only be specified if `reference_host_id` is not set.
        /// </summary>
        [Input("configuration")]
        public Input<string>? Configuration { get; set; }

        /// <summary>
        /// The identifier of the host to use as a configuration source.
        /// The host needs to be a member of the cluster identified by `cluster_id`. This argument can only be specified if
        /// `configuration` is not set.
        /// </summary>
        [Input("referenceHostId")]
        public Input<string>? ReferenceHostId { get; set; }

        public ConfigurationProfileArgs()
        {
        }
        public static new ConfigurationProfileArgs Empty => new ConfigurationProfileArgs();
    }

    public sealed class ConfigurationProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The configuration JSON provided as a plain string. This argument can only be specified if `reference_host_id` is not set.
        /// </summary>
        [Input("configuration")]
        public Input<string>? Configuration { get; set; }

        /// <summary>
        /// The identifier of the host to use as a configuration source.
        /// The host needs to be a member of the cluster identified by `cluster_id`. This argument can only be specified if
        /// `configuration` is not set.
        /// </summary>
        [Input("referenceHostId")]
        public Input<string>? ReferenceHostId { get; set; }

        /// <summary>
        /// The JSON schema for the profile.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        public ConfigurationProfileState()
        {
        }
        public static new ConfigurationProfileState Empty => new ConfigurationProfileState();
    }
}
