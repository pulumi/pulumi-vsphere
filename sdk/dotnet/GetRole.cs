// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere
{
    public static class GetRole
    {
        /// <summary>
        /// The `vsphere.Role` data source can be used to discover the `id` and privileges associated
        /// with a role given its name or display label.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var terraformRole = VSphere.GetRole.Invoke(new()
        ///     {
        ///         Label = "Terraform to vSphere Integration Role",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRoleResult> InvokeAsync(GetRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoleResult>("vsphere:index/getRole:getRole", args ?? new GetRoleArgs(), options.WithDefaults());

        /// <summary>
        /// The `vsphere.Role` data source can be used to discover the `id` and privileges associated
        /// with a role given its name or display label.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var terraformRole = VSphere.GetRole.Invoke(new()
        ///     {
        ///         Label = "Terraform to vSphere Integration Role",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRoleResult> Invoke(GetRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoleResult>("vsphere:index/getRole:getRole", args ?? new GetRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The description of the role.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// The label of the role.
        /// </summary>
        [Input("label", required: true)]
        public string Label { get; set; } = null!;

        [Input("name")]
        public string? Name { get; set; }

        [Input("rolePrivileges")]
        private List<string>? _rolePrivileges;

        /// <summary>
        /// The privileges associated with the role.
        /// </summary>
        public List<string> RolePrivileges
        {
            get => _rolePrivileges ?? (_rolePrivileges = new List<string>());
            set => _rolePrivileges = value;
        }

        public GetRoleArgs()
        {
        }
        public static new GetRoleArgs Empty => new GetRoleArgs();
    }

    public sealed class GetRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The description of the role.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The label of the role.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rolePrivileges")]
        private InputList<string>? _rolePrivileges;

        /// <summary>
        /// The privileges associated with the role.
        /// </summary>
        public InputList<string> RolePrivileges
        {
            get => _rolePrivileges ?? (_rolePrivileges = new InputList<string>());
            set => _rolePrivileges = value;
        }

        public GetRoleInvokeArgs()
        {
        }
        public static new GetRoleInvokeArgs Empty => new GetRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoleResult
    {
        /// <summary>
        /// The description of the role.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The display label of the role.
        /// </summary>
        public readonly string Label;
        public readonly string? Name;
        /// <summary>
        /// The privileges associated with the role.
        /// </summary>
        public readonly ImmutableArray<string> RolePrivileges;

        [OutputConstructor]
        private GetRoleResult(
            string? description,

            string id,

            string label,

            string? name,

            ImmutableArray<string> rolePrivileges)
        {
            Description = description;
            Id = id;
            Label = label;
            Name = name;
            RolePrivileges = rolePrivileges;
        }
    }
}
