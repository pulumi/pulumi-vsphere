// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere
{
    public static class GetHostVgpuProfile
    {
        /// <summary>
        /// The `vsphere.getHostVgpuProfile` data source can be used to discover the
        /// available vGPU profiles of a vSphere host.
        /// 
        /// ## Example Usage
        /// 
        /// ### to return all vGPU profiles
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datacenter = VSphere.GetDatacenter.Invoke(new()
        ///     {
        ///         Name = "dc-01",
        ///     });
        /// 
        ///     var host = VSphere.GetHost.Invoke(new()
        ///     {
        ///         Name = "esxi-01.example.com",
        ///         DatacenterId = datacenter.Apply(getDatacenterResult =&gt; getDatacenterResult.Id),
        ///     });
        /// 
        ///     var vgpuProfile = VSphere.GetHostVgpuProfile.Invoke(new()
        ///     {
        ///         HostId = host.Apply(getHostResult =&gt; getHostResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### with vGPU profile name_regex
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datacenter = VSphere.GetDatacenter.Invoke(new()
        ///     {
        ///         Name = "dc-01",
        ///     });
        /// 
        ///     var host = VSphere.GetHost.Invoke(new()
        ///     {
        ///         Name = "esxi-01.example.com",
        ///         DatacenterId = datacenter.Apply(getDatacenterResult =&gt; getDatacenterResult.Id),
        ///     });
        /// 
        ///     var vgpuProfile = VSphere.GetHostVgpuProfile.Invoke(new()
        ///     {
        ///         HostId = host.Apply(getHostResult =&gt; getHostResult.Id),
        ///         NameRegex = "a100",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetHostVgpuProfileResult> InvokeAsync(GetHostVgpuProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostVgpuProfileResult>("vsphere:index/getHostVgpuProfile:getHostVgpuProfile", args ?? new GetHostVgpuProfileArgs(), options.WithDefaults());

        /// <summary>
        /// The `vsphere.getHostVgpuProfile` data source can be used to discover the
        /// available vGPU profiles of a vSphere host.
        /// 
        /// ## Example Usage
        /// 
        /// ### to return all vGPU profiles
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datacenter = VSphere.GetDatacenter.Invoke(new()
        ///     {
        ///         Name = "dc-01",
        ///     });
        /// 
        ///     var host = VSphere.GetHost.Invoke(new()
        ///     {
        ///         Name = "esxi-01.example.com",
        ///         DatacenterId = datacenter.Apply(getDatacenterResult =&gt; getDatacenterResult.Id),
        ///     });
        /// 
        ///     var vgpuProfile = VSphere.GetHostVgpuProfile.Invoke(new()
        ///     {
        ///         HostId = host.Apply(getHostResult =&gt; getHostResult.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### with vGPU profile name_regex
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var datacenter = VSphere.GetDatacenter.Invoke(new()
        ///     {
        ///         Name = "dc-01",
        ///     });
        /// 
        ///     var host = VSphere.GetHost.Invoke(new()
        ///     {
        ///         Name = "esxi-01.example.com",
        ///         DatacenterId = datacenter.Apply(getDatacenterResult =&gt; getDatacenterResult.Id),
        ///     });
        /// 
        ///     var vgpuProfile = VSphere.GetHostVgpuProfile.Invoke(new()
        ///     {
        ///         HostId = host.Apply(getHostResult =&gt; getHostResult.Id),
        ///         NameRegex = "a100",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHostVgpuProfileResult> Invoke(GetHostVgpuProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostVgpuProfileResult>("vsphere:index/getHostVgpuProfile:getHostVgpuProfile", args ?? new GetHostVgpuProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostVgpuProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [managed object reference ID](https://www.terraform.io/docs/providers/vsphere/index.html#use-of-managed-object-references-by-the-vsphere-provider) of
        /// a host.
        /// </summary>
        [Input("hostId", required: true)]
        public string HostId { get; set; } = null!;

        /// <summary>
        /// A regular expression that will be used to match the
        /// host vGPU profile name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        public GetHostVgpuProfileArgs()
        {
        }
        public static new GetHostVgpuProfileArgs Empty => new GetHostVgpuProfileArgs();
    }

    public sealed class GetHostVgpuProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The [managed object reference ID](https://www.terraform.io/docs/providers/vsphere/index.html#use-of-managed-object-references-by-the-vsphere-provider) of
        /// a host.
        /// </summary>
        [Input("hostId", required: true)]
        public Input<string> HostId { get; set; } = null!;

        /// <summary>
        /// A regular expression that will be used to match the
        /// host vGPU profile name.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        public GetHostVgpuProfileInvokeArgs()
        {
        }
        public static new GetHostVgpuProfileInvokeArgs Empty => new GetHostVgpuProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostVgpuProfileResult
    {
        /// <summary>
        /// The [managed objectID](https://www.terraform.io/docs/providers/vsphere/index.html#use-of-managed-object-references-by-the-vsphere-provider) of the ESXi host.
        /// </summary>
        public readonly string HostId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Optional) A regular expression that will be used to match the
        /// host vGPU profile name.
        /// </summary>
        public readonly string? NameRegex;
        /// <summary>
        /// The list of available vGPU profiles on the ESXi host.
        /// This may be and empty array if no vGPU profile are identified.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHostVgpuProfileVgpuProfileResult> VgpuProfiles;

        [OutputConstructor]
        private GetHostVgpuProfileResult(
            string hostId,

            string id,

            string? nameRegex,

            ImmutableArray<Outputs.GetHostVgpuProfileVgpuProfileResult> vgpuProfiles)
        {
            HostId = hostId;
            Id = id;
            NameRegex = nameRegex;
            VgpuProfiles = vgpuProfiles;
        }
    }
}
