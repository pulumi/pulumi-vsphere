// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere.Outputs
{

    [OutputType]
    public sealed class VirtualMachineOvfDeploy
    {
        /// <summary>
        /// Allow unverified ssl certificates while deploying ovf/ova from url.
        /// </summary>
        public readonly bool? AllowUnverifiedSslCert;
        /// <summary>
        /// The Deployment option to be chosen. If empty, the default option is used.
        /// </summary>
        public readonly string? DeploymentOption;
        /// <summary>
        /// An optional disk provisioning. If set, all the disks in the deployed ovf will have the same specified disk type (e.g., thin provisioned).
        /// </summary>
        public readonly string? DiskProvisioning;
        /// <summary>
        /// Allow properties with ovf:userConfigurable=false to be set.
        /// </summary>
        public readonly bool? EnableHiddenProperties;
        /// <summary>
        /// The IP allocation policy.
        /// </summary>
        public readonly string? IpAllocationPolicy;
        /// <summary>
        /// The IP protocol.
        /// </summary>
        public readonly string? IpProtocol;
        /// <summary>
        /// The absolute path to the ovf/ova file in the local system.
        /// </summary>
        public readonly string? LocalOvfPath;
        /// <summary>
        /// The mapping of name of network identifiers from the ovf descriptor to network UUID in the VI infrastructure.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? OvfNetworkMap;
        /// <summary>
        /// URL to the remote ovf/ova file to be deployed.
        /// </summary>
        public readonly string? RemoteOvfUrl;

        [OutputConstructor]
        private VirtualMachineOvfDeploy(
            bool? allowUnverifiedSslCert,

            string? deploymentOption,

            string? diskProvisioning,

            bool? enableHiddenProperties,

            string? ipAllocationPolicy,

            string? ipProtocol,

            string? localOvfPath,

            ImmutableDictionary<string, string>? ovfNetworkMap,

            string? remoteOvfUrl)
        {
            AllowUnverifiedSslCert = allowUnverifiedSslCert;
            DeploymentOption = deploymentOption;
            DiskProvisioning = diskProvisioning;
            EnableHiddenProperties = enableHiddenProperties;
            IpAllocationPolicy = ipAllocationPolicy;
            IpProtocol = ipProtocol;
            LocalOvfPath = localOvfPath;
            OvfNetworkMap = ovfNetworkMap;
            RemoteOvfUrl = remoteOvfUrl;
        }
    }
}
