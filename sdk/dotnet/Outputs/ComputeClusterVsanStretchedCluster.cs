// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere.Outputs
{

    [OutputType]
    public sealed class ComputeClusterVsanStretchedCluster
    {
        /// <summary>
        /// The managed object IDs of the hosts to put in the first fault domain.
        /// </summary>
        public readonly ImmutableArray<string> PreferredFaultDomainHostIds;
        /// <summary>
        /// The name of first fault domain. Default is `Preferred`.
        /// </summary>
        public readonly string? PreferredFaultDomainName;
        /// <summary>
        /// The managed object IDs of the hosts to put in the second fault domain.
        /// </summary>
        public readonly ImmutableArray<string> SecondaryFaultDomainHostIds;
        /// <summary>
        /// The name of second fault domain. Default is `Secondary`.
        /// 
        /// &gt; **NOTE:** You must disable vSphere HA before you enable vSAN on the cluster.
        /// You can enable or re-enable vSphere HA after vSAN is configured.
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var computeCluster = new VSphere.ComputeCluster("compute_cluster", new()
        ///     {
        ///         Name = "terraform-compute-cluster-test",
        ///         DatacenterId = datacenter.Id,
        ///         HostSystemIds = new[]
        ///         {
        ///             host.Select(__item =&gt; __item.Id).ToList(),
        ///         },
        ///         DrsEnabled = true,
        ///         DrsAutomationLevel = "fullyAutomated",
        ///         HaEnabled = false,
        ///         VsanEnabled = true,
        ///         VsanEsaEnabled = true,
        ///         VsanDedupEnabled = true,
        ///         VsanCompressionEnabled = true,
        ///         VsanPerformanceEnabled = true,
        ///         VsanVerboseModeEnabled = true,
        ///         VsanNetworkDiagnosticModeEnabled = true,
        ///         VsanUnmapEnabled = true,
        ///         VsanDitEncryptionEnabled = true,
        ///         VsanDitRekeyInterval = 1800,
        ///         VsanDiskGroups = new[]
        ///         {
        ///             new VSphere.Inputs.ComputeClusterVsanDiskGroupArgs
        ///             {
        ///                 Cache = cacheDisks[0],
        ///                 Storages = storageDisks,
        ///             },
        ///         },
        ///         VsanFaultDomains = new[]
        ///         {
        ///             new VSphere.Inputs.ComputeClusterVsanFaultDomainArgs
        ///             {
        ///                 FaultDomains = new[]
        ///                 {
        ///                     new VSphere.Inputs.ComputeClusterVsanFaultDomainFaultDomainArgs
        ///                     {
        ///                         Name = "fd1",
        ///                         HostIds = new[]
        ///                         {
        ///                             faultdomain1Hosts.Select(__item =&gt; __item.Id).ToList(),
        ///                         },
        ///                     },
        ///                     new VSphere.Inputs.ComputeClusterVsanFaultDomainFaultDomainArgs
        ///                     {
        ///                         Name = "fd2",
        ///                         HostIds = new[]
        ///                         {
        ///                             faultdomain2Hosts.Select(__item =&gt; __item.Id).ToList(),
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         VsanStretchedCluster = new VSphere.Inputs.ComputeClusterVsanStretchedClusterArgs
        ///         {
        ///             PreferredFaultDomainHostIds = new[]
        ///             {
        ///                 preferredFaultDomainHost.Select(__item =&gt; __item.Id).ToList(),
        ///             },
        ///             SecondaryFaultDomainHostIds = new[]
        ///             {
        ///                 secondaryFaultDomainHost.Select(__item =&gt; __item.Id).ToList(),
        ///             },
        ///             WitnessNode = witnessHost.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public readonly string? SecondaryFaultDomainName;
        /// <summary>
        /// The managed object IDs of the host selected as witness node when enable stretched cluster.
        /// </summary>
        public readonly string WitnessNode;

        [OutputConstructor]
        private ComputeClusterVsanStretchedCluster(
            ImmutableArray<string> preferredFaultDomainHostIds,

            string? preferredFaultDomainName,

            ImmutableArray<string> secondaryFaultDomainHostIds,

            string? secondaryFaultDomainName,

            string witnessNode)
        {
            PreferredFaultDomainHostIds = preferredFaultDomainHostIds;
            PreferredFaultDomainName = preferredFaultDomainName;
            SecondaryFaultDomainHostIds = secondaryFaultDomainHostIds;
            SecondaryFaultDomainName = secondaryFaultDomainName;
            WitnessNode = witnessNode;
        }
    }
}
