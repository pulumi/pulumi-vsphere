// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere.Outputs
{

    [OutputType]
    public sealed class VirtualMachineCloneCustomizeNetworkInterface
    {
        /// <summary>
        /// A DNS search domain to add to the DNS configuration on the virtual machine.
        /// </summary>
        public readonly string? DnsDomain;
        /// <summary>
        /// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
        /// </summary>
        public readonly ImmutableArray<string> DnsServerLists;
        /// <summary>
        /// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
        /// </summary>
        public readonly string? Ipv4Address;
        /// <summary>
        /// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
        /// </summary>
        public readonly int? Ipv4Netmask;
        /// <summary>
        /// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
        /// </summary>
        public readonly string? Ipv6Address;
        /// <summary>
        /// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
        /// </summary>
        public readonly int? Ipv6Netmask;

        [OutputConstructor]
        private VirtualMachineCloneCustomizeNetworkInterface(
            string? dnsDomain,

            ImmutableArray<string> dnsServerLists,

            string? ipv4Address,

            int? ipv4Netmask,

            string? ipv6Address,

            int? ipv6Netmask)
        {
            DnsDomain = dnsDomain;
            DnsServerLists = dnsServerLists;
            Ipv4Address = ipv4Address;
            Ipv4Netmask = ipv4Netmask;
            Ipv6Address = ipv6Address;
            Ipv6Netmask = ipv6Netmask;
        }
    }
}
