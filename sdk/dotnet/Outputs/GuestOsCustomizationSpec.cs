// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere.Outputs
{

    [OutputType]
    public sealed class GuestOsCustomizationSpec
    {
        /// <summary>
        /// The list of DNS servers for a virtual network adapter with a static IP address.
        /// </summary>
        public readonly ImmutableArray<string> DnsServerLists;
        /// <summary>
        /// A list of DNS search domains to add to the DNS configuration on the virtual machine.
        /// </summary>
        public readonly ImmutableArray<string> DnsSuffixLists;
        /// <summary>
        /// The IPv4 default gateway when using NetworkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
        /// </summary>
        public readonly string? Ipv4Gateway;
        /// <summary>
        /// The IPv6 default gateway when using NetworkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
        /// </summary>
        public readonly string? Ipv6Gateway;
        /// <summary>
        /// A list of configuration options specific to Linux virtual machines.
        /// </summary>
        public readonly Outputs.GuestOsCustomizationSpecLinuxOptions? LinuxOptions;
        /// <summary>
        /// A specification of network interface configuration options.
        /// </summary>
        public readonly ImmutableArray<Outputs.GuestOsCustomizationSpecNetworkInterface> NetworkInterfaces;
        /// <summary>
        /// A list of configuration options specific to Windows virtual machines.
        /// </summary>
        public readonly Outputs.GuestOsCustomizationSpecWindowsOptions? WindowsOptions;
        /// <summary>
        /// Use this option to specify a windows sysprep file directly.
        /// </summary>
        public readonly string? WindowsSysprepText;

        [OutputConstructor]
        private GuestOsCustomizationSpec(
            ImmutableArray<string> dnsServerLists,

            ImmutableArray<string> dnsSuffixLists,

            string? ipv4Gateway,

            string? ipv6Gateway,

            Outputs.GuestOsCustomizationSpecLinuxOptions? linuxOptions,

            ImmutableArray<Outputs.GuestOsCustomizationSpecNetworkInterface> networkInterfaces,

            Outputs.GuestOsCustomizationSpecWindowsOptions? windowsOptions,

            string? windowsSysprepText)
        {
            DnsServerLists = dnsServerLists;
            DnsSuffixLists = dnsSuffixLists;
            Ipv4Gateway = ipv4Gateway;
            Ipv6Gateway = ipv6Gateway;
            LinuxOptions = linuxOptions;
            NetworkInterfaces = networkInterfaces;
            WindowsOptions = windowsOptions;
            WindowsSysprepText = windowsSysprepText;
        }
    }
}
