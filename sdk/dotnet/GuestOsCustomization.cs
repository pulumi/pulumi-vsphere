// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere
{
    /// <summary>
    /// The `vsphere.GuestOsCustomization` resource can be used to a customization specification for a guest operating system.
    /// 
    /// &gt; **NOTE:** The name attribute is unique identifier for the guest OS spec per VC.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using VSphere = Pulumi.VSphere;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var windows = new VSphere.GuestOsCustomization("windows", new()
    ///     {
    ///         Name = "windows",
    ///         Type = "Windows",
    ///         Spec = new VSphere.Inputs.GuestOsCustomizationSpecArgs
    ///         {
    ///             WindowsOptions = new VSphere.Inputs.GuestOsCustomizationSpecWindowsOptionsArgs
    ///             {
    ///                 RunOnceCommandLists = new[]
    ///                 {
    ///                     "command-1",
    ///                     "command-2",
    ///                 },
    ///                 ComputerName = "windows",
    ///                 AutoLogon = false,
    ///                 AutoLogonCount = 0,
    ///                 AdminPassword = "VMware1!",
    ///                 TimeZone = 4,
    ///                 Workgroup = "workgroup",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [VSphereResourceType("vsphere:index/guestOsCustomization:GuestOsCustomization")]
    public partial class GuestOsCustomization : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of last changed version to the customization specification.
        /// </summary>
        [Output("changeVersion")]
        public Output<string> ChangeVersion { get; private set; } = null!;

        /// <summary>
        /// The description for the customization specification.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The time of last modification to the customization specification.
        /// </summary>
        [Output("lastUpdateTime")]
        public Output<string> LastUpdateTime { get; private set; } = null!;

        /// <summary>
        /// The name of the customization specification is the unique identifier per vCenter Server instance.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Container object for the Guest OS properties about to be customized . See virtual machine customizations
        /// </summary>
        [Output("spec")]
        public Output<Outputs.GuestOsCustomizationSpec> Spec { get; private set; } = null!;

        /// <summary>
        /// The type of customization specification: One among: Windows, Linux.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a GuestOsCustomization resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GuestOsCustomization(string name, GuestOsCustomizationArgs args, CustomResourceOptions? options = null)
            : base("vsphere:index/guestOsCustomization:GuestOsCustomization", name, args ?? new GuestOsCustomizationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GuestOsCustomization(string name, Input<string> id, GuestOsCustomizationState? state = null, CustomResourceOptions? options = null)
            : base("vsphere:index/guestOsCustomization:GuestOsCustomization", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GuestOsCustomization resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GuestOsCustomization Get(string name, Input<string> id, GuestOsCustomizationState? state = null, CustomResourceOptions? options = null)
        {
            return new GuestOsCustomization(name, id, state, options);
        }
    }

    public sealed class GuestOsCustomizationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description for the customization specification.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the customization specification is the unique identifier per vCenter Server instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Container object for the Guest OS properties about to be customized . See virtual machine customizations
        /// </summary>
        [Input("spec", required: true)]
        public Input<Inputs.GuestOsCustomizationSpecArgs> Spec { get; set; } = null!;

        /// <summary>
        /// The type of customization specification: One among: Windows, Linux.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GuestOsCustomizationArgs()
        {
        }
        public static new GuestOsCustomizationArgs Empty => new GuestOsCustomizationArgs();
    }

    public sealed class GuestOsCustomizationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of last changed version to the customization specification.
        /// </summary>
        [Input("changeVersion")]
        public Input<string>? ChangeVersion { get; set; }

        /// <summary>
        /// The description for the customization specification.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The time of last modification to the customization specification.
        /// </summary>
        [Input("lastUpdateTime")]
        public Input<string>? LastUpdateTime { get; set; }

        /// <summary>
        /// The name of the customization specification is the unique identifier per vCenter Server instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Container object for the Guest OS properties about to be customized . See virtual machine customizations
        /// </summary>
        [Input("spec")]
        public Input<Inputs.GuestOsCustomizationSpecGetArgs>? Spec { get; set; }

        /// <summary>
        /// The type of customization specification: One among: Windows, Linux.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GuestOsCustomizationState()
        {
        }
        public static new GuestOsCustomizationState Empty => new GuestOsCustomizationState();
    }
}
