// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere
{
    public static class GetContentLibrary
    {
        /// <summary>
        /// The `vsphere.ContentLibrary` data source can be used to discover the ID of a content library.
        /// 
        /// &gt; **NOTE:** This resource requires vCenter Server and is not available on direct ESXi host connections.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var library = VSphere.GetContentLibrary.Invoke(new()
        ///     {
        ///         Name = "Content Library",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetContentLibraryResult> InvokeAsync(GetContentLibraryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContentLibraryResult>("vsphere:index/getContentLibrary:getContentLibrary", args ?? new GetContentLibraryArgs(), options.WithDefaults());

        /// <summary>
        /// The `vsphere.ContentLibrary` data source can be used to discover the ID of a content library.
        /// 
        /// &gt; **NOTE:** This resource requires vCenter Server and is not available on direct ESXi host connections.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using VSphere = Pulumi.VSphere;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var library = VSphere.GetContentLibrary.Invoke(new()
        ///     {
        ///         Name = "Content Library",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetContentLibraryResult> Invoke(GetContentLibraryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContentLibraryResult>("vsphere:index/getContentLibrary:getContentLibrary", args ?? new GetContentLibraryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContentLibraryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the content library.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetContentLibraryArgs()
        {
        }
        public static new GetContentLibraryArgs Empty => new GetContentLibraryArgs();
    }

    public sealed class GetContentLibraryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the content library.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetContentLibraryInvokeArgs()
        {
        }
        public static new GetContentLibraryInvokeArgs Empty => new GetContentLibraryInvokeArgs();
    }


    [OutputType]
    public sealed class GetContentLibraryResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetContentLibraryResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
