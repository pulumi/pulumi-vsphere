// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere
{
    public partial class ComputeClusterVmHostRule : Pulumi.CustomResource
    {
        /// <summary>
        /// When this field is used, the virtual
        /// machines defined in `vm_group_name` will be run on the
        /// hosts defined in this host group.
        /// </summary>
        [Output("affinityHostGroupName")]
        public Output<string?> AffinityHostGroupName { get; private set; } = null!;

        /// <summary>
        /// When this field is used, the
        /// virtual machines defined in `vm_group_name` will _not_ be
        /// run on the hosts defined in this host group.
        /// </summary>
        [Output("antiAffinityHostGroupName")]
        public Output<string?> AntiAffinityHostGroupName { get; private set; } = null!;

        /// <summary>
        /// The managed object reference
        /// ID of the cluster to put the group in.  Forces a new
        /// resource if changed.
        /// </summary>
        [Output("computeClusterId")]
        public Output<string> ComputeClusterId { get; private set; } = null!;

        /// <summary>
        /// Enable this rule in the cluster. Default: `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// When this value is `true`, prevents any virtual
        /// machine operations that may violate this rule. Default: `false`.
        /// </summary>
        [Output("mandatory")]
        public Output<bool?> Mandatory { get; private set; } = null!;

        /// <summary>
        /// The name of the rule. This must be unique in the
        /// cluster.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the virtual machine group to use
        /// with this rule.
        /// </summary>
        [Output("vmGroupName")]
        public Output<string> VmGroupName { get; private set; } = null!;


        /// <summary>
        /// Create a ComputeClusterVmHostRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ComputeClusterVmHostRule(string name, ComputeClusterVmHostRuleArgs args, CustomResourceOptions? options = null)
            : base("vsphere:index/computeClusterVmHostRule:ComputeClusterVmHostRule", name, args ?? new ComputeClusterVmHostRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ComputeClusterVmHostRule(string name, Input<string> id, ComputeClusterVmHostRuleState? state = null, CustomResourceOptions? options = null)
            : base("vsphere:index/computeClusterVmHostRule:ComputeClusterVmHostRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ComputeClusterVmHostRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ComputeClusterVmHostRule Get(string name, Input<string> id, ComputeClusterVmHostRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ComputeClusterVmHostRule(name, id, state, options);
        }
    }

    public sealed class ComputeClusterVmHostRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// When this field is used, the virtual
        /// machines defined in `vm_group_name` will be run on the
        /// hosts defined in this host group.
        /// </summary>
        [Input("affinityHostGroupName")]
        public Input<string>? AffinityHostGroupName { get; set; }

        /// <summary>
        /// When this field is used, the
        /// virtual machines defined in `vm_group_name` will _not_ be
        /// run on the hosts defined in this host group.
        /// </summary>
        [Input("antiAffinityHostGroupName")]
        public Input<string>? AntiAffinityHostGroupName { get; set; }

        /// <summary>
        /// The managed object reference
        /// ID of the cluster to put the group in.  Forces a new
        /// resource if changed.
        /// </summary>
        [Input("computeClusterId", required: true)]
        public Input<string> ComputeClusterId { get; set; } = null!;

        /// <summary>
        /// Enable this rule in the cluster. Default: `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// When this value is `true`, prevents any virtual
        /// machine operations that may violate this rule. Default: `false`.
        /// </summary>
        [Input("mandatory")]
        public Input<bool>? Mandatory { get; set; }

        /// <summary>
        /// The name of the rule. This must be unique in the
        /// cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the virtual machine group to use
        /// with this rule.
        /// </summary>
        [Input("vmGroupName", required: true)]
        public Input<string> VmGroupName { get; set; } = null!;

        public ComputeClusterVmHostRuleArgs()
        {
        }
    }

    public sealed class ComputeClusterVmHostRuleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// When this field is used, the virtual
        /// machines defined in `vm_group_name` will be run on the
        /// hosts defined in this host group.
        /// </summary>
        [Input("affinityHostGroupName")]
        public Input<string>? AffinityHostGroupName { get; set; }

        /// <summary>
        /// When this field is used, the
        /// virtual machines defined in `vm_group_name` will _not_ be
        /// run on the hosts defined in this host group.
        /// </summary>
        [Input("antiAffinityHostGroupName")]
        public Input<string>? AntiAffinityHostGroupName { get; set; }

        /// <summary>
        /// The managed object reference
        /// ID of the cluster to put the group in.  Forces a new
        /// resource if changed.
        /// </summary>
        [Input("computeClusterId")]
        public Input<string>? ComputeClusterId { get; set; }

        /// <summary>
        /// Enable this rule in the cluster. Default: `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// When this value is `true`, prevents any virtual
        /// machine operations that may violate this rule. Default: `false`.
        /// </summary>
        [Input("mandatory")]
        public Input<bool>? Mandatory { get; set; }

        /// <summary>
        /// The name of the rule. This must be unique in the
        /// cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the virtual machine group to use
        /// with this rule.
        /// </summary>
        [Input("vmGroupName")]
        public Input<string>? VmGroupName { get; set; }

        public ComputeClusterVmHostRuleState()
        {
        }
    }
}
