// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere
{
    /// <summary>
    /// The `vsphere..ContentLibrary` resource can be used to manage Content Libraries.
    /// 
    /// &gt; **NOTE:** This resource requires vCenter and is not available on direct ESXi
    /// connections.
    /// </summary>
    public partial class ContentLibrary : Pulumi.CustomResource
    {
        /// <summary>
        /// A description of the Content Library.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the Content Library.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The [managed object reference ID][docs-about-morefs] on which to store Content Library
        /// items.
        /// </summary>
        [Output("storageBackings")]
        public Output<ImmutableArray<string>> StorageBackings { get; private set; } = null!;


        /// <summary>
        /// Create a ContentLibrary resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContentLibrary(string name, ContentLibraryArgs args, CustomResourceOptions? options = null)
            : base("vsphere:index/contentLibrary:ContentLibrary", name, args ?? new ContentLibraryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContentLibrary(string name, Input<string> id, ContentLibraryState? state = null, CustomResourceOptions? options = null)
            : base("vsphere:index/contentLibrary:ContentLibrary", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContentLibrary resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContentLibrary Get(string name, Input<string> id, ContentLibraryState? state = null, CustomResourceOptions? options = null)
        {
            return new ContentLibrary(name, id, state, options);
        }
    }

    public sealed class ContentLibraryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the Content Library.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Content Library.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("storageBackings", required: true)]
        private InputList<string>? _storageBackings;

        /// <summary>
        /// The [managed object reference ID][docs-about-morefs] on which to store Content Library
        /// items.
        /// </summary>
        public InputList<string> StorageBackings
        {
            get => _storageBackings ?? (_storageBackings = new InputList<string>());
            set => _storageBackings = value;
        }

        public ContentLibraryArgs()
        {
        }
    }

    public sealed class ContentLibraryState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the Content Library.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Content Library.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("storageBackings")]
        private InputList<string>? _storageBackings;

        /// <summary>
        /// The [managed object reference ID][docs-about-morefs] on which to store Content Library
        /// items.
        /// </summary>
        public InputList<string> StorageBackings
        {
            get => _storageBackings ?? (_storageBackings = new InputList<string>());
            set => _storageBackings = value;
        }

        public ContentLibraryState()
        {
        }
    }
}
