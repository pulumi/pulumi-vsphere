// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.VSphere
{
    /// <summary>
    /// Provides a resource for configuring a Virtual Machine class.
    /// 
    /// ## Example Usage
    /// 
    /// ### s
    /// 
    /// **Create a basic class**
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using VSphere = Pulumi.VSphere;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var basicClass = new VSphere.VirtualMachineClass("basic_class", new()
    ///     {
    ///         Name = "basic-class",
    ///         Cpus = 4,
    ///         Memory = 4096,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// **Create a class with a vGPU**
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using VSphere = Pulumi.VSphere;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vgpClass = new VSphere.VirtualMachineClass("vgp_class", new()
    ///     {
    ///         Name = "vgpu-class",
    ///         Cpus = 4,
    ///         Memory = 4096,
    ///         MemoryReservation = 100,
    ///         VgpuDevices = new[]
    ///         {
    ///             "vgpu1",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [VSphereResourceType("vsphere:index/virtualMachineClass:VirtualMachineClass")]
    public partial class VirtualMachineClass : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The percentage of the available CPU capacity which will be reserved.
        /// </summary>
        [Output("cpuReservation")]
        public Output<int?> CpuReservation { get; private set; } = null!;

        /// <summary>
        /// The number of CPUs.
        /// </summary>
        [Output("cpus")]
        public Output<int> Cpus { get; private set; } = null!;

        /// <summary>
        /// The amount of memory in MB.
        /// </summary>
        [Output("memory")]
        public Output<int> Memory { get; private set; } = null!;

        /// <summary>
        /// The percentage of memory reservation.
        /// </summary>
        [Output("memoryReservation")]
        public Output<int?> MemoryReservation { get; private set; } = null!;

        /// <summary>
        /// The name for the class.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
        /// </summary>
        [Output("vgpuDevices")]
        public Output<ImmutableArray<string>> VgpuDevices { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachineClass resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachineClass(string name, VirtualMachineClassArgs args, CustomResourceOptions? options = null)
            : base("vsphere:index/virtualMachineClass:VirtualMachineClass", name, args ?? new VirtualMachineClassArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachineClass(string name, Input<string> id, VirtualMachineClassState? state = null, CustomResourceOptions? options = null)
            : base("vsphere:index/virtualMachineClass:VirtualMachineClass", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachineClass resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachineClass Get(string name, Input<string> id, VirtualMachineClassState? state = null, CustomResourceOptions? options = null)
        {
            return new VirtualMachineClass(name, id, state, options);
        }
    }

    public sealed class VirtualMachineClassArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The percentage of the available CPU capacity which will be reserved.
        /// </summary>
        [Input("cpuReservation")]
        public Input<int>? CpuReservation { get; set; }

        /// <summary>
        /// The number of CPUs.
        /// </summary>
        [Input("cpus", required: true)]
        public Input<int> Cpus { get; set; } = null!;

        /// <summary>
        /// The amount of memory in MB.
        /// </summary>
        [Input("memory", required: true)]
        public Input<int> Memory { get; set; } = null!;

        /// <summary>
        /// The percentage of memory reservation.
        /// </summary>
        [Input("memoryReservation")]
        public Input<int>? MemoryReservation { get; set; }

        /// <summary>
        /// The name for the class.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("vgpuDevices")]
        private InputList<string>? _vgpuDevices;

        /// <summary>
        /// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
        /// </summary>
        public InputList<string> VgpuDevices
        {
            get => _vgpuDevices ?? (_vgpuDevices = new InputList<string>());
            set => _vgpuDevices = value;
        }

        public VirtualMachineClassArgs()
        {
        }
        public static new VirtualMachineClassArgs Empty => new VirtualMachineClassArgs();
    }

    public sealed class VirtualMachineClassState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The percentage of the available CPU capacity which will be reserved.
        /// </summary>
        [Input("cpuReservation")]
        public Input<int>? CpuReservation { get; set; }

        /// <summary>
        /// The number of CPUs.
        /// </summary>
        [Input("cpus")]
        public Input<int>? Cpus { get; set; }

        /// <summary>
        /// The amount of memory in MB.
        /// </summary>
        [Input("memory")]
        public Input<int>? Memory { get; set; }

        /// <summary>
        /// The percentage of memory reservation.
        /// </summary>
        [Input("memoryReservation")]
        public Input<int>? MemoryReservation { get; set; }

        /// <summary>
        /// The name for the class.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("vgpuDevices")]
        private InputList<string>? _vgpuDevices;

        /// <summary>
        /// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
        /// </summary>
        public InputList<string> VgpuDevices
        {
            get => _vgpuDevices ?? (_vgpuDevices = new InputList<string>());
            set => _vgpuDevices = value;
        }

        public VirtualMachineClassState()
        {
        }
        public static new VirtualMachineClassState Empty => new VirtualMachineClassState();
    }
}
