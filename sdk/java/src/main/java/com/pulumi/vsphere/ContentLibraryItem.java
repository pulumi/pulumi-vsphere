// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vsphere.ContentLibraryItemArgs;
import com.pulumi.vsphere.Utilities;
import com.pulumi.vsphere.inputs.ContentLibraryItemState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The `vsphere.ContentLibraryItem` resource can be used to create items in a
 * vSphere content library. The `fileUrl` must be accessible from the vSphere
 * environment as it will be downloaded from the specified location and stored
 * on the content library&#39;s storage backing.
 * 
 * ## Example Usage
 * 
 * The first example below imports an OVF Template to a content
 * library.
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vsphere.VsphereFunctions;
 * import com.pulumi.vsphere.inputs.GetDatacenterArgs;
 * import com.pulumi.vsphere.inputs.GetContentLibraryArgs;
 * import com.pulumi.vsphere.ContentLibraryItem;
 * import com.pulumi.vsphere.ContentLibraryItemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var datacenter = VsphereFunctions.getDatacenter(GetDatacenterArgs.builder()
 *             .name("dc-01")
 *             .build());
 * 
 *         final var contentLibrary = VsphereFunctions.getContentLibrary(GetContentLibraryArgs.builder()
 *             .name("clb-01")
 *             .build());
 * 
 *         var contentLibraryItem = new ContentLibraryItem("contentLibraryItem", ContentLibraryItemArgs.builder()
 *             .name("ovf-linux-ubuntu-server-lts")
 *             .description("Ubuntu Server LTS OVF Template")
 *             .fileUrl("https://releases.example.com/ubuntu/ubuntu/ubuntu-live-server-amd64.ovf")
 *             .libraryId(contentLibrary.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * The next example imports an .iso image to a content library.
 * 
 * [tf-vsphere-vm-resource]: /docs/providers/vsphere/r/virtual_machine.html
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vsphere.VsphereFunctions;
 * import com.pulumi.vsphere.inputs.GetDatacenterArgs;
 * import com.pulumi.vsphere.inputs.GetContentLibraryArgs;
 * import com.pulumi.vsphere.ContentLibraryItem;
 * import com.pulumi.vsphere.ContentLibraryItemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var datacenter = VsphereFunctions.getDatacenter(GetDatacenterArgs.builder()
 *             .name("dc-01")
 *             .build());
 * 
 *         final var contentLibrary = VsphereFunctions.getContentLibrary(GetContentLibraryArgs.builder()
 *             .name("clb-01")
 *             .build());
 * 
 *         var contentLibraryItem = new ContentLibraryItem("contentLibraryItem", ContentLibraryItemArgs.builder()
 *             .name("iso-linux-ubuntu-server-lts")
 *             .description("Ubuntu Server LTS .iso")
 *             .type("iso")
 *             .fileUrl("https://releases.example.com/ubuntu/ubuntu-live-server-amd64.iso")
 *             .libraryId(contentLibrary.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * The last example imports a virtual machine image to a content library from an
 * existing virtual machine.
 * 
 * [tf-vsphere-vm-resource]: /docs/providers/vsphere/r/virtual_machine.html
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vsphere.VsphereFunctions;
 * import com.pulumi.vsphere.inputs.GetDatacenterArgs;
 * import com.pulumi.vsphere.inputs.GetContentLibraryArgs;
 * import com.pulumi.vsphere.ContentLibraryItem;
 * import com.pulumi.vsphere.ContentLibraryItemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var datacenter = VsphereFunctions.getDatacenter(GetDatacenterArgs.builder()
 *             .name("dc-01")
 *             .build());
 * 
 *         final var contentLibrary = VsphereFunctions.getContentLibrary(GetContentLibraryArgs.builder()
 *             .name("clb-01")
 *             .build());
 * 
 *         var contentLibraryItem = new ContentLibraryItem("contentLibraryItem", ContentLibraryItemArgs.builder()
 *             .name("tpl-linux-ubuntu-server-lts")
 *             .description("Ubuntu Server LTS")
 *             .sourceUuid("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx")
 *             .libraryId(contentLibrary.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * An existing content library item can be imported into this resource by
 * 
 * supplying the content library ID. An example is below:
 * 
 * [docs-import]: https://developer.hashicorp.com/terraform/cli/import
 * 
 * ```sh
 * $ pulumi import vsphere:index/contentLibraryItem:ContentLibraryItem vsphere_content_library_item iso-linux-ubuntu-server-lts xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
 * ```
 * 
 */
@ResourceType(type="vsphere:index/contentLibraryItem:ContentLibraryItem")
public class ContentLibraryItem extends com.pulumi.resources.CustomResource {
    /**
     * A description for the content library item.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description for the content library item.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * File to import as the content library item.
     * 
     */
    @Export(name="fileUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> fileUrl;

    /**
     * @return File to import as the content library item.
     * 
     */
    public Output<Optional<String>> fileUrl() {
        return Codegen.optional(this.fileUrl);
    }
    /**
     * The ID of the content library in which to create the item.
     * 
     */
    @Export(name="libraryId", refs={String.class}, tree="[0]")
    private Output<String> libraryId;

    /**
     * @return The ID of the content library in which to create the item.
     * 
     */
    public Output<String> libraryId() {
        return this.libraryId;
    }
    /**
     * The name of the item to be created in the content library.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the item to be created in the content library.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Virtual machine UUID to clone to content library.
     * 
     */
    @Export(name="sourceUuid", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceUuid;

    /**
     * @return Virtual machine UUID to clone to content library.
     * 
     */
    public Output<Optional<String>> sourceUuid() {
        return Codegen.optional(this.sourceUuid);
    }
    /**
     * Type of content library item.
     * One of &#34;ovf&#34;, &#34;iso&#34;, or &#34;vm-template&#34;. Default: `ovf`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return Type of content library item.
     * One of &#34;ovf&#34;, &#34;iso&#34;, or &#34;vm-template&#34;. Default: `ovf`.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ContentLibraryItem(java.lang.String name) {
        this(name, ContentLibraryItemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ContentLibraryItem(java.lang.String name, ContentLibraryItemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ContentLibraryItem(java.lang.String name, ContentLibraryItemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/contentLibraryItem:ContentLibraryItem", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ContentLibraryItem(java.lang.String name, Output<java.lang.String> id, @Nullable ContentLibraryItemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/contentLibraryItem:ContentLibraryItem", name, state, makeResourceOptions(options, id), false);
    }

    private static ContentLibraryItemArgs makeArgs(ContentLibraryItemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ContentLibraryItemArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ContentLibraryItem get(java.lang.String name, Output<java.lang.String> id, @Nullable ContentLibraryItemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ContentLibraryItem(name, id, state, options);
    }
}
