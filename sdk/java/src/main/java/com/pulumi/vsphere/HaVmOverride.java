// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vsphere.HaVmOverrideArgs;
import com.pulumi.vsphere.Utilities;
import com.pulumi.vsphere.inputs.HaVmOverrideState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="vsphere:index/haVmOverride:HaVmOverride")
public class HaVmOverride extends com.pulumi.resources.CustomResource {
    /**
     * The managed object reference
     * ID of the cluster to put the override in.  Forces a new
     * resource if changed.
     * 
     */
    @Export(name="computeClusterId", type=String.class, parameters={})
    private Output<String> computeClusterId;

    /**
     * @return The managed object reference
     * ID of the cluster to put the override in.  Forces a new
     * resource if changed.
     * 
     */
    public Output<String> computeClusterId() {
        return this.computeClusterId;
    }
    /**
     * Controls the action to take
     * on this virtual machine if an APD status on an affected datastore clears in
     * the middle of an APD event. Can be one of `useClusterDefault`, `none` or
     * `reset`.  Default: `useClusterDefault`.
     * 
     */
    @Export(name="haDatastoreApdRecoveryAction", type=String.class, parameters={})
    private Output</* @Nullable */ String> haDatastoreApdRecoveryAction;

    /**
     * @return Controls the action to take
     * on this virtual machine if an APD status on an affected datastore clears in
     * the middle of an APD event. Can be one of `useClusterDefault`, `none` or
     * `reset`.  Default: `useClusterDefault`.
     * 
     */
    public Output<Optional<String>> haDatastoreApdRecoveryAction() {
        return Codegen.optional(this.haDatastoreApdRecoveryAction);
    }
    /**
     * Controls the action to take on this
     * virtual machine when the cluster has detected loss to all paths to a relevant
     * datastore. Can be one of `clusterDefault`, `disabled`, `warning`,
     * `restartConservative`, or `restartAggressive`.  Default: `clusterDefault`.
     * 
     */
    @Export(name="haDatastoreApdResponse", type=String.class, parameters={})
    private Output</* @Nullable */ String> haDatastoreApdResponse;

    /**
     * @return Controls the action to take on this
     * virtual machine when the cluster has detected loss to all paths to a relevant
     * datastore. Can be one of `clusterDefault`, `disabled`, `warning`,
     * `restartConservative`, or `restartAggressive`.  Default: `clusterDefault`.
     * 
     */
    public Output<Optional<String>> haDatastoreApdResponse() {
        return Codegen.optional(this.haDatastoreApdResponse);
    }
    /**
     * Controls the delay in seconds
     * to wait after an APD timeout event to execute the response action defined in
     * `ha_datastore_apd_response`. Use `-1` to use
     * the cluster default. Default: `-1`.
     * 
     */
    @Export(name="haDatastoreApdResponseDelay", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> haDatastoreApdResponseDelay;

    /**
     * @return Controls the delay in seconds
     * to wait after an APD timeout event to execute the response action defined in
     * `ha_datastore_apd_response`. Use `-1` to use
     * the cluster default. Default: `-1`.
     * 
     */
    public Output<Optional<Integer>> haDatastoreApdResponseDelay() {
        return Codegen.optional(this.haDatastoreApdResponseDelay);
    }
    /**
     * Controls the action to take on this
     * virtual machine when the cluster has detected a permanent device loss to a
     * relevant datastore. Can be one of `clusterDefault`, `disabled`, `warning`, or
     * `restartAggressive`. Default: `clusterDefault`.
     * 
     */
    @Export(name="haDatastorePdlResponse", type=String.class, parameters={})
    private Output</* @Nullable */ String> haDatastorePdlResponse;

    /**
     * @return Controls the action to take on this
     * virtual machine when the cluster has detected a permanent device loss to a
     * relevant datastore. Can be one of `clusterDefault`, `disabled`, `warning`, or
     * `restartAggressive`. Default: `clusterDefault`.
     * 
     */
    public Output<Optional<String>> haDatastorePdlResponse() {
        return Codegen.optional(this.haDatastorePdlResponse);
    }
    /**
     * The action to take on this virtual
     * machine when a host has detected that it has been isolated from the rest of
     * the cluster. Can be one of `clusterIsolationResponse`, `none`, `powerOff`, or
     * `shutdown`. Default: `clusterIsolationResponse`.
     * 
     */
    @Export(name="haHostIsolationResponse", type=String.class, parameters={})
    private Output</* @Nullable */ String> haHostIsolationResponse;

    /**
     * @return The action to take on this virtual
     * machine when a host has detected that it has been isolated from the rest of
     * the cluster. Can be one of `clusterIsolationResponse`, `none`, `powerOff`, or
     * `shutdown`. Default: `clusterIsolationResponse`.
     * 
     */
    public Output<Optional<String>> haHostIsolationResponse() {
        return Codegen.optional(this.haHostIsolationResponse);
    }
    /**
     * If a heartbeat from this virtual
     * machine is not received within this configured interval, the virtual machine
     * is marked as failed. The value is in seconds. Default: `30`.
     * 
     */
    @Export(name="haVmFailureInterval", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> haVmFailureInterval;

    /**
     * @return If a heartbeat from this virtual
     * machine is not received within this configured interval, the virtual machine
     * is marked as failed. The value is in seconds. Default: `30`.
     * 
     */
    public Output<Optional<Integer>> haVmFailureInterval() {
        return Codegen.optional(this.haVmFailureInterval);
    }
    /**
     * The length of the reset window in
     * which `ha_vm_maximum_resets` can operate. When this
     * window expires, no more resets are attempted regardless of the setting
     * configured in `ha_vm_maximum_resets`. `-1` means no window, meaning an
     * unlimited reset time is allotted. The value is specified in seconds. Default:
     * `-1` (no window).
     * 
     */
    @Export(name="haVmMaximumFailureWindow", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> haVmMaximumFailureWindow;

    /**
     * @return The length of the reset window in
     * which `ha_vm_maximum_resets` can operate. When this
     * window expires, no more resets are attempted regardless of the setting
     * configured in `ha_vm_maximum_resets`. `-1` means no window, meaning an
     * unlimited reset time is allotted. The value is specified in seconds. Default:
     * `-1` (no window).
     * 
     */
    public Output<Optional<Integer>> haVmMaximumFailureWindow() {
        return Codegen.optional(this.haVmMaximumFailureWindow);
    }
    /**
     * The maximum number of resets that HA will
     * perform to this virtual machine when responding to a failure event. Default:
     * `3`
     * 
     */
    @Export(name="haVmMaximumResets", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> haVmMaximumResets;

    /**
     * @return The maximum number of resets that HA will
     * perform to this virtual machine when responding to a failure event. Default:
     * `3`
     * 
     */
    public Output<Optional<Integer>> haVmMaximumResets() {
        return Codegen.optional(this.haVmMaximumResets);
    }
    /**
     * The time, in seconds, that HA waits after
     * powering on this virtual machine before monitoring for heartbeats. Default:
     * `120` (2 minutes).
     * 
     */
    @Export(name="haVmMinimumUptime", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> haVmMinimumUptime;

    /**
     * @return The time, in seconds, that HA waits after
     * powering on this virtual machine before monitoring for heartbeats. Default:
     * `120` (2 minutes).
     * 
     */
    public Output<Optional<Integer>> haVmMinimumUptime() {
        return Codegen.optional(this.haVmMinimumUptime);
    }
    /**
     * The type of virtual machine monitoring to use
     * when HA is enabled in the cluster. Can be one of `vmMonitoringDisabled`,
     * `vmMonitoringOnly`, or `vmAndAppMonitoring`. Default: `vmMonitoringDisabled`.
     * 
     */
    @Export(name="haVmMonitoring", type=String.class, parameters={})
    private Output</* @Nullable */ String> haVmMonitoring;

    /**
     * @return The type of virtual machine monitoring to use
     * when HA is enabled in the cluster. Can be one of `vmMonitoringDisabled`,
     * `vmMonitoringOnly`, or `vmAndAppMonitoring`. Default: `vmMonitoringDisabled`.
     * 
     */
    public Output<Optional<String>> haVmMonitoring() {
        return Codegen.optional(this.haVmMonitoring);
    }
    /**
     * Determines whether or
     * not the cluster&#39;s default settings or the VM override settings specified in
     * this resource are used for virtual machine monitoring. The default is `true`
     * (use cluster defaults) - set to `false` to have overrides take effect.
     * 
     */
    @Export(name="haVmMonitoringUseClusterDefaults", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> haVmMonitoringUseClusterDefaults;

    /**
     * @return Determines whether or
     * not the cluster&#39;s default settings or the VM override settings specified in
     * this resource are used for virtual machine monitoring. The default is `true`
     * (use cluster defaults) - set to `false` to have overrides take effect.
     * 
     */
    public Output<Optional<Boolean>> haVmMonitoringUseClusterDefaults() {
        return Codegen.optional(this.haVmMonitoringUseClusterDefaults);
    }
    /**
     * The restart priority for the virtual
     * machine when vSphere detects a host failure. Can be one of
     * `clusterRestartPriority`, `lowest`, `low`, `medium`, `high`, `highest`, or `disabled`.
     * Default: `clusterRestartPriority`.
     * 
     */
    @Export(name="haVmRestartPriority", type=String.class, parameters={})
    private Output</* @Nullable */ String> haVmRestartPriority;

    /**
     * @return The restart priority for the virtual
     * machine when vSphere detects a host failure. Can be one of
     * `clusterRestartPriority`, `lowest`, `low`, `medium`, `high`, `highest`, or `disabled`.
     * Default: `clusterRestartPriority`.
     * 
     */
    public Output<Optional<String>> haVmRestartPriority() {
        return Codegen.optional(this.haVmRestartPriority);
    }
    /**
     * The maximum time, in seconds, that
     * vSphere HA will wait for this virtual machine to be ready. Use `-1` to
     * specify the cluster default.  Default: `-1`.
     * 
     */
    @Export(name="haVmRestartTimeout", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> haVmRestartTimeout;

    /**
     * @return The maximum time, in seconds, that
     * vSphere HA will wait for this virtual machine to be ready. Use `-1` to
     * specify the cluster default.  Default: `-1`.
     * 
     */
    public Output<Optional<Integer>> haVmRestartTimeout() {
        return Codegen.optional(this.haVmRestartTimeout);
    }
    /**
     * The UUID of the virtual machine to create
     * the override for.  Forces a new resource if changed.
     * 
     */
    @Export(name="virtualMachineId", type=String.class, parameters={})
    private Output<String> virtualMachineId;

    /**
     * @return The UUID of the virtual machine to create
     * the override for.  Forces a new resource if changed.
     * 
     */
    public Output<String> virtualMachineId() {
        return this.virtualMachineId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HaVmOverride(String name) {
        this(name, HaVmOverrideArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HaVmOverride(String name, HaVmOverrideArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HaVmOverride(String name, HaVmOverrideArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/haVmOverride:HaVmOverride", name, args == null ? HaVmOverrideArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private HaVmOverride(String name, Output<String> id, @Nullable HaVmOverrideState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/haVmOverride:HaVmOverride", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HaVmOverride get(String name, Output<String> id, @Nullable HaVmOverrideState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HaVmOverride(name, id, state, options);
    }
}
