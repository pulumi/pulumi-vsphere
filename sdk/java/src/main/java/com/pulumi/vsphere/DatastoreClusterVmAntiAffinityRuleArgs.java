// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastoreClusterVmAntiAffinityRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatastoreClusterVmAntiAffinityRuleArgs Empty = new DatastoreClusterVmAntiAffinityRuleArgs();

    /**
     * The managed object reference
     * ID of the datastore cluster to put the group in.  Forces
     * a new resource if changed.
     * 
     */
    @Import(name="datastoreClusterId", required=true)
    private Output<String> datastoreClusterId;

    /**
     * @return The managed object reference
     * ID of the datastore cluster to put the group in.  Forces
     * a new resource if changed.
     * 
     */
    public Output<String> datastoreClusterId() {
        return this.datastoreClusterId;
    }

    /**
     * Enable this rule in the cluster. Default: `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable this rule in the cluster. Default: `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * When this value is `true`, prevents any virtual
     * machine operations that may violate this rule. Default: `false`.
     * 
     */
    @Import(name="mandatory")
    private @Nullable Output<Boolean> mandatory;

    /**
     * @return When this value is `true`, prevents any virtual
     * machine operations that may violate this rule. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> mandatory() {
        return Optional.ofNullable(this.mandatory);
    }

    /**
     * The name of the rule. This must be unique in the cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the rule. This must be unique in the cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The UUIDs of the virtual machines to run
     * on different datastores from each other.
     * 
     * &gt; **NOTE:** The minimum length of `virtual_machine_ids` is 2.
     * 
     */
    @Import(name="virtualMachineIds", required=true)
    private Output<List<String>> virtualMachineIds;

    /**
     * @return The UUIDs of the virtual machines to run
     * on different datastores from each other.
     * 
     * &gt; **NOTE:** The minimum length of `virtual_machine_ids` is 2.
     * 
     */
    public Output<List<String>> virtualMachineIds() {
        return this.virtualMachineIds;
    }

    private DatastoreClusterVmAntiAffinityRuleArgs() {}

    private DatastoreClusterVmAntiAffinityRuleArgs(DatastoreClusterVmAntiAffinityRuleArgs $) {
        this.datastoreClusterId = $.datastoreClusterId;
        this.enabled = $.enabled;
        this.mandatory = $.mandatory;
        this.name = $.name;
        this.virtualMachineIds = $.virtualMachineIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastoreClusterVmAntiAffinityRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastoreClusterVmAntiAffinityRuleArgs $;

        public Builder() {
            $ = new DatastoreClusterVmAntiAffinityRuleArgs();
        }

        public Builder(DatastoreClusterVmAntiAffinityRuleArgs defaults) {
            $ = new DatastoreClusterVmAntiAffinityRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datastoreClusterId The managed object reference
         * ID of the datastore cluster to put the group in.  Forces
         * a new resource if changed.
         * 
         * @return builder
         * 
         */
        public Builder datastoreClusterId(Output<String> datastoreClusterId) {
            $.datastoreClusterId = datastoreClusterId;
            return this;
        }

        /**
         * @param datastoreClusterId The managed object reference
         * ID of the datastore cluster to put the group in.  Forces
         * a new resource if changed.
         * 
         * @return builder
         * 
         */
        public Builder datastoreClusterId(String datastoreClusterId) {
            return datastoreClusterId(Output.of(datastoreClusterId));
        }

        /**
         * @param enabled Enable this rule in the cluster. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable this rule in the cluster. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param mandatory When this value is `true`, prevents any virtual
         * machine operations that may violate this rule. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder mandatory(@Nullable Output<Boolean> mandatory) {
            $.mandatory = mandatory;
            return this;
        }

        /**
         * @param mandatory When this value is `true`, prevents any virtual
         * machine operations that may violate this rule. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder mandatory(Boolean mandatory) {
            return mandatory(Output.of(mandatory));
        }

        /**
         * @param name The name of the rule. This must be unique in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the rule. This must be unique in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param virtualMachineIds The UUIDs of the virtual machines to run
         * on different datastores from each other.
         * 
         * &gt; **NOTE:** The minimum length of `virtual_machine_ids` is 2.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(Output<List<String>> virtualMachineIds) {
            $.virtualMachineIds = virtualMachineIds;
            return this;
        }

        /**
         * @param virtualMachineIds The UUIDs of the virtual machines to run
         * on different datastores from each other.
         * 
         * &gt; **NOTE:** The minimum length of `virtual_machine_ids` is 2.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(List<String> virtualMachineIds) {
            return virtualMachineIds(Output.of(virtualMachineIds));
        }

        /**
         * @param virtualMachineIds The UUIDs of the virtual machines to run
         * on different datastores from each other.
         * 
         * &gt; **NOTE:** The minimum length of `virtual_machine_ids` is 2.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(String... virtualMachineIds) {
            return virtualMachineIds(List.of(virtualMachineIds));
        }

        public DatastoreClusterVmAntiAffinityRuleArgs build() {
            if ($.datastoreClusterId == null) {
                throw new MissingRequiredPropertyException("DatastoreClusterVmAntiAffinityRuleArgs", "datastoreClusterId");
            }
            if ($.virtualMachineIds == null) {
                throw new MissingRequiredPropertyException("DatastoreClusterVmAntiAffinityRuleArgs", "virtualMachineIds");
            }
            return $;
        }
    }

}
