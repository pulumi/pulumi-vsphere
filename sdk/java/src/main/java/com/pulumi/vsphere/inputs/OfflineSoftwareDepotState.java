// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.vsphere.inputs.OfflineSoftwareDepotComponentArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OfflineSoftwareDepotState extends com.pulumi.resources.ResourceArgs {

    public static final OfflineSoftwareDepotState Empty = new OfflineSoftwareDepotState();

    /**
     * The list of custom components in the depot.
     * 
     */
    @Import(name="components")
    private @Nullable Output<List<OfflineSoftwareDepotComponentArgs>> components;

    /**
     * @return The list of custom components in the depot.
     * 
     */
    public Optional<Output<List<OfflineSoftwareDepotComponentArgs>>> components() {
        return Optional.ofNullable(this.components);
    }

    /**
     * The URL where the depot source is hosted.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The URL where the depot source is hosted.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    private OfflineSoftwareDepotState() {}

    private OfflineSoftwareDepotState(OfflineSoftwareDepotState $) {
        this.components = $.components;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OfflineSoftwareDepotState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OfflineSoftwareDepotState $;

        public Builder() {
            $ = new OfflineSoftwareDepotState();
        }

        public Builder(OfflineSoftwareDepotState defaults) {
            $ = new OfflineSoftwareDepotState(Objects.requireNonNull(defaults));
        }

        /**
         * @param components The list of custom components in the depot.
         * 
         * @return builder
         * 
         */
        public Builder components(@Nullable Output<List<OfflineSoftwareDepotComponentArgs>> components) {
            $.components = components;
            return this;
        }

        /**
         * @param components The list of custom components in the depot.
         * 
         * @return builder
         * 
         */
        public Builder components(List<OfflineSoftwareDepotComponentArgs> components) {
            return components(Output.of(components));
        }

        /**
         * @param components The list of custom components in the depot.
         * 
         * @return builder
         * 
         */
        public Builder components(OfflineSoftwareDepotComponentArgs... components) {
            return components(List.of(components));
        }

        /**
         * @param location The URL where the depot source is hosted.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The URL where the depot source is hosted.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public OfflineSoftwareDepotState build() {
            return $;
        }
    }

}
