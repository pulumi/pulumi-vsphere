// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetLicenseResult {
    /**
     * @return The product edition of the license key.
     * 
     */
    private String editionKey;
    private String id;
    /**
     * @return A map of key/value pairs attached as labels (tags) to the license key.
     * 
     */
    private Map<String,String> labels;
    private String licenseKey;
    /**
     * @return The display name for the license.
     * 
     */
    private String name;
    /**
     * @return Total number of units (example: CPUs) contained in the license.
     * 
     */
    private Integer total;
    /**
     * @return The number of units (example: CPUs) assigned to this license.
     * 
     */
    private Integer used;

    private GetLicenseResult() {}
    /**
     * @return The product edition of the license key.
     * 
     */
    public String editionKey() {
        return this.editionKey;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return A map of key/value pairs attached as labels (tags) to the license key.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    public String licenseKey() {
        return this.licenseKey;
    }
    /**
     * @return The display name for the license.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Total number of units (example: CPUs) contained in the license.
     * 
     */
    public Integer total() {
        return this.total;
    }
    /**
     * @return The number of units (example: CPUs) assigned to this license.
     * 
     */
    public Integer used() {
        return this.used;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLicenseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String editionKey;
        private String id;
        private Map<String,String> labels;
        private String licenseKey;
        private String name;
        private Integer total;
        private Integer used;
        public Builder() {}
        public Builder(GetLicenseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.editionKey = defaults.editionKey;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.licenseKey = defaults.licenseKey;
    	      this.name = defaults.name;
    	      this.total = defaults.total;
    	      this.used = defaults.used;
        }

        @CustomType.Setter
        public Builder editionKey(String editionKey) {
            this.editionKey = Objects.requireNonNull(editionKey);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder licenseKey(String licenseKey) {
            this.licenseKey = Objects.requireNonNull(licenseKey);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder total(Integer total) {
            this.total = Objects.requireNonNull(total);
            return this;
        }
        @CustomType.Setter
        public Builder used(Integer used) {
            this.used = Objects.requireNonNull(used);
            return this;
        }
        public GetLicenseResult build() {
            final var o = new GetLicenseResult();
            o.editionKey = editionKey;
            o.id = id;
            o.labels = labels;
            o.licenseKey = licenseKey;
            o.name = name;
            o.total = total;
            o.used = used;
            return o;
        }
    }
}
