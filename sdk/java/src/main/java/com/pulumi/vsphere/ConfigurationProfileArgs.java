// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationProfileArgs Empty = new ConfigurationProfileArgs();

    /**
     * The identifier of the cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The identifier of the cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * The configuration JSON provided as a plain string. This argument can only be specified if `reference_host_id` is not set.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<String> configuration;

    /**
     * @return The configuration JSON provided as a plain string. This argument can only be specified if `reference_host_id` is not set.
     * 
     */
    public Optional<Output<String>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * The identifier of the host to use as a configuration source.
     * The host needs to be a member of the cluster identified by `cluster_id`. This argument can only be specified if
     * `configuration` is not set.
     * 
     */
    @Import(name="referenceHostId")
    private @Nullable Output<String> referenceHostId;

    /**
     * @return The identifier of the host to use as a configuration source.
     * The host needs to be a member of the cluster identified by `cluster_id`. This argument can only be specified if
     * `configuration` is not set.
     * 
     */
    public Optional<Output<String>> referenceHostId() {
        return Optional.ofNullable(this.referenceHostId);
    }

    private ConfigurationProfileArgs() {}

    private ConfigurationProfileArgs(ConfigurationProfileArgs $) {
        this.clusterId = $.clusterId;
        this.configuration = $.configuration;
        this.referenceHostId = $.referenceHostId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationProfileArgs $;

        public Builder() {
            $ = new ConfigurationProfileArgs();
        }

        public Builder(ConfigurationProfileArgs defaults) {
            $ = new ConfigurationProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The identifier of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The identifier of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param configuration The configuration JSON provided as a plain string. This argument can only be specified if `reference_host_id` is not set.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<String> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration The configuration JSON provided as a plain string. This argument can only be specified if `reference_host_id` is not set.
         * 
         * @return builder
         * 
         */
        public Builder configuration(String configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param referenceHostId The identifier of the host to use as a configuration source.
         * The host needs to be a member of the cluster identified by `cluster_id`. This argument can only be specified if
         * `configuration` is not set.
         * 
         * @return builder
         * 
         */
        public Builder referenceHostId(@Nullable Output<String> referenceHostId) {
            $.referenceHostId = referenceHostId;
            return this;
        }

        /**
         * @param referenceHostId The identifier of the host to use as a configuration source.
         * The host needs to be a member of the cluster identified by `cluster_id`. This argument can only be specified if
         * `configuration` is not set.
         * 
         * @return builder
         * 
         */
        public Builder referenceHostId(String referenceHostId) {
            return referenceHostId(Output.of(referenceHostId));
        }

        public ConfigurationProfileArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("ConfigurationProfileArgs", "clusterId");
            }
            return $;
        }
    }

}
