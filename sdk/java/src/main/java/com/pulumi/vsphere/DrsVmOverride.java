// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vsphere.DrsVmOverrideArgs;
import com.pulumi.vsphere.Utilities;
import com.pulumi.vsphere.inputs.DrsVmOverrideState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The `vsphere.DrsVmOverride` resource can be used to add a DRS override to a
 * cluster for a specific virtual machine. With this resource, one can enable or
 * disable DRS and control the automation level for a single virtual machine
 * without affecting the rest of the cluster.
 * 
 * For more information on vSphere clusters and DRS, see [this
 * page][ref-vsphere-drs-clusters].
 * 
 * [ref-vsphere-drs-clusters]: https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-resource-management/GUID-8ACF3502-5314-469F-8CC9-4A9BD5925BC2.html
 * 
 * &gt; **NOTE:** This resource requires vCenter and is not available on direct ESXi
 * connections.
 * 
 * ## Import
 * 
 * An existing override can be imported into this resource by
 * 
 * supplying both the path to the cluster, and the path to the virtual machine, to
 * 
 * `pulumi import`. If no override exists, an error will be given.  An example
 * 
 * is below:
 * 
 * ```sh
 * $ pulumi import vsphere:index/drsVmOverride:DrsVmOverride drs_vm_override \
 * ```
 * 
 *   &#39;{&#34;compute_cluster_path&#34;: &#34;/dc1/host/cluster1&#34;, \
 * 
 *   &#34;virtual_machine_path&#34;: &#34;/dc1/vm/srv1&#34;}&#39;
 * 
 */
@ResourceType(type="vsphere:index/drsVmOverride:DrsVmOverride")
public class DrsVmOverride extends com.pulumi.resources.CustomResource {
    /**
     * The managed object reference
     * ID of the cluster to put the override in.  Forces a new
     * resource if changed.
     * 
     */
    @Export(name="computeClusterId", refs={String.class}, tree="[0]")
    private Output<String> computeClusterId;

    /**
     * @return The managed object reference
     * ID of the cluster to put the override in.  Forces a new
     * resource if changed.
     * 
     */
    public Output<String> computeClusterId() {
        return this.computeClusterId;
    }
    /**
     * Overrides the automation level for this virtual
     * machine in the cluster. Can be one of `manual`, `partiallyAutomated`, or
     * `fullyAutomated`. Default: `manual`.
     * 
     * &gt; **NOTE:** Using this resource _always_ implies an override, even if one of
     * `drs_enabled` or `drs_automation_level` is omitted. Take note of the defaults
     * for both options.
     * 
     */
    @Export(name="drsAutomationLevel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> drsAutomationLevel;

    /**
     * @return Overrides the automation level for this virtual
     * machine in the cluster. Can be one of `manual`, `partiallyAutomated`, or
     * `fullyAutomated`. Default: `manual`.
     * 
     * &gt; **NOTE:** Using this resource _always_ implies an override, even if one of
     * `drs_enabled` or `drs_automation_level` is omitted. Take note of the defaults
     * for both options.
     * 
     */
    public Output<Optional<String>> drsAutomationLevel() {
        return Codegen.optional(this.drsAutomationLevel);
    }
    /**
     * Overrides the default DRS setting for this virtual
     * machine. Can be either `true` or `false`. Default: `false`.
     * 
     */
    @Export(name="drsEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> drsEnabled;

    /**
     * @return Overrides the default DRS setting for this virtual
     * machine. Can be either `true` or `false`. Default: `false`.
     * 
     */
    public Output<Optional<Boolean>> drsEnabled() {
        return Codegen.optional(this.drsEnabled);
    }
    /**
     * The UUID of the virtual machine to create
     * the override for.  Forces a new resource if changed.
     * 
     */
    @Export(name="virtualMachineId", refs={String.class}, tree="[0]")
    private Output<String> virtualMachineId;

    /**
     * @return The UUID of the virtual machine to create
     * the override for.  Forces a new resource if changed.
     * 
     */
    public Output<String> virtualMachineId() {
        return this.virtualMachineId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DrsVmOverride(java.lang.String name) {
        this(name, DrsVmOverrideArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DrsVmOverride(java.lang.String name, DrsVmOverrideArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DrsVmOverride(java.lang.String name, DrsVmOverrideArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/drsVmOverride:DrsVmOverride", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DrsVmOverride(java.lang.String name, Output<java.lang.String> id, @Nullable DrsVmOverrideState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/drsVmOverride:DrsVmOverride", name, state, makeResourceOptions(options, id), false);
    }

    private static DrsVmOverrideArgs makeArgs(DrsVmOverrideArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DrsVmOverrideArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DrsVmOverride get(java.lang.String name, Output<java.lang.String> id, @Nullable DrsVmOverrideState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DrsVmOverride(name, id, state, options);
    }
}
