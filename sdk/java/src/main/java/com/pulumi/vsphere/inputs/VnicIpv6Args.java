// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VnicIpv6Args extends com.pulumi.resources.ResourceArgs {

    public static final VnicIpv6Args Empty = new VnicIpv6Args();

    /**
     * List of IPv6 addresses
     * 
     */
    @Import(name="addresses")
    private @Nullable Output<List<String>> addresses;

    /**
     * @return List of IPv6 addresses
     * 
     */
    public Optional<Output<List<String>>> addresses() {
        return Optional.ofNullable(this.addresses);
    }

    /**
     * Use IPv6 Autoconfiguration (RFC2462).
     * 
     */
    @Import(name="autoconfig")
    private @Nullable Output<Boolean> autoconfig;

    /**
     * @return Use IPv6 Autoconfiguration (RFC2462).
     * 
     */
    public Optional<Output<Boolean>> autoconfig() {
        return Optional.ofNullable(this.autoconfig);
    }

    /**
     * Use DHCP to configure the interface&#39;s IPv6 stack.
     * 
     */
    @Import(name="dhcp")
    private @Nullable Output<Boolean> dhcp;

    /**
     * @return Use DHCP to configure the interface&#39;s IPv6 stack.
     * 
     */
    public Optional<Output<Boolean>> dhcp() {
        return Optional.ofNullable(this.dhcp);
    }

    /**
     * IP address of the default gateway, if DHCP or autoconfig is not set.
     * 
     */
    @Import(name="gw")
    private @Nullable Output<String> gw;

    /**
     * @return IP address of the default gateway, if DHCP or autoconfig is not set.
     * 
     */
    public Optional<Output<String>> gw() {
        return Optional.ofNullable(this.gw);
    }

    private VnicIpv6Args() {}

    private VnicIpv6Args(VnicIpv6Args $) {
        this.addresses = $.addresses;
        this.autoconfig = $.autoconfig;
        this.dhcp = $.dhcp;
        this.gw = $.gw;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VnicIpv6Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VnicIpv6Args $;

        public Builder() {
            $ = new VnicIpv6Args();
        }

        public Builder(VnicIpv6Args defaults) {
            $ = new VnicIpv6Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param addresses List of IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder addresses(@Nullable Output<List<String>> addresses) {
            $.addresses = addresses;
            return this;
        }

        /**
         * @param addresses List of IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder addresses(List<String> addresses) {
            return addresses(Output.of(addresses));
        }

        /**
         * @param addresses List of IPv6 addresses
         * 
         * @return builder
         * 
         */
        public Builder addresses(String... addresses) {
            return addresses(List.of(addresses));
        }

        /**
         * @param autoconfig Use IPv6 Autoconfiguration (RFC2462).
         * 
         * @return builder
         * 
         */
        public Builder autoconfig(@Nullable Output<Boolean> autoconfig) {
            $.autoconfig = autoconfig;
            return this;
        }

        /**
         * @param autoconfig Use IPv6 Autoconfiguration (RFC2462).
         * 
         * @return builder
         * 
         */
        public Builder autoconfig(Boolean autoconfig) {
            return autoconfig(Output.of(autoconfig));
        }

        /**
         * @param dhcp Use DHCP to configure the interface&#39;s IPv6 stack.
         * 
         * @return builder
         * 
         */
        public Builder dhcp(@Nullable Output<Boolean> dhcp) {
            $.dhcp = dhcp;
            return this;
        }

        /**
         * @param dhcp Use DHCP to configure the interface&#39;s IPv6 stack.
         * 
         * @return builder
         * 
         */
        public Builder dhcp(Boolean dhcp) {
            return dhcp(Output.of(dhcp));
        }

        /**
         * @param gw IP address of the default gateway, if DHCP or autoconfig is not set.
         * 
         * @return builder
         * 
         */
        public Builder gw(@Nullable Output<String> gw) {
            $.gw = gw;
            return this;
        }

        /**
         * @param gw IP address of the default gateway, if DHCP or autoconfig is not set.
         * 
         * @return builder
         * 
         */
        public Builder gw(String gw) {
            return gw(Output.of(gw));
        }

        public VnicIpv6Args build() {
            return $;
        }
    }

}
