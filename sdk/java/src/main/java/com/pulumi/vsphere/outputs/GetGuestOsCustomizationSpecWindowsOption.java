// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGuestOsCustomizationSpecWindowsOption {
    private String adminPassword;
    private Boolean autoLogon;
    private Integer autoLogonCount;
    private String computerName;
    private @Nullable String domainAdminPassword;
    private String domainAdminUser;
    private String joinDomain;
    private List<String> runOnceCommandLists;
    private Integer timeZone;
    private String workgroup;

    private GetGuestOsCustomizationSpecWindowsOption() {}
    public String adminPassword() {
        return this.adminPassword;
    }
    public Boolean autoLogon() {
        return this.autoLogon;
    }
    public Integer autoLogonCount() {
        return this.autoLogonCount;
    }
    public String computerName() {
        return this.computerName;
    }
    public Optional<String> domainAdminPassword() {
        return Optional.ofNullable(this.domainAdminPassword);
    }
    public String domainAdminUser() {
        return this.domainAdminUser;
    }
    public String joinDomain() {
        return this.joinDomain;
    }
    public List<String> runOnceCommandLists() {
        return this.runOnceCommandLists;
    }
    public Integer timeZone() {
        return this.timeZone;
    }
    public String workgroup() {
        return this.workgroup;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGuestOsCustomizationSpecWindowsOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adminPassword;
        private Boolean autoLogon;
        private Integer autoLogonCount;
        private String computerName;
        private @Nullable String domainAdminPassword;
        private String domainAdminUser;
        private String joinDomain;
        private List<String> runOnceCommandLists;
        private Integer timeZone;
        private String workgroup;
        public Builder() {}
        public Builder(GetGuestOsCustomizationSpecWindowsOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminPassword = defaults.adminPassword;
    	      this.autoLogon = defaults.autoLogon;
    	      this.autoLogonCount = defaults.autoLogonCount;
    	      this.computerName = defaults.computerName;
    	      this.domainAdminPassword = defaults.domainAdminPassword;
    	      this.domainAdminUser = defaults.domainAdminUser;
    	      this.joinDomain = defaults.joinDomain;
    	      this.runOnceCommandLists = defaults.runOnceCommandLists;
    	      this.timeZone = defaults.timeZone;
    	      this.workgroup = defaults.workgroup;
        }

        @CustomType.Setter
        public Builder adminPassword(String adminPassword) {
            if (adminPassword == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "adminPassword");
            }
            this.adminPassword = adminPassword;
            return this;
        }
        @CustomType.Setter
        public Builder autoLogon(Boolean autoLogon) {
            if (autoLogon == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "autoLogon");
            }
            this.autoLogon = autoLogon;
            return this;
        }
        @CustomType.Setter
        public Builder autoLogonCount(Integer autoLogonCount) {
            if (autoLogonCount == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "autoLogonCount");
            }
            this.autoLogonCount = autoLogonCount;
            return this;
        }
        @CustomType.Setter
        public Builder computerName(String computerName) {
            if (computerName == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "computerName");
            }
            this.computerName = computerName;
            return this;
        }
        @CustomType.Setter
        public Builder domainAdminPassword(@Nullable String domainAdminPassword) {

            this.domainAdminPassword = domainAdminPassword;
            return this;
        }
        @CustomType.Setter
        public Builder domainAdminUser(String domainAdminUser) {
            if (domainAdminUser == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "domainAdminUser");
            }
            this.domainAdminUser = domainAdminUser;
            return this;
        }
        @CustomType.Setter
        public Builder joinDomain(String joinDomain) {
            if (joinDomain == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "joinDomain");
            }
            this.joinDomain = joinDomain;
            return this;
        }
        @CustomType.Setter
        public Builder runOnceCommandLists(List<String> runOnceCommandLists) {
            if (runOnceCommandLists == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "runOnceCommandLists");
            }
            this.runOnceCommandLists = runOnceCommandLists;
            return this;
        }
        public Builder runOnceCommandLists(String... runOnceCommandLists) {
            return runOnceCommandLists(List.of(runOnceCommandLists));
        }
        @CustomType.Setter
        public Builder timeZone(Integer timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder workgroup(String workgroup) {
            if (workgroup == null) {
              throw new MissingRequiredPropertyException("GetGuestOsCustomizationSpecWindowsOption", "workgroup");
            }
            this.workgroup = workgroup;
            return this;
        }
        public GetGuestOsCustomizationSpecWindowsOption build() {
            final var _resultValue = new GetGuestOsCustomizationSpecWindowsOption();
            _resultValue.adminPassword = adminPassword;
            _resultValue.autoLogon = autoLogon;
            _resultValue.autoLogonCount = autoLogonCount;
            _resultValue.computerName = computerName;
            _resultValue.domainAdminPassword = domainAdminPassword;
            _resultValue.domainAdminUser = domainAdminUser;
            _resultValue.joinDomain = joinDomain;
            _resultValue.runOnceCommandLists = runOnceCommandLists;
            _resultValue.timeZone = timeZone;
            _resultValue.workgroup = workgroup;
            return _resultValue;
        }
    }
}
