// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetFolderPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFolderPlainArgs Empty = new GetFolderPlainArgs();

    /**
     * The absolute path of the folder. For example, given a
     * default datacenter of `default-dc`, a folder of type `vm`, and a folder name
     * of `test-folder`, the resulting path would be
     * `/default-dc/vm/test-folder`. The valid folder types to be used in
     * the path are: `vm`, `host`, `datacenter`, `datastore`, or `network`.
     * 
     */
    @Import(name="path", required=true)
    private String path;

    /**
     * @return The absolute path of the folder. For example, given a
     * default datacenter of `default-dc`, a folder of type `vm`, and a folder name
     * of `test-folder`, the resulting path would be
     * `/default-dc/vm/test-folder`. The valid folder types to be used in
     * the path are: `vm`, `host`, `datacenter`, `datastore`, or `network`.
     * 
     */
    public String path() {
        return this.path;
    }

    private GetFolderPlainArgs() {}

    private GetFolderPlainArgs(GetFolderPlainArgs $) {
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFolderPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFolderPlainArgs $;

        public Builder() {
            $ = new GetFolderPlainArgs();
        }

        public Builder(GetFolderPlainArgs defaults) {
            $ = new GetFolderPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param path The absolute path of the folder. For example, given a
         * default datacenter of `default-dc`, a folder of type `vm`, and a folder name
         * of `test-folder`, the resulting path would be
         * `/default-dc/vm/test-folder`. The valid folder types to be used in
         * the path are: `vm`, `host`, `datacenter`, `datastore`, or `network`.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            $.path = path;
            return this;
        }

        public GetFolderPlainArgs build() {
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
