// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDynamicResult {
    private List<String> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String nameRegex;
    private @Nullable String type;

    private GetDynamicResult() {}
    public List<String> filters() {
        return this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDynamicResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> filters;
        private String id;
        private @Nullable String nameRegex;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetDynamicResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.nameRegex = defaults.nameRegex;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder filters(List<String> filters) {
            if (filters == null) {
              throw new MissingRequiredPropertyException("GetDynamicResult", "filters");
            }
            this.filters = filters;
            return this;
        }
        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDynamicResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public GetDynamicResult build() {
            final var _resultValue = new GetDynamicResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.nameRegex = nameRegex;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
