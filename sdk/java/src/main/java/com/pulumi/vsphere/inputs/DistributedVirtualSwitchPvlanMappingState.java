// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributedVirtualSwitchPvlanMappingState extends com.pulumi.resources.ResourceArgs {

    public static final DistributedVirtualSwitchPvlanMappingState Empty = new DistributedVirtualSwitchPvlanMappingState();

    /**
     * The ID of the distributed virtual switch to attach this mapping to.
     * 
     */
    @Import(name="distributedVirtualSwitchId")
    private @Nullable Output<String> distributedVirtualSwitchId;

    /**
     * @return The ID of the distributed virtual switch to attach this mapping to.
     * 
     */
    public Optional<Output<String>> distributedVirtualSwitchId() {
        return Optional.ofNullable(this.distributedVirtualSwitchId);
    }

    /**
     * The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     * 
     */
    @Import(name="primaryVlanId")
    private @Nullable Output<Integer> primaryVlanId;

    /**
     * @return The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     * 
     */
    public Optional<Output<Integer>> primaryVlanId() {
        return Optional.ofNullable(this.primaryVlanId);
    }

    /**
     * The private VLAN type. Valid values are promiscuous, community and isolated.
     * 
     */
    @Import(name="pvlanType")
    private @Nullable Output<String> pvlanType;

    /**
     * @return The private VLAN type. Valid values are promiscuous, community and isolated.
     * 
     */
    public Optional<Output<String>> pvlanType() {
        return Optional.ofNullable(this.pvlanType);
    }

    /**
     * The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     * 
     */
    @Import(name="secondaryVlanId")
    private @Nullable Output<Integer> secondaryVlanId;

    /**
     * @return The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     * 
     */
    public Optional<Output<Integer>> secondaryVlanId() {
        return Optional.ofNullable(this.secondaryVlanId);
    }

    private DistributedVirtualSwitchPvlanMappingState() {}

    private DistributedVirtualSwitchPvlanMappingState(DistributedVirtualSwitchPvlanMappingState $) {
        this.distributedVirtualSwitchId = $.distributedVirtualSwitchId;
        this.primaryVlanId = $.primaryVlanId;
        this.pvlanType = $.pvlanType;
        this.secondaryVlanId = $.secondaryVlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributedVirtualSwitchPvlanMappingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributedVirtualSwitchPvlanMappingState $;

        public Builder() {
            $ = new DistributedVirtualSwitchPvlanMappingState();
        }

        public Builder(DistributedVirtualSwitchPvlanMappingState defaults) {
            $ = new DistributedVirtualSwitchPvlanMappingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param distributedVirtualSwitchId The ID of the distributed virtual switch to attach this mapping to.
         * 
         * @return builder
         * 
         */
        public Builder distributedVirtualSwitchId(@Nullable Output<String> distributedVirtualSwitchId) {
            $.distributedVirtualSwitchId = distributedVirtualSwitchId;
            return this;
        }

        /**
         * @param distributedVirtualSwitchId The ID of the distributed virtual switch to attach this mapping to.
         * 
         * @return builder
         * 
         */
        public Builder distributedVirtualSwitchId(String distributedVirtualSwitchId) {
            return distributedVirtualSwitchId(Output.of(distributedVirtualSwitchId));
        }

        /**
         * @param primaryVlanId The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
         * 
         * @return builder
         * 
         */
        public Builder primaryVlanId(@Nullable Output<Integer> primaryVlanId) {
            $.primaryVlanId = primaryVlanId;
            return this;
        }

        /**
         * @param primaryVlanId The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
         * 
         * @return builder
         * 
         */
        public Builder primaryVlanId(Integer primaryVlanId) {
            return primaryVlanId(Output.of(primaryVlanId));
        }

        /**
         * @param pvlanType The private VLAN type. Valid values are promiscuous, community and isolated.
         * 
         * @return builder
         * 
         */
        public Builder pvlanType(@Nullable Output<String> pvlanType) {
            $.pvlanType = pvlanType;
            return this;
        }

        /**
         * @param pvlanType The private VLAN type. Valid values are promiscuous, community and isolated.
         * 
         * @return builder
         * 
         */
        public Builder pvlanType(String pvlanType) {
            return pvlanType(Output.of(pvlanType));
        }

        /**
         * @param secondaryVlanId The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
         * 
         * @return builder
         * 
         */
        public Builder secondaryVlanId(@Nullable Output<Integer> secondaryVlanId) {
            $.secondaryVlanId = secondaryVlanId;
            return this;
        }

        /**
         * @param secondaryVlanId The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
         * 
         * @return builder
         * 
         */
        public Builder secondaryVlanId(Integer secondaryVlanId) {
            return secondaryVlanId(Output.of(secondaryVlanId));
        }

        public DistributedVirtualSwitchPvlanMappingState build() {
            return $;
        }
    }

}
