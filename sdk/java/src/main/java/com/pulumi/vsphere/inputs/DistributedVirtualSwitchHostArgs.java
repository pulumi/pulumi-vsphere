// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DistributedVirtualSwitchHostArgs extends com.pulumi.resources.ResourceArgs {

    public static final DistributedVirtualSwitchHostArgs Empty = new DistributedVirtualSwitchHostArgs();

    /**
     * Name of the physical NIC to be added to the proxy switch.
     * 
     */
    @Import(name="devices")
    private @Nullable Output<List<String>> devices;

    /**
     * @return Name of the physical NIC to be added to the proxy switch.
     * 
     */
    public Optional<Output<List<String>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    /**
     * The managed object ID of the host this specification applies to.
     * 
     */
    @Import(name="hostSystemId", required=true)
    private Output<String> hostSystemId;

    /**
     * @return The managed object ID of the host this specification applies to.
     * 
     */
    public Output<String> hostSystemId() {
        return this.hostSystemId;
    }

    private DistributedVirtualSwitchHostArgs() {}

    private DistributedVirtualSwitchHostArgs(DistributedVirtualSwitchHostArgs $) {
        this.devices = $.devices;
        this.hostSystemId = $.hostSystemId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DistributedVirtualSwitchHostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DistributedVirtualSwitchHostArgs $;

        public Builder() {
            $ = new DistributedVirtualSwitchHostArgs();
        }

        public Builder(DistributedVirtualSwitchHostArgs defaults) {
            $ = new DistributedVirtualSwitchHostArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param devices Name of the physical NIC to be added to the proxy switch.
         * 
         * @return builder
         * 
         */
        public Builder devices(@Nullable Output<List<String>> devices) {
            $.devices = devices;
            return this;
        }

        /**
         * @param devices Name of the physical NIC to be added to the proxy switch.
         * 
         * @return builder
         * 
         */
        public Builder devices(List<String> devices) {
            return devices(Output.of(devices));
        }

        /**
         * @param devices Name of the physical NIC to be added to the proxy switch.
         * 
         * @return builder
         * 
         */
        public Builder devices(String... devices) {
            return devices(List.of(devices));
        }

        /**
         * @param hostSystemId The managed object ID of the host this specification applies to.
         * 
         * @return builder
         * 
         */
        public Builder hostSystemId(Output<String> hostSystemId) {
            $.hostSystemId = hostSystemId;
            return this;
        }

        /**
         * @param hostSystemId The managed object ID of the host this specification applies to.
         * 
         * @return builder
         * 
         */
        public Builder hostSystemId(String hostSystemId) {
            return hostSystemId(Output.of(hostSystemId));
        }

        public DistributedVirtualSwitchHostArgs build() {
            if ($.hostSystemId == null) {
                throw new MissingRequiredPropertyException("DistributedVirtualSwitchHostArgs", "hostSystemId");
            }
            return $;
        }
    }

}
