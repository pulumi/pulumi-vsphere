// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class DistributedVirtualSwitchVlanRange {
    /**
     * @return The minimum VLAN to use in the range.
     * 
     */
    private Integer maxVlan;
    /**
     * @return The minimum VLAN to use in the range.
     * 
     */
    private Integer minVlan;

    private DistributedVirtualSwitchVlanRange() {}
    /**
     * @return The minimum VLAN to use in the range.
     * 
     */
    public Integer maxVlan() {
        return this.maxVlan;
    }
    /**
     * @return The minimum VLAN to use in the range.
     * 
     */
    public Integer minVlan() {
        return this.minVlan;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DistributedVirtualSwitchVlanRange defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxVlan;
        private Integer minVlan;
        public Builder() {}
        public Builder(DistributedVirtualSwitchVlanRange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxVlan = defaults.maxVlan;
    	      this.minVlan = defaults.minVlan;
        }

        @CustomType.Setter
        public Builder maxVlan(Integer maxVlan) {
            if (maxVlan == null) {
              throw new MissingRequiredPropertyException("DistributedVirtualSwitchVlanRange", "maxVlan");
            }
            this.maxVlan = maxVlan;
            return this;
        }
        @CustomType.Setter
        public Builder minVlan(Integer minVlan) {
            if (minVlan == null) {
              throw new MissingRequiredPropertyException("DistributedVirtualSwitchVlanRange", "minVlan");
            }
            this.minVlan = minVlan;
            return this;
        }
        public DistributedVirtualSwitchVlanRange build() {
            final var _resultValue = new DistributedVirtualSwitchVlanRange();
            _resultValue.maxVlan = maxVlan;
            _resultValue.minVlan = minVlan;
            return _resultValue;
        }
    }
}
