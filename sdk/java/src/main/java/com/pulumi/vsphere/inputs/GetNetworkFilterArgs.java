// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNetworkFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetNetworkFilterArgs Empty = new GetNetworkFilterArgs();

    /**
     * This is required if you have multiple port groups with the same name. This will be one of `DistributedVirtualPortgroup` for distributed port groups, `Network` for standard (host-based) port groups, or `OpaqueNetwork` for networks managed externally, such as those managed by NSX.
     * 
     */
    @Import(name="networkType")
    private @Nullable Output<String> networkType;

    /**
     * @return This is required if you have multiple port groups with the same name. This will be one of `DistributedVirtualPortgroup` for distributed port groups, `Network` for standard (host-based) port groups, or `OpaqueNetwork` for networks managed externally, such as those managed by NSX.
     * 
     */
    public Optional<Output<String>> networkType() {
        return Optional.ofNullable(this.networkType);
    }

    private GetNetworkFilterArgs() {}

    private GetNetworkFilterArgs(GetNetworkFilterArgs $) {
        this.networkType = $.networkType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkFilterArgs $;

        public Builder() {
            $ = new GetNetworkFilterArgs();
        }

        public Builder(GetNetworkFilterArgs defaults) {
            $ = new GetNetworkFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkType This is required if you have multiple port groups with the same name. This will be one of `DistributedVirtualPortgroup` for distributed port groups, `Network` for standard (host-based) port groups, or `OpaqueNetwork` for networks managed externally, such as those managed by NSX.
         * 
         * @return builder
         * 
         */
        public Builder networkType(@Nullable Output<String> networkType) {
            $.networkType = networkType;
            return this;
        }

        /**
         * @param networkType This is required if you have multiple port groups with the same name. This will be one of `DistributedVirtualPortgroup` for distributed port groups, `Network` for standard (host-based) port groups, or `OpaqueNetwork` for networks managed externally, such as those managed by NSX.
         * 
         * @return builder
         * 
         */
        public Builder networkType(String networkType) {
            return networkType(Output.of(networkType));
        }

        public GetNetworkFilterArgs build() {
            return $;
        }
    }

}
