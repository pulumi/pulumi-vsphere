// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vsphere.Utilities;
import com.pulumi.vsphere.VmStoragePolicyArgs;
import com.pulumi.vsphere.inputs.VmStoragePolicyState;
import com.pulumi.vsphere.outputs.VmStoragePolicyTagRule;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The `vsphere.VmStoragePolicy` resource can be used to create and manage storage
 * policies. Using this resource, tag based placement rules can be created to
 * place virtual machines on a datastore with matching tags. If storage requirements for the applications on the virtual machine change, you can modify the storage policy that was originally applied to the virtual machine.
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="vsphere:index/vmStoragePolicy:VmStoragePolicy")
public class VmStoragePolicy extends com.pulumi.resources.CustomResource {
    /**
     * Description of the storage policy.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the storage policy.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The name of the storage policy.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the storage policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * List of tag rules. The tag category and tags to be associated to this storage policy.
     * 
     */
    @Export(name="tagRules", type=List.class, parameters={VmStoragePolicyTagRule.class})
    private Output<List<VmStoragePolicyTagRule>> tagRules;

    /**
     * @return List of tag rules. The tag category and tags to be associated to this storage policy.
     * 
     */
    public Output<List<VmStoragePolicyTagRule>> tagRules() {
        return this.tagRules;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VmStoragePolicy(String name) {
        this(name, VmStoragePolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VmStoragePolicy(String name, VmStoragePolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VmStoragePolicy(String name, VmStoragePolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/vmStoragePolicy:VmStoragePolicy", name, args == null ? VmStoragePolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VmStoragePolicy(String name, Output<String> id, @Nullable VmStoragePolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/vmStoragePolicy:VmStoragePolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VmStoragePolicy get(String name, Output<String> id, @Nullable VmStoragePolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VmStoragePolicy(name, id, state, options);
    }
}
