// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConfigurationProfileResult {
    private String clusterId;
    /**
     * @return The current configuration which is active on the cluster.
     * 
     */
    private String configuration;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The JSON schema for the profile.
     * 
     */
    private String schema;

    private GetConfigurationProfileResult() {}
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The current configuration which is active on the cluster.
     * 
     */
    public String configuration() {
        return this.configuration;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The JSON schema for the profile.
     * 
     */
    public String schema() {
        return this.schema;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String configuration;
        private String id;
        private String schema;
        public Builder() {}
        public Builder(GetConfigurationProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.configuration = defaults.configuration;
    	      this.id = defaults.id;
    	      this.schema = defaults.schema;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder configuration(String configuration) {
            if (configuration == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "configuration");
            }
            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder schema(String schema) {
            if (schema == null) {
              throw new MissingRequiredPropertyException("GetConfigurationProfileResult", "schema");
            }
            this.schema = schema;
            return this;
        }
        public GetConfigurationProfileResult build() {
            final var _resultValue = new GetConfigurationProfileResult();
            _resultValue.clusterId = clusterId;
            _resultValue.configuration = configuration;
            _resultValue.id = id;
            _resultValue.schema = schema;
            return _resultValue;
        }
    }
}
