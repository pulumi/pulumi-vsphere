// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetVappContainerPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVappContainerPlainArgs Empty = new GetVappContainerPlainArgs();

    /**
     * The managed object reference ID
     * of the datacenter in which the vApp container is located.
     * 
     */
    @Import(name="datacenterId", required=true)
    private String datacenterId;

    /**
     * @return The managed object reference ID
     * of the datacenter in which the vApp container is located.
     * 
     */
    public String datacenterId() {
        return this.datacenterId;
    }

    /**
     * The name of the vApp container. This can be a name or
     * path.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the vApp container. This can be a name or
     * path.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetVappContainerPlainArgs() {}

    private GetVappContainerPlainArgs(GetVappContainerPlainArgs $) {
        this.datacenterId = $.datacenterId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVappContainerPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVappContainerPlainArgs $;

        public Builder() {
            $ = new GetVappContainerPlainArgs();
        }

        public Builder(GetVappContainerPlainArgs defaults) {
            $ = new GetVappContainerPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenterId The managed object reference ID
         * of the datacenter in which the vApp container is located.
         * 
         * @return builder
         * 
         */
        public Builder datacenterId(String datacenterId) {
            $.datacenterId = datacenterId;
            return this;
        }

        /**
         * @param name The name of the vApp container. This can be a name or
         * path.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetVappContainerPlainArgs build() {
            if ($.datacenterId == null) {
                throw new MissingRequiredPropertyException("GetVappContainerPlainArgs", "datacenterId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetVappContainerPlainArgs", "name");
            }
            return $;
        }
    }

}
