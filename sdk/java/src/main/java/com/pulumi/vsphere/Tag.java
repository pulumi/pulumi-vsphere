// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vsphere.TagArgs;
import com.pulumi.vsphere.Utilities;
import com.pulumi.vsphere.inputs.TagState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The `vsphere.Tag` resource can be used to create and manage tags, which allow
 * you to attach metadata to objects in the vSphere inventory to make these
 * objects more sortable and searchable.
 * 
 * For more information about tags, click [here][ext-tags-general].
 * 
 * [ext-tags-general]: https://techdocs.broadcom.com/us/en/vmware-cis/vsphere/vsphere/8-0/vsphere-tags-and-attributes.html
 * 
 * ## Example Usage
 * 
 * This example creates a tag named `test-tag`. This tag is assigned the
 * `test-category` category, which was created by the
 * `vsphere.TagCategory` resource. The resulting
 * tag can be assigned to VMs and datastores only, and can be the only value in
 * the category that can be assigned, as per the restrictions defined by the
 * category.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vsphere.TagCategory;
 * import com.pulumi.vsphere.TagCategoryArgs;
 * import com.pulumi.vsphere.Tag;
 * import com.pulumi.vsphere.TagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var category = new TagCategory("category", TagCategoryArgs.builder()
 *             .name("test-category")
 *             .cardinality("SINGLE")
 *             .description("Managed by Pulumi")
 *             .associableTypes(            
 *                 "VirtualMachine",
 *                 "Datastore")
 *             .build());
 * 
 *         var tag = new Tag("tag", TagArgs.builder()
 *             .name("test-tag")
 *             .categoryId(category.id())
 *             .description("Managed by Pulumi")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Using Tags in a Supported Resource
 * 
 * Tags can be applied to vSphere resources via the `tags` argument
 * in any supported resource.
 * 
 * The following example builds on the above example by creating a
 * `vsphere.VirtualMachine` and applying the
 * created tag to it:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vsphere.TagCategory;
 * import com.pulumi.vsphere.TagCategoryArgs;
 * import com.pulumi.vsphere.Tag;
 * import com.pulumi.vsphere.TagArgs;
 * import com.pulumi.vsphere.VirtualMachine;
 * import com.pulumi.vsphere.VirtualMachineArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var category = new TagCategory("category", TagCategoryArgs.builder()
 *             .name("test-category")
 *             .cardinality("SINGLE")
 *             .description("Managed by Pulumi")
 *             .associableTypes(            
 *                 "VirtualMachine",
 *                 "Datastore")
 *             .build());
 * 
 *         var tag = new Tag("tag", TagArgs.builder()
 *             .name("test-tag")
 *             .categoryId(category.id())
 *             .description("Managed by Pulumi")
 *             .build());
 * 
 *         var web = new VirtualMachine("web", VirtualMachineArgs.builder()
 *             .tags(tag.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * An existing tag can be imported into this resource by supplying
 * 
 * both the tag&#39;s category name and the name of the tag as a JSON string to
 * 
 * `pulumi import`, as per the example below:
 * 
 * [docs-import]: https://developer.hashicorp.com/terraform/cli/import
 * 
 * ```sh
 * $ pulumi import vsphere:index/tag:Tag tag \
 * ```
 * 
 *   &#39;{&#34;category_name&#34;: &#34;pulumi-test-category&#34;, &#34;tag_name&#34;: &#34;pulumi-test-tag&#34;}&#39;
 * 
 */
@ResourceType(type="vsphere:index/tag:Tag")
public class Tag extends com.pulumi.resources.CustomResource {
    /**
     * The unique identifier of the parent category in
     * which this tag will be created. Forces a new resource if changed.
     * 
     */
    @Export(name="categoryId", refs={String.class}, tree="[0]")
    private Output<String> categoryId;

    /**
     * @return The unique identifier of the parent category in
     * which this tag will be created. Forces a new resource if changed.
     * 
     */
    public Output<String> categoryId() {
        return this.categoryId;
    }
    /**
     * A description for the tag.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description for the tag.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The display name of the tag. The name must be unique
     * within its category.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The display name of the tag. The name must be unique
     * within its category.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Tag(java.lang.String name) {
        this(name, TagArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Tag(java.lang.String name, TagArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Tag(java.lang.String name, TagArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/tag:Tag", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Tag(java.lang.String name, Output<java.lang.String> id, @Nullable TagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/tag:Tag", name, state, makeResourceOptions(options, id), false);
    }

    private static TagArgs makeArgs(TagArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TagArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Tag get(java.lang.String name, Output<java.lang.String> id, @Nullable TagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Tag(name, id, state, options);
    }
}
