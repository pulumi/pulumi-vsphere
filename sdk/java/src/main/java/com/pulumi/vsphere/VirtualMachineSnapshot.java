// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vsphere.Utilities;
import com.pulumi.vsphere.VirtualMachineSnapshotArgs;
import com.pulumi.vsphere.inputs.VirtualMachineSnapshotState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The `vsphere.VirtualMachineSnapshot` resource can be used to manage snapshots
 * for a virtual machine.
 * 
 * For more information on managing snapshots and how they work in VMware, see
 * [here][ext-vm-snapshot-management].
 * 
 * [ext-vm-snapshot-management]: https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.vm_admin.doc/GUID-CA948C69-7F58-4519-AEB1-739545EA94E5.html
 * 
 * &gt; **NOTE:** A snapshot in VMware differs from traditional disk snapshots, and
 * can contain the actual running state of the virtual machine, data for all disks
 * that have not been set to be independent from the snapshot (including ones that
 * have been attached via the `attach`
 * parameter to the `vsphere.VirtualMachine` `disk` block), and even the
 * configuration of the virtual machine at the time of the snapshot. Virtual
 * machine, disk activity, and configuration changes post-snapshot are not
 * included in the original state. Use this resource with care! Neither VMware nor
 * HashiCorp recommends retaining snapshots for a extended period of time and does
 * NOT recommend using them as as backup feature. For more information on the
 * limitation of virtual machine snapshots, see [here][ext-vm-snap-limitations].
 * 
 * [ext-vm-snap-limitations]: https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.vm_admin.doc/GUID-53F65726-A23B-4CF0-A7D5-48E584B88613.html
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vsphere.VirtualMachineSnapshot;
 * import com.pulumi.vsphere.VirtualMachineSnapshotArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var demo1 = new VirtualMachineSnapshot("demo1", VirtualMachineSnapshotArgs.builder()        
 *             .virtualMachineUuid("9aac5551-a351-4158-8c5c-15a71e8ec5c9")
 *             .snapshotName("Snapshot Name")
 *             .description("This is Demo Snapshot")
 *             .memory("true")
 *             .quiesce("true")
 *             .removeChildren("false")
 *             .consolidate("true")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="vsphere:index/virtualMachineSnapshot:VirtualMachineSnapshot")
public class VirtualMachineSnapshot extends com.pulumi.resources.CustomResource {
    /**
     * If set to `true`, the delta disks involved in this
     * snapshot will be consolidated into the parent when this resource is
     * destroyed.
     * 
     */
    @Export(name="consolidate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> consolidate;

    /**
     * @return If set to `true`, the delta disks involved in this
     * snapshot will be consolidated into the parent when this resource is
     * destroyed.
     * 
     */
    public Output<Optional<Boolean>> consolidate() {
        return Codegen.optional(this.consolidate);
    }
    /**
     * A description for the snapshot.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return A description for the snapshot.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * If set to `true`, a dump of the internal state of the
     * virtual machine is included in the snapshot.
     * 
     */
    @Export(name="memory", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> memory;

    /**
     * @return If set to `true`, a dump of the internal state of the
     * virtual machine is included in the snapshot.
     * 
     */
    public Output<Boolean> memory() {
        return this.memory;
    }
    /**
     * If set to `true`, and the virtual machine is powered
     * on when the snapshot is taken, VMware Tools is used to quiesce the file
     * system in the virtual machine.
     * 
     */
    @Export(name="quiesce", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> quiesce;

    /**
     * @return If set to `true`, and the virtual machine is powered
     * on when the snapshot is taken, VMware Tools is used to quiesce the file
     * system in the virtual machine.
     * 
     */
    public Output<Boolean> quiesce() {
        return this.quiesce;
    }
    /**
     * If set to `true`, the entire snapshot subtree
     * is removed when this resource is destroyed.
     * 
     */
    @Export(name="removeChildren", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> removeChildren;

    /**
     * @return If set to `true`, the entire snapshot subtree
     * is removed when this resource is destroyed.
     * 
     */
    public Output<Optional<Boolean>> removeChildren() {
        return Codegen.optional(this.removeChildren);
    }
    /**
     * The name of the snapshot.
     * 
     */
    @Export(name="snapshotName", refs={String.class}, tree="[0]")
    private Output<String> snapshotName;

    /**
     * @return The name of the snapshot.
     * 
     */
    public Output<String> snapshotName() {
        return this.snapshotName;
    }
    /**
     * The virtual machine UUID.
     * 
     */
    @Export(name="virtualMachineUuid", refs={String.class}, tree="[0]")
    private Output<String> virtualMachineUuid;

    /**
     * @return The virtual machine UUID.
     * 
     */
    public Output<String> virtualMachineUuid() {
        return this.virtualMachineUuid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualMachineSnapshot(String name) {
        this(name, VirtualMachineSnapshotArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualMachineSnapshot(String name, VirtualMachineSnapshotArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualMachineSnapshot(String name, VirtualMachineSnapshotArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/virtualMachineSnapshot:VirtualMachineSnapshot", name, args == null ? VirtualMachineSnapshotArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VirtualMachineSnapshot(String name, Output<String> id, @Nullable VirtualMachineSnapshotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/virtualMachineSnapshot:VirtualMachineSnapshot", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualMachineSnapshot get(String name, Output<String> id, @Nullable VirtualMachineSnapshotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VirtualMachineSnapshot(name, id, state, options);
    }
}
