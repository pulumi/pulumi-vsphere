// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vsphere.TagCategoryArgs;
import com.pulumi.vsphere.Utilities;
import com.pulumi.vsphere.inputs.TagCategoryState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="vsphere:index/tagCategory:TagCategory")
public class TagCategory extends com.pulumi.resources.CustomResource {
    /**
     * A list object types that this category is
     * valid to be assigned to. For a full list, click
     * here.
     * 
     */
    @Export(name="associableTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> associableTypes;

    /**
     * @return A list object types that this category is
     * valid to be assigned to. For a full list, click
     * here.
     * 
     */
    public Output<List<String>> associableTypes() {
        return this.associableTypes;
    }
    /**
     * The number of tags that can be assigned from this
     * category to a single object at once. Can be one of `SINGLE` (object can only
     * be assigned one tag in this category), to `MULTIPLE` (object can be assigned
     * multiple tags in this category). Forces a new resource if changed.
     * 
     */
    @Export(name="cardinality", refs={String.class}, tree="[0]")
    private Output<String> cardinality;

    /**
     * @return The number of tags that can be assigned from this
     * category to a single object at once. Can be one of `SINGLE` (object can only
     * be assigned one tag in this category), to `MULTIPLE` (object can be assigned
     * multiple tags in this category). Forces a new resource if changed.
     * 
     */
    public Output<String> cardinality() {
        return this.cardinality;
    }
    /**
     * A description for the category.
     * 
     * &gt; **NOTE:** You can add associable types to a category, but you cannot remove
     * them. Attempting to do so will result in an error.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description for the category.
     * 
     * &gt; **NOTE:** You can add associable types to a category, but you cannot remove
     * them. Attempting to do so will result in an error.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The name of the category.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the category.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TagCategory(java.lang.String name) {
        this(name, TagCategoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TagCategory(java.lang.String name, TagCategoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TagCategory(java.lang.String name, TagCategoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/tagCategory:TagCategory", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TagCategory(java.lang.String name, Output<java.lang.String> id, @Nullable TagCategoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vsphere:index/tagCategory:TagCategory", name, state, makeResourceOptions(options, id), false);
    }

    private static TagCategoryArgs makeArgs(TagCategoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TagCategoryArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TagCategory get(java.lang.String name, Output<java.lang.String> id, @Nullable TagCategoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TagCategory(name, id, state, options);
    }
}
