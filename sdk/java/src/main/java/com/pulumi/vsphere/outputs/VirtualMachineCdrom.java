// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vsphere.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualMachineCdrom {
    /**
     * @return Indicates whether the device should be backed by remote client device. Conflicts with `datastore_id` and `path`.
     * 
     */
    private @Nullable Boolean clientDevice;
    /**
     * @return The managed object reference ID of the datastore in which to place the virtual machine. The virtual machine configuration files is placed here, along with any virtual disks that are created where a datastore is not explicitly specified. See the section on virtual machine migration for more information on modifying this value.
     * 
     */
    private @Nullable String datastoreId;
    private @Nullable String deviceAddress;
    /**
     * @return The ID of the device within the virtual machine.
     * 
     */
    private @Nullable Integer key;
    /**
     * @return When using `attach`, this parameter controls the path of a virtual disk to attach externally. Otherwise, it is a computed attribute that contains the virtual disk filename.
     * 
     */
    private @Nullable String path;

    private VirtualMachineCdrom() {}
    /**
     * @return Indicates whether the device should be backed by remote client device. Conflicts with `datastore_id` and `path`.
     * 
     */
    public Optional<Boolean> clientDevice() {
        return Optional.ofNullable(this.clientDevice);
    }
    /**
     * @return The managed object reference ID of the datastore in which to place the virtual machine. The virtual machine configuration files is placed here, along with any virtual disks that are created where a datastore is not explicitly specified. See the section on virtual machine migration for more information on modifying this value.
     * 
     */
    public Optional<String> datastoreId() {
        return Optional.ofNullable(this.datastoreId);
    }
    public Optional<String> deviceAddress() {
        return Optional.ofNullable(this.deviceAddress);
    }
    /**
     * @return The ID of the device within the virtual machine.
     * 
     */
    public Optional<Integer> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return When using `attach`, this parameter controls the path of a virtual disk to attach externally. Otherwise, it is a computed attribute that contains the virtual disk filename.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineCdrom defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean clientDevice;
        private @Nullable String datastoreId;
        private @Nullable String deviceAddress;
        private @Nullable Integer key;
        private @Nullable String path;
        public Builder() {}
        public Builder(VirtualMachineCdrom defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientDevice = defaults.clientDevice;
    	      this.datastoreId = defaults.datastoreId;
    	      this.deviceAddress = defaults.deviceAddress;
    	      this.key = defaults.key;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder clientDevice(@Nullable Boolean clientDevice) {
            this.clientDevice = clientDevice;
            return this;
        }
        @CustomType.Setter
        public Builder datastoreId(@Nullable String datastoreId) {
            this.datastoreId = datastoreId;
            return this;
        }
        @CustomType.Setter
        public Builder deviceAddress(@Nullable String deviceAddress) {
            this.deviceAddress = deviceAddress;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable Integer key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        public VirtualMachineCdrom build() {
            final var o = new VirtualMachineCdrom();
            o.clientDevice = clientDevice;
            o.datastoreId = datastoreId;
            o.deviceAddress = deviceAddress;
            o.key = key;
            o.path = path;
            return o;
        }
    }
}
