// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The `.DpmHostOverride` resource can be used to add a DPM override to a
// cluster for a particular host. This allows you to control the power management
// settings for individual hosts in the cluster while leaving any unspecified ones
// at the default power management settings.
//
// For more information on DPM within vSphere clusters, see [this
// page][ref-vsphere-cluster-dpm].
//
// [ref-vsphere-cluster-dpm]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80.html
//
// > **NOTE:** This resource requires vCenter and is not available on direct ESXi
// connections.
//
// > **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.
type DpmHostOverride struct {
	pulumi.CustomResourceState

	// The [managed object reference
	// ID][docs-about-morefs] of the cluster to put the override in.  Forces a new
	// resource if changed.
	ComputeClusterId pulumi.StringOutput `pulumi:"computeClusterId"`
	// The automation level for host power
	// operations on this host. Can be one of `manual` or `automated`. Default:
	// `manual`.
	DpmAutomationLevel pulumi.StringPtrOutput `pulumi:"dpmAutomationLevel"`
	// Enable DPM support for this host. Default:
	// `false`.
	DpmEnabled pulumi.BoolPtrOutput `pulumi:"dpmEnabled"`
	// The managed object ID of the host.
	HostSystemId pulumi.StringOutput `pulumi:"hostSystemId"`
}

// NewDpmHostOverride registers a new resource with the given unique name, arguments, and options.
func NewDpmHostOverride(ctx *pulumi.Context,
	name string, args *DpmHostOverrideArgs, opts ...pulumi.ResourceOption) (*DpmHostOverride, error) {
	if args == nil || args.ComputeClusterId == nil {
		return nil, errors.New("missing required argument 'ComputeClusterId'")
	}
	if args == nil || args.HostSystemId == nil {
		return nil, errors.New("missing required argument 'HostSystemId'")
	}
	if args == nil {
		args = &DpmHostOverrideArgs{}
	}
	var resource DpmHostOverride
	err := ctx.RegisterResource("vsphere:index/dpmHostOverride:DpmHostOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDpmHostOverride gets an existing DpmHostOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDpmHostOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DpmHostOverrideState, opts ...pulumi.ResourceOption) (*DpmHostOverride, error) {
	var resource DpmHostOverride
	err := ctx.ReadResource("vsphere:index/dpmHostOverride:DpmHostOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DpmHostOverride resources.
type dpmHostOverrideState struct {
	// The [managed object reference
	// ID][docs-about-morefs] of the cluster to put the override in.  Forces a new
	// resource if changed.
	ComputeClusterId *string `pulumi:"computeClusterId"`
	// The automation level for host power
	// operations on this host. Can be one of `manual` or `automated`. Default:
	// `manual`.
	DpmAutomationLevel *string `pulumi:"dpmAutomationLevel"`
	// Enable DPM support for this host. Default:
	// `false`.
	DpmEnabled *bool `pulumi:"dpmEnabled"`
	// The managed object ID of the host.
	HostSystemId *string `pulumi:"hostSystemId"`
}

type DpmHostOverrideState struct {
	// The [managed object reference
	// ID][docs-about-morefs] of the cluster to put the override in.  Forces a new
	// resource if changed.
	ComputeClusterId pulumi.StringPtrInput
	// The automation level for host power
	// operations on this host. Can be one of `manual` or `automated`. Default:
	// `manual`.
	DpmAutomationLevel pulumi.StringPtrInput
	// Enable DPM support for this host. Default:
	// `false`.
	DpmEnabled pulumi.BoolPtrInput
	// The managed object ID of the host.
	HostSystemId pulumi.StringPtrInput
}

func (DpmHostOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*dpmHostOverrideState)(nil)).Elem()
}

type dpmHostOverrideArgs struct {
	// The [managed object reference
	// ID][docs-about-morefs] of the cluster to put the override in.  Forces a new
	// resource if changed.
	ComputeClusterId string `pulumi:"computeClusterId"`
	// The automation level for host power
	// operations on this host. Can be one of `manual` or `automated`. Default:
	// `manual`.
	DpmAutomationLevel *string `pulumi:"dpmAutomationLevel"`
	// Enable DPM support for this host. Default:
	// `false`.
	DpmEnabled *bool `pulumi:"dpmEnabled"`
	// The managed object ID of the host.
	HostSystemId string `pulumi:"hostSystemId"`
}

// The set of arguments for constructing a DpmHostOverride resource.
type DpmHostOverrideArgs struct {
	// The [managed object reference
	// ID][docs-about-morefs] of the cluster to put the override in.  Forces a new
	// resource if changed.
	ComputeClusterId pulumi.StringInput
	// The automation level for host power
	// operations on this host. Can be one of `manual` or `automated`. Default:
	// `manual`.
	DpmAutomationLevel pulumi.StringPtrInput
	// Enable DPM support for this host. Default:
	// `false`.
	DpmEnabled pulumi.BoolPtrInput
	// The managed object ID of the host.
	HostSystemId pulumi.StringInput
}

func (DpmHostOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dpmHostOverrideArgs)(nil)).Elem()
}
