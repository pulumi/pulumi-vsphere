// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The `.ContentLibrary` resource can be used to manage Content Libraries.
//
// > **NOTE:** This resource requires vCenter and is not available on direct ESXi
// connections.
type ContentLibrary struct {
	pulumi.CustomResourceState

	// A description of the Content Library.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the Content Library.
	Name pulumi.StringOutput `pulumi:"name"`
	// The [managed object reference ID][docs-about-morefs] on which to store Content Library
	// items.
	StorageBackings pulumi.StringArrayOutput `pulumi:"storageBackings"`
}

// NewContentLibrary registers a new resource with the given unique name, arguments, and options.
func NewContentLibrary(ctx *pulumi.Context,
	name string, args *ContentLibraryArgs, opts ...pulumi.ResourceOption) (*ContentLibrary, error) {
	if args == nil || args.StorageBackings == nil {
		return nil, errors.New("missing required argument 'StorageBackings'")
	}
	if args == nil {
		args = &ContentLibraryArgs{}
	}
	var resource ContentLibrary
	err := ctx.RegisterResource("vsphere:index/contentLibrary:ContentLibrary", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContentLibrary gets an existing ContentLibrary resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContentLibrary(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContentLibraryState, opts ...pulumi.ResourceOption) (*ContentLibrary, error) {
	var resource ContentLibrary
	err := ctx.ReadResource("vsphere:index/contentLibrary:ContentLibrary", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContentLibrary resources.
type contentLibraryState struct {
	// A description of the Content Library.
	Description *string `pulumi:"description"`
	// The name of the Content Library.
	Name *string `pulumi:"name"`
	// The [managed object reference ID][docs-about-morefs] on which to store Content Library
	// items.
	StorageBackings []string `pulumi:"storageBackings"`
}

type ContentLibraryState struct {
	// A description of the Content Library.
	Description pulumi.StringPtrInput
	// The name of the Content Library.
	Name pulumi.StringPtrInput
	// The [managed object reference ID][docs-about-morefs] on which to store Content Library
	// items.
	StorageBackings pulumi.StringArrayInput
}

func (ContentLibraryState) ElementType() reflect.Type {
	return reflect.TypeOf((*contentLibraryState)(nil)).Elem()
}

type contentLibraryArgs struct {
	// A description of the Content Library.
	Description *string `pulumi:"description"`
	// The name of the Content Library.
	Name *string `pulumi:"name"`
	// The [managed object reference ID][docs-about-morefs] on which to store Content Library
	// items.
	StorageBackings []string `pulumi:"storageBackings"`
}

// The set of arguments for constructing a ContentLibrary resource.
type ContentLibraryArgs struct {
	// A description of the Content Library.
	Description pulumi.StringPtrInput
	// The name of the Content Library.
	Name pulumi.StringPtrInput
	// The [managed object reference ID][docs-about-morefs] on which to store Content Library
	// items.
	StorageBackings pulumi.StringArrayInput
}

func (ContentLibraryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contentLibraryArgs)(nil)).Elem()
}
