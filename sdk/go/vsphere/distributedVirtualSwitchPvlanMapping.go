// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-vsphere/sdk/v4/go/vsphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DistributedVirtualSwitchPvlanMapping struct {
	pulumi.CustomResourceState

	// The ID of the distributed virtual switch to attach this mapping to.
	DistributedVirtualSwitchId pulumi.StringOutput `pulumi:"distributedVirtualSwitchId"`
	// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	PrimaryVlanId pulumi.IntOutput `pulumi:"primaryVlanId"`
	// The private VLAN type. Valid values are promiscuous, community and isolated.
	PvlanType pulumi.StringOutput `pulumi:"pvlanType"`
	// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	SecondaryVlanId pulumi.IntOutput `pulumi:"secondaryVlanId"`
}

// NewDistributedVirtualSwitchPvlanMapping registers a new resource with the given unique name, arguments, and options.
func NewDistributedVirtualSwitchPvlanMapping(ctx *pulumi.Context,
	name string, args *DistributedVirtualSwitchPvlanMappingArgs, opts ...pulumi.ResourceOption) (*DistributedVirtualSwitchPvlanMapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DistributedVirtualSwitchId == nil {
		return nil, errors.New("invalid value for required argument 'DistributedVirtualSwitchId'")
	}
	if args.PrimaryVlanId == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryVlanId'")
	}
	if args.PvlanType == nil {
		return nil, errors.New("invalid value for required argument 'PvlanType'")
	}
	if args.SecondaryVlanId == nil {
		return nil, errors.New("invalid value for required argument 'SecondaryVlanId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DistributedVirtualSwitchPvlanMapping
	err := ctx.RegisterResource("vsphere:index/distributedVirtualSwitchPvlanMapping:DistributedVirtualSwitchPvlanMapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDistributedVirtualSwitchPvlanMapping gets an existing DistributedVirtualSwitchPvlanMapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDistributedVirtualSwitchPvlanMapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DistributedVirtualSwitchPvlanMappingState, opts ...pulumi.ResourceOption) (*DistributedVirtualSwitchPvlanMapping, error) {
	var resource DistributedVirtualSwitchPvlanMapping
	err := ctx.ReadResource("vsphere:index/distributedVirtualSwitchPvlanMapping:DistributedVirtualSwitchPvlanMapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DistributedVirtualSwitchPvlanMapping resources.
type distributedVirtualSwitchPvlanMappingState struct {
	// The ID of the distributed virtual switch to attach this mapping to.
	DistributedVirtualSwitchId *string `pulumi:"distributedVirtualSwitchId"`
	// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	PrimaryVlanId *int `pulumi:"primaryVlanId"`
	// The private VLAN type. Valid values are promiscuous, community and isolated.
	PvlanType *string `pulumi:"pvlanType"`
	// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	SecondaryVlanId *int `pulumi:"secondaryVlanId"`
}

type DistributedVirtualSwitchPvlanMappingState struct {
	// The ID of the distributed virtual switch to attach this mapping to.
	DistributedVirtualSwitchId pulumi.StringPtrInput
	// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	PrimaryVlanId pulumi.IntPtrInput
	// The private VLAN type. Valid values are promiscuous, community and isolated.
	PvlanType pulumi.StringPtrInput
	// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	SecondaryVlanId pulumi.IntPtrInput
}

func (DistributedVirtualSwitchPvlanMappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*distributedVirtualSwitchPvlanMappingState)(nil)).Elem()
}

type distributedVirtualSwitchPvlanMappingArgs struct {
	// The ID of the distributed virtual switch to attach this mapping to.
	DistributedVirtualSwitchId string `pulumi:"distributedVirtualSwitchId"`
	// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	PrimaryVlanId int `pulumi:"primaryVlanId"`
	// The private VLAN type. Valid values are promiscuous, community and isolated.
	PvlanType string `pulumi:"pvlanType"`
	// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	SecondaryVlanId int `pulumi:"secondaryVlanId"`
}

// The set of arguments for constructing a DistributedVirtualSwitchPvlanMapping resource.
type DistributedVirtualSwitchPvlanMappingArgs struct {
	// The ID of the distributed virtual switch to attach this mapping to.
	DistributedVirtualSwitchId pulumi.StringInput
	// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	PrimaryVlanId pulumi.IntInput
	// The private VLAN type. Valid values are promiscuous, community and isolated.
	PvlanType pulumi.StringInput
	// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	SecondaryVlanId pulumi.IntInput
}

func (DistributedVirtualSwitchPvlanMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*distributedVirtualSwitchPvlanMappingArgs)(nil)).Elem()
}

type DistributedVirtualSwitchPvlanMappingInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchPvlanMappingOutput() DistributedVirtualSwitchPvlanMappingOutput
	ToDistributedVirtualSwitchPvlanMappingOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingOutput
}

func (*DistributedVirtualSwitchPvlanMapping) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (i *DistributedVirtualSwitchPvlanMapping) ToDistributedVirtualSwitchPvlanMappingOutput() DistributedVirtualSwitchPvlanMappingOutput {
	return i.ToDistributedVirtualSwitchPvlanMappingOutputWithContext(context.Background())
}

func (i *DistributedVirtualSwitchPvlanMapping) ToDistributedVirtualSwitchPvlanMappingOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchPvlanMappingOutput)
}

// DistributedVirtualSwitchPvlanMappingArrayInput is an input type that accepts DistributedVirtualSwitchPvlanMappingArray and DistributedVirtualSwitchPvlanMappingArrayOutput values.
// You can construct a concrete instance of `DistributedVirtualSwitchPvlanMappingArrayInput` via:
//
//	DistributedVirtualSwitchPvlanMappingArray{ DistributedVirtualSwitchPvlanMappingArgs{...} }
type DistributedVirtualSwitchPvlanMappingArrayInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchPvlanMappingArrayOutput() DistributedVirtualSwitchPvlanMappingArrayOutput
	ToDistributedVirtualSwitchPvlanMappingArrayOutputWithContext(context.Context) DistributedVirtualSwitchPvlanMappingArrayOutput
}

type DistributedVirtualSwitchPvlanMappingArray []DistributedVirtualSwitchPvlanMappingInput

func (DistributedVirtualSwitchPvlanMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (i DistributedVirtualSwitchPvlanMappingArray) ToDistributedVirtualSwitchPvlanMappingArrayOutput() DistributedVirtualSwitchPvlanMappingArrayOutput {
	return i.ToDistributedVirtualSwitchPvlanMappingArrayOutputWithContext(context.Background())
}

func (i DistributedVirtualSwitchPvlanMappingArray) ToDistributedVirtualSwitchPvlanMappingArrayOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchPvlanMappingArrayOutput)
}

// DistributedVirtualSwitchPvlanMappingMapInput is an input type that accepts DistributedVirtualSwitchPvlanMappingMap and DistributedVirtualSwitchPvlanMappingMapOutput values.
// You can construct a concrete instance of `DistributedVirtualSwitchPvlanMappingMapInput` via:
//
//	DistributedVirtualSwitchPvlanMappingMap{ "key": DistributedVirtualSwitchPvlanMappingArgs{...} }
type DistributedVirtualSwitchPvlanMappingMapInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchPvlanMappingMapOutput() DistributedVirtualSwitchPvlanMappingMapOutput
	ToDistributedVirtualSwitchPvlanMappingMapOutputWithContext(context.Context) DistributedVirtualSwitchPvlanMappingMapOutput
}

type DistributedVirtualSwitchPvlanMappingMap map[string]DistributedVirtualSwitchPvlanMappingInput

func (DistributedVirtualSwitchPvlanMappingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (i DistributedVirtualSwitchPvlanMappingMap) ToDistributedVirtualSwitchPvlanMappingMapOutput() DistributedVirtualSwitchPvlanMappingMapOutput {
	return i.ToDistributedVirtualSwitchPvlanMappingMapOutputWithContext(context.Background())
}

func (i DistributedVirtualSwitchPvlanMappingMap) ToDistributedVirtualSwitchPvlanMappingMapOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchPvlanMappingMapOutput)
}

type DistributedVirtualSwitchPvlanMappingOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchPvlanMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (o DistributedVirtualSwitchPvlanMappingOutput) ToDistributedVirtualSwitchPvlanMappingOutput() DistributedVirtualSwitchPvlanMappingOutput {
	return o
}

func (o DistributedVirtualSwitchPvlanMappingOutput) ToDistributedVirtualSwitchPvlanMappingOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingOutput {
	return o
}

// The ID of the distributed virtual switch to attach this mapping to.
func (o DistributedVirtualSwitchPvlanMappingOutput) DistributedVirtualSwitchId() pulumi.StringOutput {
	return o.ApplyT(func(v *DistributedVirtualSwitchPvlanMapping) pulumi.StringOutput { return v.DistributedVirtualSwitchId }).(pulumi.StringOutput)
}

// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
func (o DistributedVirtualSwitchPvlanMappingOutput) PrimaryVlanId() pulumi.IntOutput {
	return o.ApplyT(func(v *DistributedVirtualSwitchPvlanMapping) pulumi.IntOutput { return v.PrimaryVlanId }).(pulumi.IntOutput)
}

// The private VLAN type. Valid values are promiscuous, community and isolated.
func (o DistributedVirtualSwitchPvlanMappingOutput) PvlanType() pulumi.StringOutput {
	return o.ApplyT(func(v *DistributedVirtualSwitchPvlanMapping) pulumi.StringOutput { return v.PvlanType }).(pulumi.StringOutput)
}

// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
func (o DistributedVirtualSwitchPvlanMappingOutput) SecondaryVlanId() pulumi.IntOutput {
	return o.ApplyT(func(v *DistributedVirtualSwitchPvlanMapping) pulumi.IntOutput { return v.SecondaryVlanId }).(pulumi.IntOutput)
}

type DistributedVirtualSwitchPvlanMappingArrayOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchPvlanMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (o DistributedVirtualSwitchPvlanMappingArrayOutput) ToDistributedVirtualSwitchPvlanMappingArrayOutput() DistributedVirtualSwitchPvlanMappingArrayOutput {
	return o
}

func (o DistributedVirtualSwitchPvlanMappingArrayOutput) ToDistributedVirtualSwitchPvlanMappingArrayOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingArrayOutput {
	return o
}

func (o DistributedVirtualSwitchPvlanMappingArrayOutput) Index(i pulumi.IntInput) DistributedVirtualSwitchPvlanMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DistributedVirtualSwitchPvlanMapping {
		return vs[0].([]*DistributedVirtualSwitchPvlanMapping)[vs[1].(int)]
	}).(DistributedVirtualSwitchPvlanMappingOutput)
}

type DistributedVirtualSwitchPvlanMappingMapOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchPvlanMappingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (o DistributedVirtualSwitchPvlanMappingMapOutput) ToDistributedVirtualSwitchPvlanMappingMapOutput() DistributedVirtualSwitchPvlanMappingMapOutput {
	return o
}

func (o DistributedVirtualSwitchPvlanMappingMapOutput) ToDistributedVirtualSwitchPvlanMappingMapOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingMapOutput {
	return o
}

func (o DistributedVirtualSwitchPvlanMappingMapOutput) MapIndex(k pulumi.StringInput) DistributedVirtualSwitchPvlanMappingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DistributedVirtualSwitchPvlanMapping {
		return vs[0].(map[string]*DistributedVirtualSwitchPvlanMapping)[vs[1].(string)]
	}).(DistributedVirtualSwitchPvlanMappingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchPvlanMappingInput)(nil)).Elem(), &DistributedVirtualSwitchPvlanMapping{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchPvlanMappingArrayInput)(nil)).Elem(), DistributedVirtualSwitchPvlanMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchPvlanMappingMapInput)(nil)).Elem(), DistributedVirtualSwitchPvlanMappingMap{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchPvlanMappingOutput{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchPvlanMappingArrayOutput{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchPvlanMappingMapOutput{})
}
