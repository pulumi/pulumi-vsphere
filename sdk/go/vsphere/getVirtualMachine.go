// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The `.VirtualMachine` data source can be used to find the UUID of an
// existing virtual machine or template. Its most relevant purpose is for finding
// the UUID of a template to be used as the source for cloning into a new
// [`.VirtualMachine`][docs-virtual-machine-resource] resource. It also
// reads the guest ID so that can be supplied as well.
//
// [docs-virtual-machine-resource]: /docs/providers/vsphere/r/virtual_machine.html
func LookupVirtualMachine(ctx *pulumi.Context, args *LookupVirtualMachineArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineResult, error) {
	var rv LookupVirtualMachineResult
	err := ctx.Invoke("vsphere:index/getVirtualMachine:getVirtualMachine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualMachine.
type LookupVirtualMachineArgs struct {
	// The [managed object reference
	// ID][docs-about-morefs] of the datacenter the virtual machine is located in.
	// This can be omitted if the search path used in `name` is an absolute path.
	// For default datacenters, use the `id` attribute from an empty
	// `.Datacenter` data source.
	DatacenterId *string `pulumi:"datacenterId"`
	// The name of the virtual machine. This can be a name or
	// path.
	Name string `pulumi:"name"`
	// The number of SCSI controllers to
	// scan for disk attributes and controller types on. Default: `1`.
	ScsiControllerScanCount *int `pulumi:"scsiControllerScanCount"`
}

// A collection of values returned by getVirtualMachine.
type LookupVirtualMachineResult struct {
	// The alternate guest name of the virtual machine when
	// guestId is a non-specific operating system, like `otherGuest`.
	AlternateGuestName string  `pulumi:"alternateGuestName"`
	DatacenterId       *string `pulumi:"datacenterId"`
	// Information about each of the disks on this virtual machine or
	// template. These are sorted by bus and unit number so that they can be applied
	// to a `.VirtualMachine` resource in the order the resource expects
	// while cloning. This is useful for discovering certain disk settings while
	// performing a linked clone, as all settings that are output by this data
	// source must be the same on the destination virtual machine as the source.
	// Only the first number of controllers defined by `scsiControllerScanCount`
	// are scanned for disks. The sub-attributes are:
	Disks []GetVirtualMachineDisk `pulumi:"disks"`
	// The firmware type for this virtual machine. Can be `bios` or `efi`.
	Firmware string `pulumi:"firmware"`
	// The guest ID of the virtual machine or template.
	GuestId string `pulumi:"guestId"`
	// A list of IP addresses as reported by VMWare tools.
	GuestIpAddresses []string `pulumi:"guestIpAddresses"`
	// id is the provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// The network interface types for each network
	// interface found on the virtual machine, in device bus order. Will be one of
	// `e1000`, `e1000e`, `pcnet32`, `sriov`, `vmxnet2`, or `vmxnet3`.
	NetworkInterfaceTypes []string `pulumi:"networkInterfaceTypes"`
	// Mode for sharing the SCSI bus. The modes are
	// physicalSharing, virtualSharing, and noSharing. Only the first number of
	// controllers defined by `scsiControllerScanCount` are scanned.
	ScsiBusSharing          string `pulumi:"scsiBusSharing"`
	ScsiControllerScanCount *int   `pulumi:"scsiControllerScanCount"`
	// The common type of all SCSI controllers on this virtual machine.
	// Will be one of `lsilogic` (LSI Logic Parallel), `lsilogic-sas` (LSI Logic
	// SAS), `pvscsi` (VMware Paravirtual), `buslogic` (BusLogic), or `mixed` when
	// there are multiple controller types. Only the first number of controllers
	// defined by `scsiControllerScanCount` are scanned.
	ScsiType string `pulumi:"scsiType"`
}
