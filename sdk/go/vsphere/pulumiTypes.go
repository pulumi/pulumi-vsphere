// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vsphere/sdk/v4/go/vsphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ComputeClusterHostImage struct {
	// List of custom components.
	Components []ComputeClusterHostImageComponent `pulumi:"components"`
	// The ESXi version which the image is based on.
	EsxVersion *string `pulumi:"esxVersion"`
}

// ComputeClusterHostImageInput is an input type that accepts ComputeClusterHostImageArgs and ComputeClusterHostImageOutput values.
// You can construct a concrete instance of `ComputeClusterHostImageInput` via:
//
//	ComputeClusterHostImageArgs{...}
type ComputeClusterHostImageInput interface {
	pulumi.Input

	ToComputeClusterHostImageOutput() ComputeClusterHostImageOutput
	ToComputeClusterHostImageOutputWithContext(context.Context) ComputeClusterHostImageOutput
}

type ComputeClusterHostImageArgs struct {
	// List of custom components.
	Components ComputeClusterHostImageComponentArrayInput `pulumi:"components"`
	// The ESXi version which the image is based on.
	EsxVersion pulumi.StringPtrInput `pulumi:"esxVersion"`
}

func (ComputeClusterHostImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterHostImage)(nil)).Elem()
}

func (i ComputeClusterHostImageArgs) ToComputeClusterHostImageOutput() ComputeClusterHostImageOutput {
	return i.ToComputeClusterHostImageOutputWithContext(context.Background())
}

func (i ComputeClusterHostImageArgs) ToComputeClusterHostImageOutputWithContext(ctx context.Context) ComputeClusterHostImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterHostImageOutput)
}

func (i ComputeClusterHostImageArgs) ToComputeClusterHostImagePtrOutput() ComputeClusterHostImagePtrOutput {
	return i.ToComputeClusterHostImagePtrOutputWithContext(context.Background())
}

func (i ComputeClusterHostImageArgs) ToComputeClusterHostImagePtrOutputWithContext(ctx context.Context) ComputeClusterHostImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterHostImageOutput).ToComputeClusterHostImagePtrOutputWithContext(ctx)
}

// ComputeClusterHostImagePtrInput is an input type that accepts ComputeClusterHostImageArgs, ComputeClusterHostImagePtr and ComputeClusterHostImagePtrOutput values.
// You can construct a concrete instance of `ComputeClusterHostImagePtrInput` via:
//
//	        ComputeClusterHostImageArgs{...}
//
//	or:
//
//	        nil
type ComputeClusterHostImagePtrInput interface {
	pulumi.Input

	ToComputeClusterHostImagePtrOutput() ComputeClusterHostImagePtrOutput
	ToComputeClusterHostImagePtrOutputWithContext(context.Context) ComputeClusterHostImagePtrOutput
}

type computeClusterHostImagePtrType ComputeClusterHostImageArgs

func ComputeClusterHostImagePtr(v *ComputeClusterHostImageArgs) ComputeClusterHostImagePtrInput {
	return (*computeClusterHostImagePtrType)(v)
}

func (*computeClusterHostImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeClusterHostImage)(nil)).Elem()
}

func (i *computeClusterHostImagePtrType) ToComputeClusterHostImagePtrOutput() ComputeClusterHostImagePtrOutput {
	return i.ToComputeClusterHostImagePtrOutputWithContext(context.Background())
}

func (i *computeClusterHostImagePtrType) ToComputeClusterHostImagePtrOutputWithContext(ctx context.Context) ComputeClusterHostImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterHostImagePtrOutput)
}

type ComputeClusterHostImageOutput struct{ *pulumi.OutputState }

func (ComputeClusterHostImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterHostImage)(nil)).Elem()
}

func (o ComputeClusterHostImageOutput) ToComputeClusterHostImageOutput() ComputeClusterHostImageOutput {
	return o
}

func (o ComputeClusterHostImageOutput) ToComputeClusterHostImageOutputWithContext(ctx context.Context) ComputeClusterHostImageOutput {
	return o
}

func (o ComputeClusterHostImageOutput) ToComputeClusterHostImagePtrOutput() ComputeClusterHostImagePtrOutput {
	return o.ToComputeClusterHostImagePtrOutputWithContext(context.Background())
}

func (o ComputeClusterHostImageOutput) ToComputeClusterHostImagePtrOutputWithContext(ctx context.Context) ComputeClusterHostImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeClusterHostImage) *ComputeClusterHostImage {
		return &v
	}).(ComputeClusterHostImagePtrOutput)
}

// List of custom components.
func (o ComputeClusterHostImageOutput) Components() ComputeClusterHostImageComponentArrayOutput {
	return o.ApplyT(func(v ComputeClusterHostImage) []ComputeClusterHostImageComponent { return v.Components }).(ComputeClusterHostImageComponentArrayOutput)
}

// The ESXi version which the image is based on.
func (o ComputeClusterHostImageOutput) EsxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeClusterHostImage) *string { return v.EsxVersion }).(pulumi.StringPtrOutput)
}

type ComputeClusterHostImagePtrOutput struct{ *pulumi.OutputState }

func (ComputeClusterHostImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeClusterHostImage)(nil)).Elem()
}

func (o ComputeClusterHostImagePtrOutput) ToComputeClusterHostImagePtrOutput() ComputeClusterHostImagePtrOutput {
	return o
}

func (o ComputeClusterHostImagePtrOutput) ToComputeClusterHostImagePtrOutputWithContext(ctx context.Context) ComputeClusterHostImagePtrOutput {
	return o
}

func (o ComputeClusterHostImagePtrOutput) Elem() ComputeClusterHostImageOutput {
	return o.ApplyT(func(v *ComputeClusterHostImage) ComputeClusterHostImage {
		if v != nil {
			return *v
		}
		var ret ComputeClusterHostImage
		return ret
	}).(ComputeClusterHostImageOutput)
}

// List of custom components.
func (o ComputeClusterHostImagePtrOutput) Components() ComputeClusterHostImageComponentArrayOutput {
	return o.ApplyT(func(v *ComputeClusterHostImage) []ComputeClusterHostImageComponent {
		if v == nil {
			return nil
		}
		return v.Components
	}).(ComputeClusterHostImageComponentArrayOutput)
}

// The ESXi version which the image is based on.
func (o ComputeClusterHostImagePtrOutput) EsxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeClusterHostImage) *string {
		if v == nil {
			return nil
		}
		return v.EsxVersion
	}).(pulumi.StringPtrOutput)
}

type ComputeClusterHostImageComponent struct {
	// The identifier for the component.
	Key *string `pulumi:"key"`
	// The version to use.
	Version *string `pulumi:"version"`
}

// ComputeClusterHostImageComponentInput is an input type that accepts ComputeClusterHostImageComponentArgs and ComputeClusterHostImageComponentOutput values.
// You can construct a concrete instance of `ComputeClusterHostImageComponentInput` via:
//
//	ComputeClusterHostImageComponentArgs{...}
type ComputeClusterHostImageComponentInput interface {
	pulumi.Input

	ToComputeClusterHostImageComponentOutput() ComputeClusterHostImageComponentOutput
	ToComputeClusterHostImageComponentOutputWithContext(context.Context) ComputeClusterHostImageComponentOutput
}

type ComputeClusterHostImageComponentArgs struct {
	// The identifier for the component.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The version to use.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ComputeClusterHostImageComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterHostImageComponent)(nil)).Elem()
}

func (i ComputeClusterHostImageComponentArgs) ToComputeClusterHostImageComponentOutput() ComputeClusterHostImageComponentOutput {
	return i.ToComputeClusterHostImageComponentOutputWithContext(context.Background())
}

func (i ComputeClusterHostImageComponentArgs) ToComputeClusterHostImageComponentOutputWithContext(ctx context.Context) ComputeClusterHostImageComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterHostImageComponentOutput)
}

// ComputeClusterHostImageComponentArrayInput is an input type that accepts ComputeClusterHostImageComponentArray and ComputeClusterHostImageComponentArrayOutput values.
// You can construct a concrete instance of `ComputeClusterHostImageComponentArrayInput` via:
//
//	ComputeClusterHostImageComponentArray{ ComputeClusterHostImageComponentArgs{...} }
type ComputeClusterHostImageComponentArrayInput interface {
	pulumi.Input

	ToComputeClusterHostImageComponentArrayOutput() ComputeClusterHostImageComponentArrayOutput
	ToComputeClusterHostImageComponentArrayOutputWithContext(context.Context) ComputeClusterHostImageComponentArrayOutput
}

type ComputeClusterHostImageComponentArray []ComputeClusterHostImageComponentInput

func (ComputeClusterHostImageComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeClusterHostImageComponent)(nil)).Elem()
}

func (i ComputeClusterHostImageComponentArray) ToComputeClusterHostImageComponentArrayOutput() ComputeClusterHostImageComponentArrayOutput {
	return i.ToComputeClusterHostImageComponentArrayOutputWithContext(context.Background())
}

func (i ComputeClusterHostImageComponentArray) ToComputeClusterHostImageComponentArrayOutputWithContext(ctx context.Context) ComputeClusterHostImageComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterHostImageComponentArrayOutput)
}

type ComputeClusterHostImageComponentOutput struct{ *pulumi.OutputState }

func (ComputeClusterHostImageComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterHostImageComponent)(nil)).Elem()
}

func (o ComputeClusterHostImageComponentOutput) ToComputeClusterHostImageComponentOutput() ComputeClusterHostImageComponentOutput {
	return o
}

func (o ComputeClusterHostImageComponentOutput) ToComputeClusterHostImageComponentOutputWithContext(ctx context.Context) ComputeClusterHostImageComponentOutput {
	return o
}

// The identifier for the component.
func (o ComputeClusterHostImageComponentOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeClusterHostImageComponent) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The version to use.
func (o ComputeClusterHostImageComponentOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeClusterHostImageComponent) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ComputeClusterHostImageComponentArrayOutput struct{ *pulumi.OutputState }

func (ComputeClusterHostImageComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeClusterHostImageComponent)(nil)).Elem()
}

func (o ComputeClusterHostImageComponentArrayOutput) ToComputeClusterHostImageComponentArrayOutput() ComputeClusterHostImageComponentArrayOutput {
	return o
}

func (o ComputeClusterHostImageComponentArrayOutput) ToComputeClusterHostImageComponentArrayOutputWithContext(ctx context.Context) ComputeClusterHostImageComponentArrayOutput {
	return o
}

func (o ComputeClusterHostImageComponentArrayOutput) Index(i pulumi.IntInput) ComputeClusterHostImageComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeClusterHostImageComponent {
		return vs[0].([]ComputeClusterHostImageComponent)[vs[1].(int)]
	}).(ComputeClusterHostImageComponentOutput)
}

type ComputeClusterVsanDiskGroup struct {
	// Cache disk.
	Cache *string `pulumi:"cache"`
	// List of storage disks.
	Storages []string `pulumi:"storages"`
}

// ComputeClusterVsanDiskGroupInput is an input type that accepts ComputeClusterVsanDiskGroupArgs and ComputeClusterVsanDiskGroupOutput values.
// You can construct a concrete instance of `ComputeClusterVsanDiskGroupInput` via:
//
//	ComputeClusterVsanDiskGroupArgs{...}
type ComputeClusterVsanDiskGroupInput interface {
	pulumi.Input

	ToComputeClusterVsanDiskGroupOutput() ComputeClusterVsanDiskGroupOutput
	ToComputeClusterVsanDiskGroupOutputWithContext(context.Context) ComputeClusterVsanDiskGroupOutput
}

type ComputeClusterVsanDiskGroupArgs struct {
	// Cache disk.
	Cache pulumi.StringPtrInput `pulumi:"cache"`
	// List of storage disks.
	Storages pulumi.StringArrayInput `pulumi:"storages"`
}

func (ComputeClusterVsanDiskGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterVsanDiskGroup)(nil)).Elem()
}

func (i ComputeClusterVsanDiskGroupArgs) ToComputeClusterVsanDiskGroupOutput() ComputeClusterVsanDiskGroupOutput {
	return i.ToComputeClusterVsanDiskGroupOutputWithContext(context.Background())
}

func (i ComputeClusterVsanDiskGroupArgs) ToComputeClusterVsanDiskGroupOutputWithContext(ctx context.Context) ComputeClusterVsanDiskGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanDiskGroupOutput)
}

// ComputeClusterVsanDiskGroupArrayInput is an input type that accepts ComputeClusterVsanDiskGroupArray and ComputeClusterVsanDiskGroupArrayOutput values.
// You can construct a concrete instance of `ComputeClusterVsanDiskGroupArrayInput` via:
//
//	ComputeClusterVsanDiskGroupArray{ ComputeClusterVsanDiskGroupArgs{...} }
type ComputeClusterVsanDiskGroupArrayInput interface {
	pulumi.Input

	ToComputeClusterVsanDiskGroupArrayOutput() ComputeClusterVsanDiskGroupArrayOutput
	ToComputeClusterVsanDiskGroupArrayOutputWithContext(context.Context) ComputeClusterVsanDiskGroupArrayOutput
}

type ComputeClusterVsanDiskGroupArray []ComputeClusterVsanDiskGroupInput

func (ComputeClusterVsanDiskGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeClusterVsanDiskGroup)(nil)).Elem()
}

func (i ComputeClusterVsanDiskGroupArray) ToComputeClusterVsanDiskGroupArrayOutput() ComputeClusterVsanDiskGroupArrayOutput {
	return i.ToComputeClusterVsanDiskGroupArrayOutputWithContext(context.Background())
}

func (i ComputeClusterVsanDiskGroupArray) ToComputeClusterVsanDiskGroupArrayOutputWithContext(ctx context.Context) ComputeClusterVsanDiskGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanDiskGroupArrayOutput)
}

type ComputeClusterVsanDiskGroupOutput struct{ *pulumi.OutputState }

func (ComputeClusterVsanDiskGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterVsanDiskGroup)(nil)).Elem()
}

func (o ComputeClusterVsanDiskGroupOutput) ToComputeClusterVsanDiskGroupOutput() ComputeClusterVsanDiskGroupOutput {
	return o
}

func (o ComputeClusterVsanDiskGroupOutput) ToComputeClusterVsanDiskGroupOutputWithContext(ctx context.Context) ComputeClusterVsanDiskGroupOutput {
	return o
}

// Cache disk.
func (o ComputeClusterVsanDiskGroupOutput) Cache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeClusterVsanDiskGroup) *string { return v.Cache }).(pulumi.StringPtrOutput)
}

// List of storage disks.
func (o ComputeClusterVsanDiskGroupOutput) Storages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeClusterVsanDiskGroup) []string { return v.Storages }).(pulumi.StringArrayOutput)
}

type ComputeClusterVsanDiskGroupArrayOutput struct{ *pulumi.OutputState }

func (ComputeClusterVsanDiskGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeClusterVsanDiskGroup)(nil)).Elem()
}

func (o ComputeClusterVsanDiskGroupArrayOutput) ToComputeClusterVsanDiskGroupArrayOutput() ComputeClusterVsanDiskGroupArrayOutput {
	return o
}

func (o ComputeClusterVsanDiskGroupArrayOutput) ToComputeClusterVsanDiskGroupArrayOutputWithContext(ctx context.Context) ComputeClusterVsanDiskGroupArrayOutput {
	return o
}

func (o ComputeClusterVsanDiskGroupArrayOutput) Index(i pulumi.IntInput) ComputeClusterVsanDiskGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeClusterVsanDiskGroup {
		return vs[0].([]ComputeClusterVsanDiskGroup)[vs[1].(int)]
	}).(ComputeClusterVsanDiskGroupOutput)
}

type ComputeClusterVsanFaultDomain struct {
	// The configuration for single fault domain.
	FaultDomains []ComputeClusterVsanFaultDomainFaultDomain `pulumi:"faultDomains"`
}

// ComputeClusterVsanFaultDomainInput is an input type that accepts ComputeClusterVsanFaultDomainArgs and ComputeClusterVsanFaultDomainOutput values.
// You can construct a concrete instance of `ComputeClusterVsanFaultDomainInput` via:
//
//	ComputeClusterVsanFaultDomainArgs{...}
type ComputeClusterVsanFaultDomainInput interface {
	pulumi.Input

	ToComputeClusterVsanFaultDomainOutput() ComputeClusterVsanFaultDomainOutput
	ToComputeClusterVsanFaultDomainOutputWithContext(context.Context) ComputeClusterVsanFaultDomainOutput
}

type ComputeClusterVsanFaultDomainArgs struct {
	// The configuration for single fault domain.
	FaultDomains ComputeClusterVsanFaultDomainFaultDomainArrayInput `pulumi:"faultDomains"`
}

func (ComputeClusterVsanFaultDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterVsanFaultDomain)(nil)).Elem()
}

func (i ComputeClusterVsanFaultDomainArgs) ToComputeClusterVsanFaultDomainOutput() ComputeClusterVsanFaultDomainOutput {
	return i.ToComputeClusterVsanFaultDomainOutputWithContext(context.Background())
}

func (i ComputeClusterVsanFaultDomainArgs) ToComputeClusterVsanFaultDomainOutputWithContext(ctx context.Context) ComputeClusterVsanFaultDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanFaultDomainOutput)
}

// ComputeClusterVsanFaultDomainArrayInput is an input type that accepts ComputeClusterVsanFaultDomainArray and ComputeClusterVsanFaultDomainArrayOutput values.
// You can construct a concrete instance of `ComputeClusterVsanFaultDomainArrayInput` via:
//
//	ComputeClusterVsanFaultDomainArray{ ComputeClusterVsanFaultDomainArgs{...} }
type ComputeClusterVsanFaultDomainArrayInput interface {
	pulumi.Input

	ToComputeClusterVsanFaultDomainArrayOutput() ComputeClusterVsanFaultDomainArrayOutput
	ToComputeClusterVsanFaultDomainArrayOutputWithContext(context.Context) ComputeClusterVsanFaultDomainArrayOutput
}

type ComputeClusterVsanFaultDomainArray []ComputeClusterVsanFaultDomainInput

func (ComputeClusterVsanFaultDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeClusterVsanFaultDomain)(nil)).Elem()
}

func (i ComputeClusterVsanFaultDomainArray) ToComputeClusterVsanFaultDomainArrayOutput() ComputeClusterVsanFaultDomainArrayOutput {
	return i.ToComputeClusterVsanFaultDomainArrayOutputWithContext(context.Background())
}

func (i ComputeClusterVsanFaultDomainArray) ToComputeClusterVsanFaultDomainArrayOutputWithContext(ctx context.Context) ComputeClusterVsanFaultDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanFaultDomainArrayOutput)
}

type ComputeClusterVsanFaultDomainOutput struct{ *pulumi.OutputState }

func (ComputeClusterVsanFaultDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterVsanFaultDomain)(nil)).Elem()
}

func (o ComputeClusterVsanFaultDomainOutput) ToComputeClusterVsanFaultDomainOutput() ComputeClusterVsanFaultDomainOutput {
	return o
}

func (o ComputeClusterVsanFaultDomainOutput) ToComputeClusterVsanFaultDomainOutputWithContext(ctx context.Context) ComputeClusterVsanFaultDomainOutput {
	return o
}

// The configuration for single fault domain.
func (o ComputeClusterVsanFaultDomainOutput) FaultDomains() ComputeClusterVsanFaultDomainFaultDomainArrayOutput {
	return o.ApplyT(func(v ComputeClusterVsanFaultDomain) []ComputeClusterVsanFaultDomainFaultDomain {
		return v.FaultDomains
	}).(ComputeClusterVsanFaultDomainFaultDomainArrayOutput)
}

type ComputeClusterVsanFaultDomainArrayOutput struct{ *pulumi.OutputState }

func (ComputeClusterVsanFaultDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeClusterVsanFaultDomain)(nil)).Elem()
}

func (o ComputeClusterVsanFaultDomainArrayOutput) ToComputeClusterVsanFaultDomainArrayOutput() ComputeClusterVsanFaultDomainArrayOutput {
	return o
}

func (o ComputeClusterVsanFaultDomainArrayOutput) ToComputeClusterVsanFaultDomainArrayOutputWithContext(ctx context.Context) ComputeClusterVsanFaultDomainArrayOutput {
	return o
}

func (o ComputeClusterVsanFaultDomainArrayOutput) Index(i pulumi.IntInput) ComputeClusterVsanFaultDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeClusterVsanFaultDomain {
		return vs[0].([]ComputeClusterVsanFaultDomain)[vs[1].(int)]
	}).(ComputeClusterVsanFaultDomainOutput)
}

type ComputeClusterVsanFaultDomainFaultDomain struct {
	// The managed object IDs of the hosts to put in the fault domain.
	HostIds []string `pulumi:"hostIds"`
	// The name of the cluster.
	Name string `pulumi:"name"`
}

// ComputeClusterVsanFaultDomainFaultDomainInput is an input type that accepts ComputeClusterVsanFaultDomainFaultDomainArgs and ComputeClusterVsanFaultDomainFaultDomainOutput values.
// You can construct a concrete instance of `ComputeClusterVsanFaultDomainFaultDomainInput` via:
//
//	ComputeClusterVsanFaultDomainFaultDomainArgs{...}
type ComputeClusterVsanFaultDomainFaultDomainInput interface {
	pulumi.Input

	ToComputeClusterVsanFaultDomainFaultDomainOutput() ComputeClusterVsanFaultDomainFaultDomainOutput
	ToComputeClusterVsanFaultDomainFaultDomainOutputWithContext(context.Context) ComputeClusterVsanFaultDomainFaultDomainOutput
}

type ComputeClusterVsanFaultDomainFaultDomainArgs struct {
	// The managed object IDs of the hosts to put in the fault domain.
	HostIds pulumi.StringArrayInput `pulumi:"hostIds"`
	// The name of the cluster.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ComputeClusterVsanFaultDomainFaultDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterVsanFaultDomainFaultDomain)(nil)).Elem()
}

func (i ComputeClusterVsanFaultDomainFaultDomainArgs) ToComputeClusterVsanFaultDomainFaultDomainOutput() ComputeClusterVsanFaultDomainFaultDomainOutput {
	return i.ToComputeClusterVsanFaultDomainFaultDomainOutputWithContext(context.Background())
}

func (i ComputeClusterVsanFaultDomainFaultDomainArgs) ToComputeClusterVsanFaultDomainFaultDomainOutputWithContext(ctx context.Context) ComputeClusterVsanFaultDomainFaultDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanFaultDomainFaultDomainOutput)
}

// ComputeClusterVsanFaultDomainFaultDomainArrayInput is an input type that accepts ComputeClusterVsanFaultDomainFaultDomainArray and ComputeClusterVsanFaultDomainFaultDomainArrayOutput values.
// You can construct a concrete instance of `ComputeClusterVsanFaultDomainFaultDomainArrayInput` via:
//
//	ComputeClusterVsanFaultDomainFaultDomainArray{ ComputeClusterVsanFaultDomainFaultDomainArgs{...} }
type ComputeClusterVsanFaultDomainFaultDomainArrayInput interface {
	pulumi.Input

	ToComputeClusterVsanFaultDomainFaultDomainArrayOutput() ComputeClusterVsanFaultDomainFaultDomainArrayOutput
	ToComputeClusterVsanFaultDomainFaultDomainArrayOutputWithContext(context.Context) ComputeClusterVsanFaultDomainFaultDomainArrayOutput
}

type ComputeClusterVsanFaultDomainFaultDomainArray []ComputeClusterVsanFaultDomainFaultDomainInput

func (ComputeClusterVsanFaultDomainFaultDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeClusterVsanFaultDomainFaultDomain)(nil)).Elem()
}

func (i ComputeClusterVsanFaultDomainFaultDomainArray) ToComputeClusterVsanFaultDomainFaultDomainArrayOutput() ComputeClusterVsanFaultDomainFaultDomainArrayOutput {
	return i.ToComputeClusterVsanFaultDomainFaultDomainArrayOutputWithContext(context.Background())
}

func (i ComputeClusterVsanFaultDomainFaultDomainArray) ToComputeClusterVsanFaultDomainFaultDomainArrayOutputWithContext(ctx context.Context) ComputeClusterVsanFaultDomainFaultDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanFaultDomainFaultDomainArrayOutput)
}

type ComputeClusterVsanFaultDomainFaultDomainOutput struct{ *pulumi.OutputState }

func (ComputeClusterVsanFaultDomainFaultDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterVsanFaultDomainFaultDomain)(nil)).Elem()
}

func (o ComputeClusterVsanFaultDomainFaultDomainOutput) ToComputeClusterVsanFaultDomainFaultDomainOutput() ComputeClusterVsanFaultDomainFaultDomainOutput {
	return o
}

func (o ComputeClusterVsanFaultDomainFaultDomainOutput) ToComputeClusterVsanFaultDomainFaultDomainOutputWithContext(ctx context.Context) ComputeClusterVsanFaultDomainFaultDomainOutput {
	return o
}

// The managed object IDs of the hosts to put in the fault domain.
func (o ComputeClusterVsanFaultDomainFaultDomainOutput) HostIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeClusterVsanFaultDomainFaultDomain) []string { return v.HostIds }).(pulumi.StringArrayOutput)
}

// The name of the cluster.
func (o ComputeClusterVsanFaultDomainFaultDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeClusterVsanFaultDomainFaultDomain) string { return v.Name }).(pulumi.StringOutput)
}

type ComputeClusterVsanFaultDomainFaultDomainArrayOutput struct{ *pulumi.OutputState }

func (ComputeClusterVsanFaultDomainFaultDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComputeClusterVsanFaultDomainFaultDomain)(nil)).Elem()
}

func (o ComputeClusterVsanFaultDomainFaultDomainArrayOutput) ToComputeClusterVsanFaultDomainFaultDomainArrayOutput() ComputeClusterVsanFaultDomainFaultDomainArrayOutput {
	return o
}

func (o ComputeClusterVsanFaultDomainFaultDomainArrayOutput) ToComputeClusterVsanFaultDomainFaultDomainArrayOutputWithContext(ctx context.Context) ComputeClusterVsanFaultDomainFaultDomainArrayOutput {
	return o
}

func (o ComputeClusterVsanFaultDomainFaultDomainArrayOutput) Index(i pulumi.IntInput) ComputeClusterVsanFaultDomainFaultDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComputeClusterVsanFaultDomainFaultDomain {
		return vs[0].([]ComputeClusterVsanFaultDomainFaultDomain)[vs[1].(int)]
	}).(ComputeClusterVsanFaultDomainFaultDomainOutput)
}

type ComputeClusterVsanStretchedCluster struct {
	// The managed object IDs of the hosts to put in the first fault domain.
	PreferredFaultDomainHostIds []string `pulumi:"preferredFaultDomainHostIds"`
	// The name of prepferred fault domain.
	PreferredFaultDomainName *string `pulumi:"preferredFaultDomainName"`
	// The managed object IDs of the hosts to put in the second fault domain.
	SecondaryFaultDomainHostIds []string `pulumi:"secondaryFaultDomainHostIds"`
	// The name of secondary fault domain.
	SecondaryFaultDomainName *string `pulumi:"secondaryFaultDomainName"`
	// The managed object IDs of the host selected as witness node when enable stretched cluster.
	WitnessNode string `pulumi:"witnessNode"`
}

// ComputeClusterVsanStretchedClusterInput is an input type that accepts ComputeClusterVsanStretchedClusterArgs and ComputeClusterVsanStretchedClusterOutput values.
// You can construct a concrete instance of `ComputeClusterVsanStretchedClusterInput` via:
//
//	ComputeClusterVsanStretchedClusterArgs{...}
type ComputeClusterVsanStretchedClusterInput interface {
	pulumi.Input

	ToComputeClusterVsanStretchedClusterOutput() ComputeClusterVsanStretchedClusterOutput
	ToComputeClusterVsanStretchedClusterOutputWithContext(context.Context) ComputeClusterVsanStretchedClusterOutput
}

type ComputeClusterVsanStretchedClusterArgs struct {
	// The managed object IDs of the hosts to put in the first fault domain.
	PreferredFaultDomainHostIds pulumi.StringArrayInput `pulumi:"preferredFaultDomainHostIds"`
	// The name of prepferred fault domain.
	PreferredFaultDomainName pulumi.StringPtrInput `pulumi:"preferredFaultDomainName"`
	// The managed object IDs of the hosts to put in the second fault domain.
	SecondaryFaultDomainHostIds pulumi.StringArrayInput `pulumi:"secondaryFaultDomainHostIds"`
	// The name of secondary fault domain.
	SecondaryFaultDomainName pulumi.StringPtrInput `pulumi:"secondaryFaultDomainName"`
	// The managed object IDs of the host selected as witness node when enable stretched cluster.
	WitnessNode pulumi.StringInput `pulumi:"witnessNode"`
}

func (ComputeClusterVsanStretchedClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterVsanStretchedCluster)(nil)).Elem()
}

func (i ComputeClusterVsanStretchedClusterArgs) ToComputeClusterVsanStretchedClusterOutput() ComputeClusterVsanStretchedClusterOutput {
	return i.ToComputeClusterVsanStretchedClusterOutputWithContext(context.Background())
}

func (i ComputeClusterVsanStretchedClusterArgs) ToComputeClusterVsanStretchedClusterOutputWithContext(ctx context.Context) ComputeClusterVsanStretchedClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanStretchedClusterOutput)
}

func (i ComputeClusterVsanStretchedClusterArgs) ToComputeClusterVsanStretchedClusterPtrOutput() ComputeClusterVsanStretchedClusterPtrOutput {
	return i.ToComputeClusterVsanStretchedClusterPtrOutputWithContext(context.Background())
}

func (i ComputeClusterVsanStretchedClusterArgs) ToComputeClusterVsanStretchedClusterPtrOutputWithContext(ctx context.Context) ComputeClusterVsanStretchedClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanStretchedClusterOutput).ToComputeClusterVsanStretchedClusterPtrOutputWithContext(ctx)
}

// ComputeClusterVsanStretchedClusterPtrInput is an input type that accepts ComputeClusterVsanStretchedClusterArgs, ComputeClusterVsanStretchedClusterPtr and ComputeClusterVsanStretchedClusterPtrOutput values.
// You can construct a concrete instance of `ComputeClusterVsanStretchedClusterPtrInput` via:
//
//	        ComputeClusterVsanStretchedClusterArgs{...}
//
//	or:
//
//	        nil
type ComputeClusterVsanStretchedClusterPtrInput interface {
	pulumi.Input

	ToComputeClusterVsanStretchedClusterPtrOutput() ComputeClusterVsanStretchedClusterPtrOutput
	ToComputeClusterVsanStretchedClusterPtrOutputWithContext(context.Context) ComputeClusterVsanStretchedClusterPtrOutput
}

type computeClusterVsanStretchedClusterPtrType ComputeClusterVsanStretchedClusterArgs

func ComputeClusterVsanStretchedClusterPtr(v *ComputeClusterVsanStretchedClusterArgs) ComputeClusterVsanStretchedClusterPtrInput {
	return (*computeClusterVsanStretchedClusterPtrType)(v)
}

func (*computeClusterVsanStretchedClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeClusterVsanStretchedCluster)(nil)).Elem()
}

func (i *computeClusterVsanStretchedClusterPtrType) ToComputeClusterVsanStretchedClusterPtrOutput() ComputeClusterVsanStretchedClusterPtrOutput {
	return i.ToComputeClusterVsanStretchedClusterPtrOutputWithContext(context.Background())
}

func (i *computeClusterVsanStretchedClusterPtrType) ToComputeClusterVsanStretchedClusterPtrOutputWithContext(ctx context.Context) ComputeClusterVsanStretchedClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeClusterVsanStretchedClusterPtrOutput)
}

type ComputeClusterVsanStretchedClusterOutput struct{ *pulumi.OutputState }

func (ComputeClusterVsanStretchedClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeClusterVsanStretchedCluster)(nil)).Elem()
}

func (o ComputeClusterVsanStretchedClusterOutput) ToComputeClusterVsanStretchedClusterOutput() ComputeClusterVsanStretchedClusterOutput {
	return o
}

func (o ComputeClusterVsanStretchedClusterOutput) ToComputeClusterVsanStretchedClusterOutputWithContext(ctx context.Context) ComputeClusterVsanStretchedClusterOutput {
	return o
}

func (o ComputeClusterVsanStretchedClusterOutput) ToComputeClusterVsanStretchedClusterPtrOutput() ComputeClusterVsanStretchedClusterPtrOutput {
	return o.ToComputeClusterVsanStretchedClusterPtrOutputWithContext(context.Background())
}

func (o ComputeClusterVsanStretchedClusterOutput) ToComputeClusterVsanStretchedClusterPtrOutputWithContext(ctx context.Context) ComputeClusterVsanStretchedClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeClusterVsanStretchedCluster) *ComputeClusterVsanStretchedCluster {
		return &v
	}).(ComputeClusterVsanStretchedClusterPtrOutput)
}

// The managed object IDs of the hosts to put in the first fault domain.
func (o ComputeClusterVsanStretchedClusterOutput) PreferredFaultDomainHostIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeClusterVsanStretchedCluster) []string { return v.PreferredFaultDomainHostIds }).(pulumi.StringArrayOutput)
}

// The name of prepferred fault domain.
func (o ComputeClusterVsanStretchedClusterOutput) PreferredFaultDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeClusterVsanStretchedCluster) *string { return v.PreferredFaultDomainName }).(pulumi.StringPtrOutput)
}

// The managed object IDs of the hosts to put in the second fault domain.
func (o ComputeClusterVsanStretchedClusterOutput) SecondaryFaultDomainHostIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComputeClusterVsanStretchedCluster) []string { return v.SecondaryFaultDomainHostIds }).(pulumi.StringArrayOutput)
}

// The name of secondary fault domain.
func (o ComputeClusterVsanStretchedClusterOutput) SecondaryFaultDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComputeClusterVsanStretchedCluster) *string { return v.SecondaryFaultDomainName }).(pulumi.StringPtrOutput)
}

// The managed object IDs of the host selected as witness node when enable stretched cluster.
func (o ComputeClusterVsanStretchedClusterOutput) WitnessNode() pulumi.StringOutput {
	return o.ApplyT(func(v ComputeClusterVsanStretchedCluster) string { return v.WitnessNode }).(pulumi.StringOutput)
}

type ComputeClusterVsanStretchedClusterPtrOutput struct{ *pulumi.OutputState }

func (ComputeClusterVsanStretchedClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeClusterVsanStretchedCluster)(nil)).Elem()
}

func (o ComputeClusterVsanStretchedClusterPtrOutput) ToComputeClusterVsanStretchedClusterPtrOutput() ComputeClusterVsanStretchedClusterPtrOutput {
	return o
}

func (o ComputeClusterVsanStretchedClusterPtrOutput) ToComputeClusterVsanStretchedClusterPtrOutputWithContext(ctx context.Context) ComputeClusterVsanStretchedClusterPtrOutput {
	return o
}

func (o ComputeClusterVsanStretchedClusterPtrOutput) Elem() ComputeClusterVsanStretchedClusterOutput {
	return o.ApplyT(func(v *ComputeClusterVsanStretchedCluster) ComputeClusterVsanStretchedCluster {
		if v != nil {
			return *v
		}
		var ret ComputeClusterVsanStretchedCluster
		return ret
	}).(ComputeClusterVsanStretchedClusterOutput)
}

// The managed object IDs of the hosts to put in the first fault domain.
func (o ComputeClusterVsanStretchedClusterPtrOutput) PreferredFaultDomainHostIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeClusterVsanStretchedCluster) []string {
		if v == nil {
			return nil
		}
		return v.PreferredFaultDomainHostIds
	}).(pulumi.StringArrayOutput)
}

// The name of prepferred fault domain.
func (o ComputeClusterVsanStretchedClusterPtrOutput) PreferredFaultDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeClusterVsanStretchedCluster) *string {
		if v == nil {
			return nil
		}
		return v.PreferredFaultDomainName
	}).(pulumi.StringPtrOutput)
}

// The managed object IDs of the hosts to put in the second fault domain.
func (o ComputeClusterVsanStretchedClusterPtrOutput) SecondaryFaultDomainHostIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeClusterVsanStretchedCluster) []string {
		if v == nil {
			return nil
		}
		return v.SecondaryFaultDomainHostIds
	}).(pulumi.StringArrayOutput)
}

// The name of secondary fault domain.
func (o ComputeClusterVsanStretchedClusterPtrOutput) SecondaryFaultDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeClusterVsanStretchedCluster) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryFaultDomainName
	}).(pulumi.StringPtrOutput)
}

// The managed object IDs of the host selected as witness node when enable stretched cluster.
func (o ComputeClusterVsanStretchedClusterPtrOutput) WitnessNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeClusterVsanStretchedCluster) *string {
		if v == nil {
			return nil
		}
		return &v.WitnessNode
	}).(pulumi.StringPtrOutput)
}

type ContentLibraryPublication struct {
	// Method to authenticate users. Must be `NONE` or `BASIC`.
	AuthenticationMethod *string `pulumi:"authenticationMethod"`
	// Password used by subscribers to authenticate.
	Password *string `pulumi:"password"`
	// The URL of the published content library.
	PublishUrl *string `pulumi:"publishUrl"`
	// Publish the content library. Default `false`.
	Published *bool `pulumi:"published"`
	// Username used by subscribers to authenticate. Currently can only be `vcsp`.
	Username *string `pulumi:"username"`
}

// ContentLibraryPublicationInput is an input type that accepts ContentLibraryPublicationArgs and ContentLibraryPublicationOutput values.
// You can construct a concrete instance of `ContentLibraryPublicationInput` via:
//
//	ContentLibraryPublicationArgs{...}
type ContentLibraryPublicationInput interface {
	pulumi.Input

	ToContentLibraryPublicationOutput() ContentLibraryPublicationOutput
	ToContentLibraryPublicationOutputWithContext(context.Context) ContentLibraryPublicationOutput
}

type ContentLibraryPublicationArgs struct {
	// Method to authenticate users. Must be `NONE` or `BASIC`.
	AuthenticationMethod pulumi.StringPtrInput `pulumi:"authenticationMethod"`
	// Password used by subscribers to authenticate.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The URL of the published content library.
	PublishUrl pulumi.StringPtrInput `pulumi:"publishUrl"`
	// Publish the content library. Default `false`.
	Published pulumi.BoolPtrInput `pulumi:"published"`
	// Username used by subscribers to authenticate. Currently can only be `vcsp`.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ContentLibraryPublicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentLibraryPublication)(nil)).Elem()
}

func (i ContentLibraryPublicationArgs) ToContentLibraryPublicationOutput() ContentLibraryPublicationOutput {
	return i.ToContentLibraryPublicationOutputWithContext(context.Background())
}

func (i ContentLibraryPublicationArgs) ToContentLibraryPublicationOutputWithContext(ctx context.Context) ContentLibraryPublicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLibraryPublicationOutput)
}

func (i ContentLibraryPublicationArgs) ToContentLibraryPublicationPtrOutput() ContentLibraryPublicationPtrOutput {
	return i.ToContentLibraryPublicationPtrOutputWithContext(context.Background())
}

func (i ContentLibraryPublicationArgs) ToContentLibraryPublicationPtrOutputWithContext(ctx context.Context) ContentLibraryPublicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLibraryPublicationOutput).ToContentLibraryPublicationPtrOutputWithContext(ctx)
}

// ContentLibraryPublicationPtrInput is an input type that accepts ContentLibraryPublicationArgs, ContentLibraryPublicationPtr and ContentLibraryPublicationPtrOutput values.
// You can construct a concrete instance of `ContentLibraryPublicationPtrInput` via:
//
//	        ContentLibraryPublicationArgs{...}
//
//	or:
//
//	        nil
type ContentLibraryPublicationPtrInput interface {
	pulumi.Input

	ToContentLibraryPublicationPtrOutput() ContentLibraryPublicationPtrOutput
	ToContentLibraryPublicationPtrOutputWithContext(context.Context) ContentLibraryPublicationPtrOutput
}

type contentLibraryPublicationPtrType ContentLibraryPublicationArgs

func ContentLibraryPublicationPtr(v *ContentLibraryPublicationArgs) ContentLibraryPublicationPtrInput {
	return (*contentLibraryPublicationPtrType)(v)
}

func (*contentLibraryPublicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentLibraryPublication)(nil)).Elem()
}

func (i *contentLibraryPublicationPtrType) ToContentLibraryPublicationPtrOutput() ContentLibraryPublicationPtrOutput {
	return i.ToContentLibraryPublicationPtrOutputWithContext(context.Background())
}

func (i *contentLibraryPublicationPtrType) ToContentLibraryPublicationPtrOutputWithContext(ctx context.Context) ContentLibraryPublicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLibraryPublicationPtrOutput)
}

type ContentLibraryPublicationOutput struct{ *pulumi.OutputState }

func (ContentLibraryPublicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentLibraryPublication)(nil)).Elem()
}

func (o ContentLibraryPublicationOutput) ToContentLibraryPublicationOutput() ContentLibraryPublicationOutput {
	return o
}

func (o ContentLibraryPublicationOutput) ToContentLibraryPublicationOutputWithContext(ctx context.Context) ContentLibraryPublicationOutput {
	return o
}

func (o ContentLibraryPublicationOutput) ToContentLibraryPublicationPtrOutput() ContentLibraryPublicationPtrOutput {
	return o.ToContentLibraryPublicationPtrOutputWithContext(context.Background())
}

func (o ContentLibraryPublicationOutput) ToContentLibraryPublicationPtrOutputWithContext(ctx context.Context) ContentLibraryPublicationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentLibraryPublication) *ContentLibraryPublication {
		return &v
	}).(ContentLibraryPublicationPtrOutput)
}

// Method to authenticate users. Must be `NONE` or `BASIC`.
func (o ContentLibraryPublicationOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLibraryPublication) *string { return v.AuthenticationMethod }).(pulumi.StringPtrOutput)
}

// Password used by subscribers to authenticate.
func (o ContentLibraryPublicationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLibraryPublication) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The URL of the published content library.
func (o ContentLibraryPublicationOutput) PublishUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLibraryPublication) *string { return v.PublishUrl }).(pulumi.StringPtrOutput)
}

// Publish the content library. Default `false`.
func (o ContentLibraryPublicationOutput) Published() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContentLibraryPublication) *bool { return v.Published }).(pulumi.BoolPtrOutput)
}

// Username used by subscribers to authenticate. Currently can only be `vcsp`.
func (o ContentLibraryPublicationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLibraryPublication) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ContentLibraryPublicationPtrOutput struct{ *pulumi.OutputState }

func (ContentLibraryPublicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentLibraryPublication)(nil)).Elem()
}

func (o ContentLibraryPublicationPtrOutput) ToContentLibraryPublicationPtrOutput() ContentLibraryPublicationPtrOutput {
	return o
}

func (o ContentLibraryPublicationPtrOutput) ToContentLibraryPublicationPtrOutputWithContext(ctx context.Context) ContentLibraryPublicationPtrOutput {
	return o
}

func (o ContentLibraryPublicationPtrOutput) Elem() ContentLibraryPublicationOutput {
	return o.ApplyT(func(v *ContentLibraryPublication) ContentLibraryPublication {
		if v != nil {
			return *v
		}
		var ret ContentLibraryPublication
		return ret
	}).(ContentLibraryPublicationOutput)
}

// Method to authenticate users. Must be `NONE` or `BASIC`.
func (o ContentLibraryPublicationPtrOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLibraryPublication) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMethod
	}).(pulumi.StringPtrOutput)
}

// Password used by subscribers to authenticate.
func (o ContentLibraryPublicationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLibraryPublication) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The URL of the published content library.
func (o ContentLibraryPublicationPtrOutput) PublishUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLibraryPublication) *string {
		if v == nil {
			return nil
		}
		return v.PublishUrl
	}).(pulumi.StringPtrOutput)
}

// Publish the content library. Default `false`.
func (o ContentLibraryPublicationPtrOutput) Published() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContentLibraryPublication) *bool {
		if v == nil {
			return nil
		}
		return v.Published
	}).(pulumi.BoolPtrOutput)
}

// Username used by subscribers to authenticate. Currently can only be `vcsp`.
func (o ContentLibraryPublicationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLibraryPublication) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ContentLibrarySubscription struct {
	// Authentication method to connect ro a published content library. Must be `NONE` or `BASIC`.
	AuthenticationMethod *string `pulumi:"authenticationMethod"`
	// Enable automatic synchronization with the published library. Default `false`.
	AutomaticSync *bool `pulumi:"automaticSync"`
	// Download the library from a content only when needed. Default `true`.
	OnDemand *bool `pulumi:"onDemand"`
	// Password used for authentication.
	Password *string `pulumi:"password"`
	// URL of the published content library.
	SubscriptionUrl *string `pulumi:"subscriptionUrl"`
	// Username used for authentication.
	Username *string `pulumi:"username"`
}

// ContentLibrarySubscriptionInput is an input type that accepts ContentLibrarySubscriptionArgs and ContentLibrarySubscriptionOutput values.
// You can construct a concrete instance of `ContentLibrarySubscriptionInput` via:
//
//	ContentLibrarySubscriptionArgs{...}
type ContentLibrarySubscriptionInput interface {
	pulumi.Input

	ToContentLibrarySubscriptionOutput() ContentLibrarySubscriptionOutput
	ToContentLibrarySubscriptionOutputWithContext(context.Context) ContentLibrarySubscriptionOutput
}

type ContentLibrarySubscriptionArgs struct {
	// Authentication method to connect ro a published content library. Must be `NONE` or `BASIC`.
	AuthenticationMethod pulumi.StringPtrInput `pulumi:"authenticationMethod"`
	// Enable automatic synchronization with the published library. Default `false`.
	AutomaticSync pulumi.BoolPtrInput `pulumi:"automaticSync"`
	// Download the library from a content only when needed. Default `true`.
	OnDemand pulumi.BoolPtrInput `pulumi:"onDemand"`
	// Password used for authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// URL of the published content library.
	SubscriptionUrl pulumi.StringPtrInput `pulumi:"subscriptionUrl"`
	// Username used for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ContentLibrarySubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentLibrarySubscription)(nil)).Elem()
}

func (i ContentLibrarySubscriptionArgs) ToContentLibrarySubscriptionOutput() ContentLibrarySubscriptionOutput {
	return i.ToContentLibrarySubscriptionOutputWithContext(context.Background())
}

func (i ContentLibrarySubscriptionArgs) ToContentLibrarySubscriptionOutputWithContext(ctx context.Context) ContentLibrarySubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLibrarySubscriptionOutput)
}

func (i ContentLibrarySubscriptionArgs) ToContentLibrarySubscriptionPtrOutput() ContentLibrarySubscriptionPtrOutput {
	return i.ToContentLibrarySubscriptionPtrOutputWithContext(context.Background())
}

func (i ContentLibrarySubscriptionArgs) ToContentLibrarySubscriptionPtrOutputWithContext(ctx context.Context) ContentLibrarySubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLibrarySubscriptionOutput).ToContentLibrarySubscriptionPtrOutputWithContext(ctx)
}

// ContentLibrarySubscriptionPtrInput is an input type that accepts ContentLibrarySubscriptionArgs, ContentLibrarySubscriptionPtr and ContentLibrarySubscriptionPtrOutput values.
// You can construct a concrete instance of `ContentLibrarySubscriptionPtrInput` via:
//
//	        ContentLibrarySubscriptionArgs{...}
//
//	or:
//
//	        nil
type ContentLibrarySubscriptionPtrInput interface {
	pulumi.Input

	ToContentLibrarySubscriptionPtrOutput() ContentLibrarySubscriptionPtrOutput
	ToContentLibrarySubscriptionPtrOutputWithContext(context.Context) ContentLibrarySubscriptionPtrOutput
}

type contentLibrarySubscriptionPtrType ContentLibrarySubscriptionArgs

func ContentLibrarySubscriptionPtr(v *ContentLibrarySubscriptionArgs) ContentLibrarySubscriptionPtrInput {
	return (*contentLibrarySubscriptionPtrType)(v)
}

func (*contentLibrarySubscriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentLibrarySubscription)(nil)).Elem()
}

func (i *contentLibrarySubscriptionPtrType) ToContentLibrarySubscriptionPtrOutput() ContentLibrarySubscriptionPtrOutput {
	return i.ToContentLibrarySubscriptionPtrOutputWithContext(context.Background())
}

func (i *contentLibrarySubscriptionPtrType) ToContentLibrarySubscriptionPtrOutputWithContext(ctx context.Context) ContentLibrarySubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentLibrarySubscriptionPtrOutput)
}

type ContentLibrarySubscriptionOutput struct{ *pulumi.OutputState }

func (ContentLibrarySubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentLibrarySubscription)(nil)).Elem()
}

func (o ContentLibrarySubscriptionOutput) ToContentLibrarySubscriptionOutput() ContentLibrarySubscriptionOutput {
	return o
}

func (o ContentLibrarySubscriptionOutput) ToContentLibrarySubscriptionOutputWithContext(ctx context.Context) ContentLibrarySubscriptionOutput {
	return o
}

func (o ContentLibrarySubscriptionOutput) ToContentLibrarySubscriptionPtrOutput() ContentLibrarySubscriptionPtrOutput {
	return o.ToContentLibrarySubscriptionPtrOutputWithContext(context.Background())
}

func (o ContentLibrarySubscriptionOutput) ToContentLibrarySubscriptionPtrOutputWithContext(ctx context.Context) ContentLibrarySubscriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContentLibrarySubscription) *ContentLibrarySubscription {
		return &v
	}).(ContentLibrarySubscriptionPtrOutput)
}

// Authentication method to connect ro a published content library. Must be `NONE` or `BASIC`.
func (o ContentLibrarySubscriptionOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLibrarySubscription) *string { return v.AuthenticationMethod }).(pulumi.StringPtrOutput)
}

// Enable automatic synchronization with the published library. Default `false`.
func (o ContentLibrarySubscriptionOutput) AutomaticSync() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContentLibrarySubscription) *bool { return v.AutomaticSync }).(pulumi.BoolPtrOutput)
}

// Download the library from a content only when needed. Default `true`.
func (o ContentLibrarySubscriptionOutput) OnDemand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContentLibrarySubscription) *bool { return v.OnDemand }).(pulumi.BoolPtrOutput)
}

// Password used for authentication.
func (o ContentLibrarySubscriptionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLibrarySubscription) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// URL of the published content library.
func (o ContentLibrarySubscriptionOutput) SubscriptionUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLibrarySubscription) *string { return v.SubscriptionUrl }).(pulumi.StringPtrOutput)
}

// Username used for authentication.
func (o ContentLibrarySubscriptionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContentLibrarySubscription) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ContentLibrarySubscriptionPtrOutput struct{ *pulumi.OutputState }

func (ContentLibrarySubscriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContentLibrarySubscription)(nil)).Elem()
}

func (o ContentLibrarySubscriptionPtrOutput) ToContentLibrarySubscriptionPtrOutput() ContentLibrarySubscriptionPtrOutput {
	return o
}

func (o ContentLibrarySubscriptionPtrOutput) ToContentLibrarySubscriptionPtrOutputWithContext(ctx context.Context) ContentLibrarySubscriptionPtrOutput {
	return o
}

func (o ContentLibrarySubscriptionPtrOutput) Elem() ContentLibrarySubscriptionOutput {
	return o.ApplyT(func(v *ContentLibrarySubscription) ContentLibrarySubscription {
		if v != nil {
			return *v
		}
		var ret ContentLibrarySubscription
		return ret
	}).(ContentLibrarySubscriptionOutput)
}

// Authentication method to connect ro a published content library. Must be `NONE` or `BASIC`.
func (o ContentLibrarySubscriptionPtrOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLibrarySubscription) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMethod
	}).(pulumi.StringPtrOutput)
}

// Enable automatic synchronization with the published library. Default `false`.
func (o ContentLibrarySubscriptionPtrOutput) AutomaticSync() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContentLibrarySubscription) *bool {
		if v == nil {
			return nil
		}
		return v.AutomaticSync
	}).(pulumi.BoolPtrOutput)
}

// Download the library from a content only when needed. Default `true`.
func (o ContentLibrarySubscriptionPtrOutput) OnDemand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContentLibrarySubscription) *bool {
		if v == nil {
			return nil
		}
		return v.OnDemand
	}).(pulumi.BoolPtrOutput)
}

// Password used for authentication.
func (o ContentLibrarySubscriptionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLibrarySubscription) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// URL of the published content library.
func (o ContentLibrarySubscriptionPtrOutput) SubscriptionUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLibrarySubscription) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionUrl
	}).(pulumi.StringPtrOutput)
}

// Username used for authentication.
func (o ContentLibrarySubscriptionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContentLibrarySubscription) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type DistributedPortGroupVlanRange struct {
	// The minimum VLAN to use in the range.
	MaxVlan int `pulumi:"maxVlan"`
	// The minimum VLAN to use in the range.
	MinVlan int `pulumi:"minVlan"`
}

// DistributedPortGroupVlanRangeInput is an input type that accepts DistributedPortGroupVlanRangeArgs and DistributedPortGroupVlanRangeOutput values.
// You can construct a concrete instance of `DistributedPortGroupVlanRangeInput` via:
//
//	DistributedPortGroupVlanRangeArgs{...}
type DistributedPortGroupVlanRangeInput interface {
	pulumi.Input

	ToDistributedPortGroupVlanRangeOutput() DistributedPortGroupVlanRangeOutput
	ToDistributedPortGroupVlanRangeOutputWithContext(context.Context) DistributedPortGroupVlanRangeOutput
}

type DistributedPortGroupVlanRangeArgs struct {
	// The minimum VLAN to use in the range.
	MaxVlan pulumi.IntInput `pulumi:"maxVlan"`
	// The minimum VLAN to use in the range.
	MinVlan pulumi.IntInput `pulumi:"minVlan"`
}

func (DistributedPortGroupVlanRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedPortGroupVlanRange)(nil)).Elem()
}

func (i DistributedPortGroupVlanRangeArgs) ToDistributedPortGroupVlanRangeOutput() DistributedPortGroupVlanRangeOutput {
	return i.ToDistributedPortGroupVlanRangeOutputWithContext(context.Background())
}

func (i DistributedPortGroupVlanRangeArgs) ToDistributedPortGroupVlanRangeOutputWithContext(ctx context.Context) DistributedPortGroupVlanRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedPortGroupVlanRangeOutput)
}

// DistributedPortGroupVlanRangeArrayInput is an input type that accepts DistributedPortGroupVlanRangeArray and DistributedPortGroupVlanRangeArrayOutput values.
// You can construct a concrete instance of `DistributedPortGroupVlanRangeArrayInput` via:
//
//	DistributedPortGroupVlanRangeArray{ DistributedPortGroupVlanRangeArgs{...} }
type DistributedPortGroupVlanRangeArrayInput interface {
	pulumi.Input

	ToDistributedPortGroupVlanRangeArrayOutput() DistributedPortGroupVlanRangeArrayOutput
	ToDistributedPortGroupVlanRangeArrayOutputWithContext(context.Context) DistributedPortGroupVlanRangeArrayOutput
}

type DistributedPortGroupVlanRangeArray []DistributedPortGroupVlanRangeInput

func (DistributedPortGroupVlanRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedPortGroupVlanRange)(nil)).Elem()
}

func (i DistributedPortGroupVlanRangeArray) ToDistributedPortGroupVlanRangeArrayOutput() DistributedPortGroupVlanRangeArrayOutput {
	return i.ToDistributedPortGroupVlanRangeArrayOutputWithContext(context.Background())
}

func (i DistributedPortGroupVlanRangeArray) ToDistributedPortGroupVlanRangeArrayOutputWithContext(ctx context.Context) DistributedPortGroupVlanRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedPortGroupVlanRangeArrayOutput)
}

type DistributedPortGroupVlanRangeOutput struct{ *pulumi.OutputState }

func (DistributedPortGroupVlanRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedPortGroupVlanRange)(nil)).Elem()
}

func (o DistributedPortGroupVlanRangeOutput) ToDistributedPortGroupVlanRangeOutput() DistributedPortGroupVlanRangeOutput {
	return o
}

func (o DistributedPortGroupVlanRangeOutput) ToDistributedPortGroupVlanRangeOutputWithContext(ctx context.Context) DistributedPortGroupVlanRangeOutput {
	return o
}

// The minimum VLAN to use in the range.
func (o DistributedPortGroupVlanRangeOutput) MaxVlan() pulumi.IntOutput {
	return o.ApplyT(func(v DistributedPortGroupVlanRange) int { return v.MaxVlan }).(pulumi.IntOutput)
}

// The minimum VLAN to use in the range.
func (o DistributedPortGroupVlanRangeOutput) MinVlan() pulumi.IntOutput {
	return o.ApplyT(func(v DistributedPortGroupVlanRange) int { return v.MinVlan }).(pulumi.IntOutput)
}

type DistributedPortGroupVlanRangeArrayOutput struct{ *pulumi.OutputState }

func (DistributedPortGroupVlanRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedPortGroupVlanRange)(nil)).Elem()
}

func (o DistributedPortGroupVlanRangeArrayOutput) ToDistributedPortGroupVlanRangeArrayOutput() DistributedPortGroupVlanRangeArrayOutput {
	return o
}

func (o DistributedPortGroupVlanRangeArrayOutput) ToDistributedPortGroupVlanRangeArrayOutputWithContext(ctx context.Context) DistributedPortGroupVlanRangeArrayOutput {
	return o
}

func (o DistributedPortGroupVlanRangeArrayOutput) Index(i pulumi.IntInput) DistributedPortGroupVlanRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedPortGroupVlanRange {
		return vs[0].([]DistributedPortGroupVlanRange)[vs[1].(int)]
	}).(DistributedPortGroupVlanRangeOutput)
}

type DistributedVirtualSwitchHost struct {
	// Name of the physical NIC to be added to the proxy switch.
	Devices []string `pulumi:"devices"`
	// The managed object ID of the host this specification applies to.
	HostSystemId string `pulumi:"hostSystemId"`
}

// DistributedVirtualSwitchHostInput is an input type that accepts DistributedVirtualSwitchHostArgs and DistributedVirtualSwitchHostOutput values.
// You can construct a concrete instance of `DistributedVirtualSwitchHostInput` via:
//
//	DistributedVirtualSwitchHostArgs{...}
type DistributedVirtualSwitchHostInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchHostOutput() DistributedVirtualSwitchHostOutput
	ToDistributedVirtualSwitchHostOutputWithContext(context.Context) DistributedVirtualSwitchHostOutput
}

type DistributedVirtualSwitchHostArgs struct {
	// Name of the physical NIC to be added to the proxy switch.
	Devices pulumi.StringArrayInput `pulumi:"devices"`
	// The managed object ID of the host this specification applies to.
	HostSystemId pulumi.StringInput `pulumi:"hostSystemId"`
}

func (DistributedVirtualSwitchHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedVirtualSwitchHost)(nil)).Elem()
}

func (i DistributedVirtualSwitchHostArgs) ToDistributedVirtualSwitchHostOutput() DistributedVirtualSwitchHostOutput {
	return i.ToDistributedVirtualSwitchHostOutputWithContext(context.Background())
}

func (i DistributedVirtualSwitchHostArgs) ToDistributedVirtualSwitchHostOutputWithContext(ctx context.Context) DistributedVirtualSwitchHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchHostOutput)
}

// DistributedVirtualSwitchHostArrayInput is an input type that accepts DistributedVirtualSwitchHostArray and DistributedVirtualSwitchHostArrayOutput values.
// You can construct a concrete instance of `DistributedVirtualSwitchHostArrayInput` via:
//
//	DistributedVirtualSwitchHostArray{ DistributedVirtualSwitchHostArgs{...} }
type DistributedVirtualSwitchHostArrayInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchHostArrayOutput() DistributedVirtualSwitchHostArrayOutput
	ToDistributedVirtualSwitchHostArrayOutputWithContext(context.Context) DistributedVirtualSwitchHostArrayOutput
}

type DistributedVirtualSwitchHostArray []DistributedVirtualSwitchHostInput

func (DistributedVirtualSwitchHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedVirtualSwitchHost)(nil)).Elem()
}

func (i DistributedVirtualSwitchHostArray) ToDistributedVirtualSwitchHostArrayOutput() DistributedVirtualSwitchHostArrayOutput {
	return i.ToDistributedVirtualSwitchHostArrayOutputWithContext(context.Background())
}

func (i DistributedVirtualSwitchHostArray) ToDistributedVirtualSwitchHostArrayOutputWithContext(ctx context.Context) DistributedVirtualSwitchHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchHostArrayOutput)
}

type DistributedVirtualSwitchHostOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedVirtualSwitchHost)(nil)).Elem()
}

func (o DistributedVirtualSwitchHostOutput) ToDistributedVirtualSwitchHostOutput() DistributedVirtualSwitchHostOutput {
	return o
}

func (o DistributedVirtualSwitchHostOutput) ToDistributedVirtualSwitchHostOutputWithContext(ctx context.Context) DistributedVirtualSwitchHostOutput {
	return o
}

// Name of the physical NIC to be added to the proxy switch.
func (o DistributedVirtualSwitchHostOutput) Devices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributedVirtualSwitchHost) []string { return v.Devices }).(pulumi.StringArrayOutput)
}

// The managed object ID of the host this specification applies to.
func (o DistributedVirtualSwitchHostOutput) HostSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v DistributedVirtualSwitchHost) string { return v.HostSystemId }).(pulumi.StringOutput)
}

type DistributedVirtualSwitchHostArrayOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedVirtualSwitchHost)(nil)).Elem()
}

func (o DistributedVirtualSwitchHostArrayOutput) ToDistributedVirtualSwitchHostArrayOutput() DistributedVirtualSwitchHostArrayOutput {
	return o
}

func (o DistributedVirtualSwitchHostArrayOutput) ToDistributedVirtualSwitchHostArrayOutputWithContext(ctx context.Context) DistributedVirtualSwitchHostArrayOutput {
	return o
}

func (o DistributedVirtualSwitchHostArrayOutput) Index(i pulumi.IntInput) DistributedVirtualSwitchHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedVirtualSwitchHost {
		return vs[0].([]DistributedVirtualSwitchHost)[vs[1].(int)]
	}).(DistributedVirtualSwitchHostOutput)
}

type DistributedVirtualSwitchPvlanMapping struct {
	// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	PrimaryVlanId int `pulumi:"primaryVlanId"`
	// The private VLAN type. Valid values are promiscuous, community and isolated.
	PvlanType string `pulumi:"pvlanType"`
	// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	SecondaryVlanId int `pulumi:"secondaryVlanId"`
}

// DistributedVirtualSwitchPvlanMappingInput is an input type that accepts DistributedVirtualSwitchPvlanMappingArgs and DistributedVirtualSwitchPvlanMappingOutput values.
// You can construct a concrete instance of `DistributedVirtualSwitchPvlanMappingInput` via:
//
//	DistributedVirtualSwitchPvlanMappingArgs{...}
type DistributedVirtualSwitchPvlanMappingInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchPvlanMappingOutput() DistributedVirtualSwitchPvlanMappingOutput
	ToDistributedVirtualSwitchPvlanMappingOutputWithContext(context.Context) DistributedVirtualSwitchPvlanMappingOutput
}

type DistributedVirtualSwitchPvlanMappingArgs struct {
	// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	PrimaryVlanId pulumi.IntInput `pulumi:"primaryVlanId"`
	// The private VLAN type. Valid values are promiscuous, community and isolated.
	PvlanType pulumi.StringInput `pulumi:"pvlanType"`
	// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
	SecondaryVlanId pulumi.IntInput `pulumi:"secondaryVlanId"`
}

func (DistributedVirtualSwitchPvlanMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (i DistributedVirtualSwitchPvlanMappingArgs) ToDistributedVirtualSwitchPvlanMappingOutput() DistributedVirtualSwitchPvlanMappingOutput {
	return i.ToDistributedVirtualSwitchPvlanMappingOutputWithContext(context.Background())
}

func (i DistributedVirtualSwitchPvlanMappingArgs) ToDistributedVirtualSwitchPvlanMappingOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchPvlanMappingOutput)
}

// DistributedVirtualSwitchPvlanMappingArrayInput is an input type that accepts DistributedVirtualSwitchPvlanMappingArray and DistributedVirtualSwitchPvlanMappingArrayOutput values.
// You can construct a concrete instance of `DistributedVirtualSwitchPvlanMappingArrayInput` via:
//
//	DistributedVirtualSwitchPvlanMappingArray{ DistributedVirtualSwitchPvlanMappingArgs{...} }
type DistributedVirtualSwitchPvlanMappingArrayInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchPvlanMappingArrayOutput() DistributedVirtualSwitchPvlanMappingArrayOutput
	ToDistributedVirtualSwitchPvlanMappingArrayOutputWithContext(context.Context) DistributedVirtualSwitchPvlanMappingArrayOutput
}

type DistributedVirtualSwitchPvlanMappingArray []DistributedVirtualSwitchPvlanMappingInput

func (DistributedVirtualSwitchPvlanMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (i DistributedVirtualSwitchPvlanMappingArray) ToDistributedVirtualSwitchPvlanMappingArrayOutput() DistributedVirtualSwitchPvlanMappingArrayOutput {
	return i.ToDistributedVirtualSwitchPvlanMappingArrayOutputWithContext(context.Background())
}

func (i DistributedVirtualSwitchPvlanMappingArray) ToDistributedVirtualSwitchPvlanMappingArrayOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchPvlanMappingArrayOutput)
}

type DistributedVirtualSwitchPvlanMappingOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchPvlanMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (o DistributedVirtualSwitchPvlanMappingOutput) ToDistributedVirtualSwitchPvlanMappingOutput() DistributedVirtualSwitchPvlanMappingOutput {
	return o
}

func (o DistributedVirtualSwitchPvlanMappingOutput) ToDistributedVirtualSwitchPvlanMappingOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingOutput {
	return o
}

// The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
func (o DistributedVirtualSwitchPvlanMappingOutput) PrimaryVlanId() pulumi.IntOutput {
	return o.ApplyT(func(v DistributedVirtualSwitchPvlanMapping) int { return v.PrimaryVlanId }).(pulumi.IntOutput)
}

// The private VLAN type. Valid values are promiscuous, community and isolated.
func (o DistributedVirtualSwitchPvlanMappingOutput) PvlanType() pulumi.StringOutput {
	return o.ApplyT(func(v DistributedVirtualSwitchPvlanMapping) string { return v.PvlanType }).(pulumi.StringOutput)
}

// The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
func (o DistributedVirtualSwitchPvlanMappingOutput) SecondaryVlanId() pulumi.IntOutput {
	return o.ApplyT(func(v DistributedVirtualSwitchPvlanMapping) int { return v.SecondaryVlanId }).(pulumi.IntOutput)
}

type DistributedVirtualSwitchPvlanMappingArrayOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchPvlanMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedVirtualSwitchPvlanMapping)(nil)).Elem()
}

func (o DistributedVirtualSwitchPvlanMappingArrayOutput) ToDistributedVirtualSwitchPvlanMappingArrayOutput() DistributedVirtualSwitchPvlanMappingArrayOutput {
	return o
}

func (o DistributedVirtualSwitchPvlanMappingArrayOutput) ToDistributedVirtualSwitchPvlanMappingArrayOutputWithContext(ctx context.Context) DistributedVirtualSwitchPvlanMappingArrayOutput {
	return o
}

func (o DistributedVirtualSwitchPvlanMappingArrayOutput) Index(i pulumi.IntInput) DistributedVirtualSwitchPvlanMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedVirtualSwitchPvlanMapping {
		return vs[0].([]DistributedVirtualSwitchPvlanMapping)[vs[1].(int)]
	}).(DistributedVirtualSwitchPvlanMappingOutput)
}

type DistributedVirtualSwitchVlanRange struct {
	// The minimum VLAN to use in the range.
	MaxVlan int `pulumi:"maxVlan"`
	// The minimum VLAN to use in the range.
	MinVlan int `pulumi:"minVlan"`
}

// DistributedVirtualSwitchVlanRangeInput is an input type that accepts DistributedVirtualSwitchVlanRangeArgs and DistributedVirtualSwitchVlanRangeOutput values.
// You can construct a concrete instance of `DistributedVirtualSwitchVlanRangeInput` via:
//
//	DistributedVirtualSwitchVlanRangeArgs{...}
type DistributedVirtualSwitchVlanRangeInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchVlanRangeOutput() DistributedVirtualSwitchVlanRangeOutput
	ToDistributedVirtualSwitchVlanRangeOutputWithContext(context.Context) DistributedVirtualSwitchVlanRangeOutput
}

type DistributedVirtualSwitchVlanRangeArgs struct {
	// The minimum VLAN to use in the range.
	MaxVlan pulumi.IntInput `pulumi:"maxVlan"`
	// The minimum VLAN to use in the range.
	MinVlan pulumi.IntInput `pulumi:"minVlan"`
}

func (DistributedVirtualSwitchVlanRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedVirtualSwitchVlanRange)(nil)).Elem()
}

func (i DistributedVirtualSwitchVlanRangeArgs) ToDistributedVirtualSwitchVlanRangeOutput() DistributedVirtualSwitchVlanRangeOutput {
	return i.ToDistributedVirtualSwitchVlanRangeOutputWithContext(context.Background())
}

func (i DistributedVirtualSwitchVlanRangeArgs) ToDistributedVirtualSwitchVlanRangeOutputWithContext(ctx context.Context) DistributedVirtualSwitchVlanRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchVlanRangeOutput)
}

// DistributedVirtualSwitchVlanRangeArrayInput is an input type that accepts DistributedVirtualSwitchVlanRangeArray and DistributedVirtualSwitchVlanRangeArrayOutput values.
// You can construct a concrete instance of `DistributedVirtualSwitchVlanRangeArrayInput` via:
//
//	DistributedVirtualSwitchVlanRangeArray{ DistributedVirtualSwitchVlanRangeArgs{...} }
type DistributedVirtualSwitchVlanRangeArrayInput interface {
	pulumi.Input

	ToDistributedVirtualSwitchVlanRangeArrayOutput() DistributedVirtualSwitchVlanRangeArrayOutput
	ToDistributedVirtualSwitchVlanRangeArrayOutputWithContext(context.Context) DistributedVirtualSwitchVlanRangeArrayOutput
}

type DistributedVirtualSwitchVlanRangeArray []DistributedVirtualSwitchVlanRangeInput

func (DistributedVirtualSwitchVlanRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedVirtualSwitchVlanRange)(nil)).Elem()
}

func (i DistributedVirtualSwitchVlanRangeArray) ToDistributedVirtualSwitchVlanRangeArrayOutput() DistributedVirtualSwitchVlanRangeArrayOutput {
	return i.ToDistributedVirtualSwitchVlanRangeArrayOutputWithContext(context.Background())
}

func (i DistributedVirtualSwitchVlanRangeArray) ToDistributedVirtualSwitchVlanRangeArrayOutputWithContext(ctx context.Context) DistributedVirtualSwitchVlanRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributedVirtualSwitchVlanRangeArrayOutput)
}

type DistributedVirtualSwitchVlanRangeOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchVlanRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributedVirtualSwitchVlanRange)(nil)).Elem()
}

func (o DistributedVirtualSwitchVlanRangeOutput) ToDistributedVirtualSwitchVlanRangeOutput() DistributedVirtualSwitchVlanRangeOutput {
	return o
}

func (o DistributedVirtualSwitchVlanRangeOutput) ToDistributedVirtualSwitchVlanRangeOutputWithContext(ctx context.Context) DistributedVirtualSwitchVlanRangeOutput {
	return o
}

// The minimum VLAN to use in the range.
func (o DistributedVirtualSwitchVlanRangeOutput) MaxVlan() pulumi.IntOutput {
	return o.ApplyT(func(v DistributedVirtualSwitchVlanRange) int { return v.MaxVlan }).(pulumi.IntOutput)
}

// The minimum VLAN to use in the range.
func (o DistributedVirtualSwitchVlanRangeOutput) MinVlan() pulumi.IntOutput {
	return o.ApplyT(func(v DistributedVirtualSwitchVlanRange) int { return v.MinVlan }).(pulumi.IntOutput)
}

type DistributedVirtualSwitchVlanRangeArrayOutput struct{ *pulumi.OutputState }

func (DistributedVirtualSwitchVlanRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributedVirtualSwitchVlanRange)(nil)).Elem()
}

func (o DistributedVirtualSwitchVlanRangeArrayOutput) ToDistributedVirtualSwitchVlanRangeArrayOutput() DistributedVirtualSwitchVlanRangeArrayOutput {
	return o
}

func (o DistributedVirtualSwitchVlanRangeArrayOutput) ToDistributedVirtualSwitchVlanRangeArrayOutputWithContext(ctx context.Context) DistributedVirtualSwitchVlanRangeArrayOutput {
	return o
}

func (o DistributedVirtualSwitchVlanRangeArrayOutput) Index(i pulumi.IntInput) DistributedVirtualSwitchVlanRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributedVirtualSwitchVlanRange {
		return vs[0].([]DistributedVirtualSwitchVlanRange)[vs[1].(int)]
	}).(DistributedVirtualSwitchVlanRangeOutput)
}

type EntityPermissionsPermission struct {
	// Whether `userOrGroup` field refers to a user or a
	// group. True for a group and false for a user.
	IsGroup bool `pulumi:"isGroup"`
	// Whether or not this permission propagates down the
	// hierarchy to sub-entities.
	Propagate bool `pulumi:"propagate"`
	// The role id of the role to be given to the user on
	// the specified entity.
	RoleId string `pulumi:"roleId"`
	// The user/group getting the permission.
	UserOrGroup string `pulumi:"userOrGroup"`
}

// EntityPermissionsPermissionInput is an input type that accepts EntityPermissionsPermissionArgs and EntityPermissionsPermissionOutput values.
// You can construct a concrete instance of `EntityPermissionsPermissionInput` via:
//
//	EntityPermissionsPermissionArgs{...}
type EntityPermissionsPermissionInput interface {
	pulumi.Input

	ToEntityPermissionsPermissionOutput() EntityPermissionsPermissionOutput
	ToEntityPermissionsPermissionOutputWithContext(context.Context) EntityPermissionsPermissionOutput
}

type EntityPermissionsPermissionArgs struct {
	// Whether `userOrGroup` field refers to a user or a
	// group. True for a group and false for a user.
	IsGroup pulumi.BoolInput `pulumi:"isGroup"`
	// Whether or not this permission propagates down the
	// hierarchy to sub-entities.
	Propagate pulumi.BoolInput `pulumi:"propagate"`
	// The role id of the role to be given to the user on
	// the specified entity.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// The user/group getting the permission.
	UserOrGroup pulumi.StringInput `pulumi:"userOrGroup"`
}

func (EntityPermissionsPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityPermissionsPermission)(nil)).Elem()
}

func (i EntityPermissionsPermissionArgs) ToEntityPermissionsPermissionOutput() EntityPermissionsPermissionOutput {
	return i.ToEntityPermissionsPermissionOutputWithContext(context.Background())
}

func (i EntityPermissionsPermissionArgs) ToEntityPermissionsPermissionOutputWithContext(ctx context.Context) EntityPermissionsPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPermissionsPermissionOutput)
}

// EntityPermissionsPermissionArrayInput is an input type that accepts EntityPermissionsPermissionArray and EntityPermissionsPermissionArrayOutput values.
// You can construct a concrete instance of `EntityPermissionsPermissionArrayInput` via:
//
//	EntityPermissionsPermissionArray{ EntityPermissionsPermissionArgs{...} }
type EntityPermissionsPermissionArrayInput interface {
	pulumi.Input

	ToEntityPermissionsPermissionArrayOutput() EntityPermissionsPermissionArrayOutput
	ToEntityPermissionsPermissionArrayOutputWithContext(context.Context) EntityPermissionsPermissionArrayOutput
}

type EntityPermissionsPermissionArray []EntityPermissionsPermissionInput

func (EntityPermissionsPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityPermissionsPermission)(nil)).Elem()
}

func (i EntityPermissionsPermissionArray) ToEntityPermissionsPermissionArrayOutput() EntityPermissionsPermissionArrayOutput {
	return i.ToEntityPermissionsPermissionArrayOutputWithContext(context.Background())
}

func (i EntityPermissionsPermissionArray) ToEntityPermissionsPermissionArrayOutputWithContext(ctx context.Context) EntityPermissionsPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPermissionsPermissionArrayOutput)
}

type EntityPermissionsPermissionOutput struct{ *pulumi.OutputState }

func (EntityPermissionsPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityPermissionsPermission)(nil)).Elem()
}

func (o EntityPermissionsPermissionOutput) ToEntityPermissionsPermissionOutput() EntityPermissionsPermissionOutput {
	return o
}

func (o EntityPermissionsPermissionOutput) ToEntityPermissionsPermissionOutputWithContext(ctx context.Context) EntityPermissionsPermissionOutput {
	return o
}

// Whether `userOrGroup` field refers to a user or a
// group. True for a group and false for a user.
func (o EntityPermissionsPermissionOutput) IsGroup() pulumi.BoolOutput {
	return o.ApplyT(func(v EntityPermissionsPermission) bool { return v.IsGroup }).(pulumi.BoolOutput)
}

// Whether or not this permission propagates down the
// hierarchy to sub-entities.
func (o EntityPermissionsPermissionOutput) Propagate() pulumi.BoolOutput {
	return o.ApplyT(func(v EntityPermissionsPermission) bool { return v.Propagate }).(pulumi.BoolOutput)
}

// The role id of the role to be given to the user on
// the specified entity.
func (o EntityPermissionsPermissionOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v EntityPermissionsPermission) string { return v.RoleId }).(pulumi.StringOutput)
}

// The user/group getting the permission.
func (o EntityPermissionsPermissionOutput) UserOrGroup() pulumi.StringOutput {
	return o.ApplyT(func(v EntityPermissionsPermission) string { return v.UserOrGroup }).(pulumi.StringOutput)
}

type EntityPermissionsPermissionArrayOutput struct{ *pulumi.OutputState }

func (EntityPermissionsPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityPermissionsPermission)(nil)).Elem()
}

func (o EntityPermissionsPermissionArrayOutput) ToEntityPermissionsPermissionArrayOutput() EntityPermissionsPermissionArrayOutput {
	return o
}

func (o EntityPermissionsPermissionArrayOutput) ToEntityPermissionsPermissionArrayOutputWithContext(ctx context.Context) EntityPermissionsPermissionArrayOutput {
	return o
}

func (o EntityPermissionsPermissionArrayOutput) Index(i pulumi.IntInput) EntityPermissionsPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityPermissionsPermission {
		return vs[0].([]EntityPermissionsPermission)[vs[1].(int)]
	}).(EntityPermissionsPermissionOutput)
}

type GuestOsCustomizationSpec struct {
	// The list of DNS servers for a virtual network adapter with a static IP address.
	DnsServerLists []string `pulumi:"dnsServerLists"`
	// A list of DNS search domains to add to the DNS configuration on the virtual machine.
	DnsSuffixLists []string `pulumi:"dnsSuffixLists"`
	// The IPv4 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
	Ipv4Gateway *string `pulumi:"ipv4Gateway"`
	// The IPv6 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
	Ipv6Gateway *string `pulumi:"ipv6Gateway"`
	// A list of configuration options specific to Linux virtual machines.
	LinuxOptions *GuestOsCustomizationSpecLinuxOptions `pulumi:"linuxOptions"`
	// A specification of network interface configuration options.
	NetworkInterfaces []GuestOsCustomizationSpecNetworkInterface `pulumi:"networkInterfaces"`
	// A list of configuration options specific to Windows virtual machines.
	WindowsOptions *GuestOsCustomizationSpecWindowsOptions `pulumi:"windowsOptions"`
	// Use this option to specify a windows sysprep file directly.
	WindowsSysprepText *string `pulumi:"windowsSysprepText"`
}

// GuestOsCustomizationSpecInput is an input type that accepts GuestOsCustomizationSpecArgs and GuestOsCustomizationSpecOutput values.
// You can construct a concrete instance of `GuestOsCustomizationSpecInput` via:
//
//	GuestOsCustomizationSpecArgs{...}
type GuestOsCustomizationSpecInput interface {
	pulumi.Input

	ToGuestOsCustomizationSpecOutput() GuestOsCustomizationSpecOutput
	ToGuestOsCustomizationSpecOutputWithContext(context.Context) GuestOsCustomizationSpecOutput
}

type GuestOsCustomizationSpecArgs struct {
	// The list of DNS servers for a virtual network adapter with a static IP address.
	DnsServerLists pulumi.StringArrayInput `pulumi:"dnsServerLists"`
	// A list of DNS search domains to add to the DNS configuration on the virtual machine.
	DnsSuffixLists pulumi.StringArrayInput `pulumi:"dnsSuffixLists"`
	// The IPv4 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
	Ipv4Gateway pulumi.StringPtrInput `pulumi:"ipv4Gateway"`
	// The IPv6 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
	Ipv6Gateway pulumi.StringPtrInput `pulumi:"ipv6Gateway"`
	// A list of configuration options specific to Linux virtual machines.
	LinuxOptions GuestOsCustomizationSpecLinuxOptionsPtrInput `pulumi:"linuxOptions"`
	// A specification of network interface configuration options.
	NetworkInterfaces GuestOsCustomizationSpecNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// A list of configuration options specific to Windows virtual machines.
	WindowsOptions GuestOsCustomizationSpecWindowsOptionsPtrInput `pulumi:"windowsOptions"`
	// Use this option to specify a windows sysprep file directly.
	WindowsSysprepText pulumi.StringPtrInput `pulumi:"windowsSysprepText"`
}

func (GuestOsCustomizationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsCustomizationSpec)(nil)).Elem()
}

func (i GuestOsCustomizationSpecArgs) ToGuestOsCustomizationSpecOutput() GuestOsCustomizationSpecOutput {
	return i.ToGuestOsCustomizationSpecOutputWithContext(context.Background())
}

func (i GuestOsCustomizationSpecArgs) ToGuestOsCustomizationSpecOutputWithContext(ctx context.Context) GuestOsCustomizationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecOutput)
}

func (i GuestOsCustomizationSpecArgs) ToGuestOsCustomizationSpecPtrOutput() GuestOsCustomizationSpecPtrOutput {
	return i.ToGuestOsCustomizationSpecPtrOutputWithContext(context.Background())
}

func (i GuestOsCustomizationSpecArgs) ToGuestOsCustomizationSpecPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecOutput).ToGuestOsCustomizationSpecPtrOutputWithContext(ctx)
}

// GuestOsCustomizationSpecPtrInput is an input type that accepts GuestOsCustomizationSpecArgs, GuestOsCustomizationSpecPtr and GuestOsCustomizationSpecPtrOutput values.
// You can construct a concrete instance of `GuestOsCustomizationSpecPtrInput` via:
//
//	        GuestOsCustomizationSpecArgs{...}
//
//	or:
//
//	        nil
type GuestOsCustomizationSpecPtrInput interface {
	pulumi.Input

	ToGuestOsCustomizationSpecPtrOutput() GuestOsCustomizationSpecPtrOutput
	ToGuestOsCustomizationSpecPtrOutputWithContext(context.Context) GuestOsCustomizationSpecPtrOutput
}

type guestOsCustomizationSpecPtrType GuestOsCustomizationSpecArgs

func GuestOsCustomizationSpecPtr(v *GuestOsCustomizationSpecArgs) GuestOsCustomizationSpecPtrInput {
	return (*guestOsCustomizationSpecPtrType)(v)
}

func (*guestOsCustomizationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestOsCustomizationSpec)(nil)).Elem()
}

func (i *guestOsCustomizationSpecPtrType) ToGuestOsCustomizationSpecPtrOutput() GuestOsCustomizationSpecPtrOutput {
	return i.ToGuestOsCustomizationSpecPtrOutputWithContext(context.Background())
}

func (i *guestOsCustomizationSpecPtrType) ToGuestOsCustomizationSpecPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecPtrOutput)
}

type GuestOsCustomizationSpecOutput struct{ *pulumi.OutputState }

func (GuestOsCustomizationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsCustomizationSpec)(nil)).Elem()
}

func (o GuestOsCustomizationSpecOutput) ToGuestOsCustomizationSpecOutput() GuestOsCustomizationSpecOutput {
	return o
}

func (o GuestOsCustomizationSpecOutput) ToGuestOsCustomizationSpecOutputWithContext(ctx context.Context) GuestOsCustomizationSpecOutput {
	return o
}

func (o GuestOsCustomizationSpecOutput) ToGuestOsCustomizationSpecPtrOutput() GuestOsCustomizationSpecPtrOutput {
	return o.ToGuestOsCustomizationSpecPtrOutputWithContext(context.Background())
}

func (o GuestOsCustomizationSpecOutput) ToGuestOsCustomizationSpecPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestOsCustomizationSpec) *GuestOsCustomizationSpec {
		return &v
	}).(GuestOsCustomizationSpecPtrOutput)
}

// The list of DNS servers for a virtual network adapter with a static IP address.
func (o GuestOsCustomizationSpecOutput) DnsServerLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpec) []string { return v.DnsServerLists }).(pulumi.StringArrayOutput)
}

// A list of DNS search domains to add to the DNS configuration on the virtual machine.
func (o GuestOsCustomizationSpecOutput) DnsSuffixLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpec) []string { return v.DnsSuffixLists }).(pulumi.StringArrayOutput)
}

// The IPv4 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
func (o GuestOsCustomizationSpecOutput) Ipv4Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpec) *string { return v.Ipv4Gateway }).(pulumi.StringPtrOutput)
}

// The IPv6 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
func (o GuestOsCustomizationSpecOutput) Ipv6Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpec) *string { return v.Ipv6Gateway }).(pulumi.StringPtrOutput)
}

// A list of configuration options specific to Linux virtual machines.
func (o GuestOsCustomizationSpecOutput) LinuxOptions() GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpec) *GuestOsCustomizationSpecLinuxOptions { return v.LinuxOptions }).(GuestOsCustomizationSpecLinuxOptionsPtrOutput)
}

// A specification of network interface configuration options.
func (o GuestOsCustomizationSpecOutput) NetworkInterfaces() GuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpec) []GuestOsCustomizationSpecNetworkInterface {
		return v.NetworkInterfaces
	}).(GuestOsCustomizationSpecNetworkInterfaceArrayOutput)
}

// A list of configuration options specific to Windows virtual machines.
func (o GuestOsCustomizationSpecOutput) WindowsOptions() GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpec) *GuestOsCustomizationSpecWindowsOptions { return v.WindowsOptions }).(GuestOsCustomizationSpecWindowsOptionsPtrOutput)
}

// Use this option to specify a windows sysprep file directly.
func (o GuestOsCustomizationSpecOutput) WindowsSysprepText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpec) *string { return v.WindowsSysprepText }).(pulumi.StringPtrOutput)
}

type GuestOsCustomizationSpecPtrOutput struct{ *pulumi.OutputState }

func (GuestOsCustomizationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestOsCustomizationSpec)(nil)).Elem()
}

func (o GuestOsCustomizationSpecPtrOutput) ToGuestOsCustomizationSpecPtrOutput() GuestOsCustomizationSpecPtrOutput {
	return o
}

func (o GuestOsCustomizationSpecPtrOutput) ToGuestOsCustomizationSpecPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecPtrOutput {
	return o
}

func (o GuestOsCustomizationSpecPtrOutput) Elem() GuestOsCustomizationSpecOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) GuestOsCustomizationSpec {
		if v != nil {
			return *v
		}
		var ret GuestOsCustomizationSpec
		return ret
	}).(GuestOsCustomizationSpecOutput)
}

// The list of DNS servers for a virtual network adapter with a static IP address.
func (o GuestOsCustomizationSpecPtrOutput) DnsServerLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) []string {
		if v == nil {
			return nil
		}
		return v.DnsServerLists
	}).(pulumi.StringArrayOutput)
}

// A list of DNS search domains to add to the DNS configuration on the virtual machine.
func (o GuestOsCustomizationSpecPtrOutput) DnsSuffixLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) []string {
		if v == nil {
			return nil
		}
		return v.DnsSuffixLists
	}).(pulumi.StringArrayOutput)
}

// The IPv4 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
func (o GuestOsCustomizationSpecPtrOutput) Ipv4Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Ipv4Gateway
	}).(pulumi.StringPtrOutput)
}

// The IPv6 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
func (o GuestOsCustomizationSpecPtrOutput) Ipv6Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) *string {
		if v == nil {
			return nil
		}
		return v.Ipv6Gateway
	}).(pulumi.StringPtrOutput)
}

// A list of configuration options specific to Linux virtual machines.
func (o GuestOsCustomizationSpecPtrOutput) LinuxOptions() GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) *GuestOsCustomizationSpecLinuxOptions {
		if v == nil {
			return nil
		}
		return v.LinuxOptions
	}).(GuestOsCustomizationSpecLinuxOptionsPtrOutput)
}

// A specification of network interface configuration options.
func (o GuestOsCustomizationSpecPtrOutput) NetworkInterfaces() GuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) []GuestOsCustomizationSpecNetworkInterface {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(GuestOsCustomizationSpecNetworkInterfaceArrayOutput)
}

// A list of configuration options specific to Windows virtual machines.
func (o GuestOsCustomizationSpecPtrOutput) WindowsOptions() GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) *GuestOsCustomizationSpecWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(GuestOsCustomizationSpecWindowsOptionsPtrOutput)
}

// Use this option to specify a windows sysprep file directly.
func (o GuestOsCustomizationSpecPtrOutput) WindowsSysprepText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpec) *string {
		if v == nil {
			return nil
		}
		return v.WindowsSysprepText
	}).(pulumi.StringPtrOutput)
}

type GuestOsCustomizationSpecLinuxOptions struct {
	// The domain name for this virtual machine.
	Domain string `pulumi:"domain"`
	// The hostname for this virtual machine.
	HostName string `pulumi:"hostName"`
	// Specifies whether or not the hardware clock should be in UTC or not.
	HwClockUtc *bool `pulumi:"hwClockUtc"`
	// The customization script to run before and or after guest customization
	ScriptText *string `pulumi:"scriptText"`
	// Customize the time zone on the VM. This should be a time zone-style entry, like America/Los_Angeles.
	TimeZone *string `pulumi:"timeZone"`
}

// GuestOsCustomizationSpecLinuxOptionsInput is an input type that accepts GuestOsCustomizationSpecLinuxOptionsArgs and GuestOsCustomizationSpecLinuxOptionsOutput values.
// You can construct a concrete instance of `GuestOsCustomizationSpecLinuxOptionsInput` via:
//
//	GuestOsCustomizationSpecLinuxOptionsArgs{...}
type GuestOsCustomizationSpecLinuxOptionsInput interface {
	pulumi.Input

	ToGuestOsCustomizationSpecLinuxOptionsOutput() GuestOsCustomizationSpecLinuxOptionsOutput
	ToGuestOsCustomizationSpecLinuxOptionsOutputWithContext(context.Context) GuestOsCustomizationSpecLinuxOptionsOutput
}

type GuestOsCustomizationSpecLinuxOptionsArgs struct {
	// The domain name for this virtual machine.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The hostname for this virtual machine.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Specifies whether or not the hardware clock should be in UTC or not.
	HwClockUtc pulumi.BoolPtrInput `pulumi:"hwClockUtc"`
	// The customization script to run before and or after guest customization
	ScriptText pulumi.StringPtrInput `pulumi:"scriptText"`
	// Customize the time zone on the VM. This should be a time zone-style entry, like America/Los_Angeles.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (GuestOsCustomizationSpecLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsCustomizationSpecLinuxOptions)(nil)).Elem()
}

func (i GuestOsCustomizationSpecLinuxOptionsArgs) ToGuestOsCustomizationSpecLinuxOptionsOutput() GuestOsCustomizationSpecLinuxOptionsOutput {
	return i.ToGuestOsCustomizationSpecLinuxOptionsOutputWithContext(context.Background())
}

func (i GuestOsCustomizationSpecLinuxOptionsArgs) ToGuestOsCustomizationSpecLinuxOptionsOutputWithContext(ctx context.Context) GuestOsCustomizationSpecLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecLinuxOptionsOutput)
}

func (i GuestOsCustomizationSpecLinuxOptionsArgs) ToGuestOsCustomizationSpecLinuxOptionsPtrOutput() GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return i.ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i GuestOsCustomizationSpecLinuxOptionsArgs) ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecLinuxOptionsOutput).ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(ctx)
}

// GuestOsCustomizationSpecLinuxOptionsPtrInput is an input type that accepts GuestOsCustomizationSpecLinuxOptionsArgs, GuestOsCustomizationSpecLinuxOptionsPtr and GuestOsCustomizationSpecLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `GuestOsCustomizationSpecLinuxOptionsPtrInput` via:
//
//	        GuestOsCustomizationSpecLinuxOptionsArgs{...}
//
//	or:
//
//	        nil
type GuestOsCustomizationSpecLinuxOptionsPtrInput interface {
	pulumi.Input

	ToGuestOsCustomizationSpecLinuxOptionsPtrOutput() GuestOsCustomizationSpecLinuxOptionsPtrOutput
	ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(context.Context) GuestOsCustomizationSpecLinuxOptionsPtrOutput
}

type guestOsCustomizationSpecLinuxOptionsPtrType GuestOsCustomizationSpecLinuxOptionsArgs

func GuestOsCustomizationSpecLinuxOptionsPtr(v *GuestOsCustomizationSpecLinuxOptionsArgs) GuestOsCustomizationSpecLinuxOptionsPtrInput {
	return (*guestOsCustomizationSpecLinuxOptionsPtrType)(v)
}

func (*guestOsCustomizationSpecLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestOsCustomizationSpecLinuxOptions)(nil)).Elem()
}

func (i *guestOsCustomizationSpecLinuxOptionsPtrType) ToGuestOsCustomizationSpecLinuxOptionsPtrOutput() GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return i.ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *guestOsCustomizationSpecLinuxOptionsPtrType) ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecLinuxOptionsPtrOutput)
}

type GuestOsCustomizationSpecLinuxOptionsOutput struct{ *pulumi.OutputState }

func (GuestOsCustomizationSpecLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsCustomizationSpecLinuxOptions)(nil)).Elem()
}

func (o GuestOsCustomizationSpecLinuxOptionsOutput) ToGuestOsCustomizationSpecLinuxOptionsOutput() GuestOsCustomizationSpecLinuxOptionsOutput {
	return o
}

func (o GuestOsCustomizationSpecLinuxOptionsOutput) ToGuestOsCustomizationSpecLinuxOptionsOutputWithContext(ctx context.Context) GuestOsCustomizationSpecLinuxOptionsOutput {
	return o
}

func (o GuestOsCustomizationSpecLinuxOptionsOutput) ToGuestOsCustomizationSpecLinuxOptionsPtrOutput() GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return o.ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o GuestOsCustomizationSpecLinuxOptionsOutput) ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestOsCustomizationSpecLinuxOptions) *GuestOsCustomizationSpecLinuxOptions {
		return &v
	}).(GuestOsCustomizationSpecLinuxOptionsPtrOutput)
}

// The domain name for this virtual machine.
func (o GuestOsCustomizationSpecLinuxOptionsOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecLinuxOptions) string { return v.Domain }).(pulumi.StringOutput)
}

// The hostname for this virtual machine.
func (o GuestOsCustomizationSpecLinuxOptionsOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecLinuxOptions) string { return v.HostName }).(pulumi.StringOutput)
}

// Specifies whether or not the hardware clock should be in UTC or not.
func (o GuestOsCustomizationSpecLinuxOptionsOutput) HwClockUtc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecLinuxOptions) *bool { return v.HwClockUtc }).(pulumi.BoolPtrOutput)
}

// The customization script to run before and or after guest customization
func (o GuestOsCustomizationSpecLinuxOptionsOutput) ScriptText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecLinuxOptions) *string { return v.ScriptText }).(pulumi.StringPtrOutput)
}

// Customize the time zone on the VM. This should be a time zone-style entry, like America/Los_Angeles.
func (o GuestOsCustomizationSpecLinuxOptionsOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecLinuxOptions) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type GuestOsCustomizationSpecLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (GuestOsCustomizationSpecLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestOsCustomizationSpecLinuxOptions)(nil)).Elem()
}

func (o GuestOsCustomizationSpecLinuxOptionsPtrOutput) ToGuestOsCustomizationSpecLinuxOptionsPtrOutput() GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return o
}

func (o GuestOsCustomizationSpecLinuxOptionsPtrOutput) ToGuestOsCustomizationSpecLinuxOptionsPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecLinuxOptionsPtrOutput {
	return o
}

func (o GuestOsCustomizationSpecLinuxOptionsPtrOutput) Elem() GuestOsCustomizationSpecLinuxOptionsOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecLinuxOptions) GuestOsCustomizationSpecLinuxOptions {
		if v != nil {
			return *v
		}
		var ret GuestOsCustomizationSpecLinuxOptions
		return ret
	}).(GuestOsCustomizationSpecLinuxOptionsOutput)
}

// The domain name for this virtual machine.
func (o GuestOsCustomizationSpecLinuxOptionsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// The hostname for this virtual machine.
func (o GuestOsCustomizationSpecLinuxOptionsPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not the hardware clock should be in UTC or not.
func (o GuestOsCustomizationSpecLinuxOptionsPtrOutput) HwClockUtc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecLinuxOptions) *bool {
		if v == nil {
			return nil
		}
		return v.HwClockUtc
	}).(pulumi.BoolPtrOutput)
}

// The customization script to run before and or after guest customization
func (o GuestOsCustomizationSpecLinuxOptionsPtrOutput) ScriptText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.ScriptText
	}).(pulumi.StringPtrOutput)
}

// Customize the time zone on the VM. This should be a time zone-style entry, like America/Los_Angeles.
func (o GuestOsCustomizationSpecLinuxOptionsPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type GuestOsCustomizationSpecNetworkInterface struct {
	// A DNS search domain to add to the DNS configuration on the virtual machine.
	DnsDomain *string `pulumi:"dnsDomain"`
	// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
	DnsServerLists []string `pulumi:"dnsServerLists"`
	// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
	Ipv4Netmask *int `pulumi:"ipv4Netmask"`
	// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
	Ipv6Address *string `pulumi:"ipv6Address"`
	// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
	Ipv6Netmask *int `pulumi:"ipv6Netmask"`
}

// GuestOsCustomizationSpecNetworkInterfaceInput is an input type that accepts GuestOsCustomizationSpecNetworkInterfaceArgs and GuestOsCustomizationSpecNetworkInterfaceOutput values.
// You can construct a concrete instance of `GuestOsCustomizationSpecNetworkInterfaceInput` via:
//
//	GuestOsCustomizationSpecNetworkInterfaceArgs{...}
type GuestOsCustomizationSpecNetworkInterfaceInput interface {
	pulumi.Input

	ToGuestOsCustomizationSpecNetworkInterfaceOutput() GuestOsCustomizationSpecNetworkInterfaceOutput
	ToGuestOsCustomizationSpecNetworkInterfaceOutputWithContext(context.Context) GuestOsCustomizationSpecNetworkInterfaceOutput
}

type GuestOsCustomizationSpecNetworkInterfaceArgs struct {
	// A DNS search domain to add to the DNS configuration on the virtual machine.
	DnsDomain pulumi.StringPtrInput `pulumi:"dnsDomain"`
	// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
	DnsServerLists pulumi.StringArrayInput `pulumi:"dnsServerLists"`
	// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
	// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
	Ipv4Netmask pulumi.IntPtrInput `pulumi:"ipv4Netmask"`
	// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
	// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
	Ipv6Netmask pulumi.IntPtrInput `pulumi:"ipv6Netmask"`
}

func (GuestOsCustomizationSpecNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsCustomizationSpecNetworkInterface)(nil)).Elem()
}

func (i GuestOsCustomizationSpecNetworkInterfaceArgs) ToGuestOsCustomizationSpecNetworkInterfaceOutput() GuestOsCustomizationSpecNetworkInterfaceOutput {
	return i.ToGuestOsCustomizationSpecNetworkInterfaceOutputWithContext(context.Background())
}

func (i GuestOsCustomizationSpecNetworkInterfaceArgs) ToGuestOsCustomizationSpecNetworkInterfaceOutputWithContext(ctx context.Context) GuestOsCustomizationSpecNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecNetworkInterfaceOutput)
}

// GuestOsCustomizationSpecNetworkInterfaceArrayInput is an input type that accepts GuestOsCustomizationSpecNetworkInterfaceArray and GuestOsCustomizationSpecNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GuestOsCustomizationSpecNetworkInterfaceArrayInput` via:
//
//	GuestOsCustomizationSpecNetworkInterfaceArray{ GuestOsCustomizationSpecNetworkInterfaceArgs{...} }
type GuestOsCustomizationSpecNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGuestOsCustomizationSpecNetworkInterfaceArrayOutput() GuestOsCustomizationSpecNetworkInterfaceArrayOutput
	ToGuestOsCustomizationSpecNetworkInterfaceArrayOutputWithContext(context.Context) GuestOsCustomizationSpecNetworkInterfaceArrayOutput
}

type GuestOsCustomizationSpecNetworkInterfaceArray []GuestOsCustomizationSpecNetworkInterfaceInput

func (GuestOsCustomizationSpecNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestOsCustomizationSpecNetworkInterface)(nil)).Elem()
}

func (i GuestOsCustomizationSpecNetworkInterfaceArray) ToGuestOsCustomizationSpecNetworkInterfaceArrayOutput() GuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return i.ToGuestOsCustomizationSpecNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GuestOsCustomizationSpecNetworkInterfaceArray) ToGuestOsCustomizationSpecNetworkInterfaceArrayOutputWithContext(ctx context.Context) GuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecNetworkInterfaceArrayOutput)
}

type GuestOsCustomizationSpecNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GuestOsCustomizationSpecNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsCustomizationSpecNetworkInterface)(nil)).Elem()
}

func (o GuestOsCustomizationSpecNetworkInterfaceOutput) ToGuestOsCustomizationSpecNetworkInterfaceOutput() GuestOsCustomizationSpecNetworkInterfaceOutput {
	return o
}

func (o GuestOsCustomizationSpecNetworkInterfaceOutput) ToGuestOsCustomizationSpecNetworkInterfaceOutputWithContext(ctx context.Context) GuestOsCustomizationSpecNetworkInterfaceOutput {
	return o
}

// A DNS search domain to add to the DNS configuration on the virtual machine.
func (o GuestOsCustomizationSpecNetworkInterfaceOutput) DnsDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecNetworkInterface) *string { return v.DnsDomain }).(pulumi.StringPtrOutput)
}

// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
func (o GuestOsCustomizationSpecNetworkInterfaceOutput) DnsServerLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecNetworkInterface) []string { return v.DnsServerLists }).(pulumi.StringArrayOutput)
}

// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
func (o GuestOsCustomizationSpecNetworkInterfaceOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecNetworkInterface) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
func (o GuestOsCustomizationSpecNetworkInterfaceOutput) Ipv4Netmask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecNetworkInterface) *int { return v.Ipv4Netmask }).(pulumi.IntPtrOutput)
}

// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
func (o GuestOsCustomizationSpecNetworkInterfaceOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecNetworkInterface) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
func (o GuestOsCustomizationSpecNetworkInterfaceOutput) Ipv6Netmask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecNetworkInterface) *int { return v.Ipv6Netmask }).(pulumi.IntPtrOutput)
}

type GuestOsCustomizationSpecNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GuestOsCustomizationSpecNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuestOsCustomizationSpecNetworkInterface)(nil)).Elem()
}

func (o GuestOsCustomizationSpecNetworkInterfaceArrayOutput) ToGuestOsCustomizationSpecNetworkInterfaceArrayOutput() GuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return o
}

func (o GuestOsCustomizationSpecNetworkInterfaceArrayOutput) ToGuestOsCustomizationSpecNetworkInterfaceArrayOutputWithContext(ctx context.Context) GuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return o
}

func (o GuestOsCustomizationSpecNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GuestOsCustomizationSpecNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuestOsCustomizationSpecNetworkInterface {
		return vs[0].([]GuestOsCustomizationSpecNetworkInterface)[vs[1].(int)]
	}).(GuestOsCustomizationSpecNetworkInterfaceOutput)
}

type GuestOsCustomizationSpecWindowsOptions struct {
	// The new administrator password for this virtual machine.
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies whether or not the VM automatically logs on as Administrator.
	AutoLogon *bool `pulumi:"autoLogon"`
	// Specifies how many times the VM should auto-logon the Administrator account when autoLogon is true.
	AutoLogonCount *int `pulumi:"autoLogonCount"`
	// The host name for this virtual machine.
	ComputerName string `pulumi:"computerName"`
	// The password of the domain administrator used to join this virtual machine to the domain.
	DomainAdminPassword *string `pulumi:"domainAdminPassword"`
	// The user account of the domain administrator used to join this virtual machine to the domain.
	DomainAdminUser *string `pulumi:"domainAdminUser"`
	// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
	DomainOu *string `pulumi:"domainOu"`
	// The full name of the user of this virtual machine.
	FullName *string `pulumi:"fullName"`
	// The domain that the virtual machine should join.
	JoinDomain *string `pulumi:"joinDomain"`
	// The organization name this virtual machine is being installed for.
	OrganizationName *string `pulumi:"organizationName"`
	// The product key for this virtual machine.
	ProductKey *string `pulumi:"productKey"`
	// A list of commands to run at first user logon, after guest customization.
	RunOnceCommandLists []string `pulumi:"runOnceCommandLists"`
	// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
	TimeZone *int `pulumi:"timeZone"`
	// The workgroup for this virtual machine if not joining a domain.
	Workgroup *string `pulumi:"workgroup"`
}

// GuestOsCustomizationSpecWindowsOptionsInput is an input type that accepts GuestOsCustomizationSpecWindowsOptionsArgs and GuestOsCustomizationSpecWindowsOptionsOutput values.
// You can construct a concrete instance of `GuestOsCustomizationSpecWindowsOptionsInput` via:
//
//	GuestOsCustomizationSpecWindowsOptionsArgs{...}
type GuestOsCustomizationSpecWindowsOptionsInput interface {
	pulumi.Input

	ToGuestOsCustomizationSpecWindowsOptionsOutput() GuestOsCustomizationSpecWindowsOptionsOutput
	ToGuestOsCustomizationSpecWindowsOptionsOutputWithContext(context.Context) GuestOsCustomizationSpecWindowsOptionsOutput
}

type GuestOsCustomizationSpecWindowsOptionsArgs struct {
	// The new administrator password for this virtual machine.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies whether or not the VM automatically logs on as Administrator.
	AutoLogon pulumi.BoolPtrInput `pulumi:"autoLogon"`
	// Specifies how many times the VM should auto-logon the Administrator account when autoLogon is true.
	AutoLogonCount pulumi.IntPtrInput `pulumi:"autoLogonCount"`
	// The host name for this virtual machine.
	ComputerName pulumi.StringInput `pulumi:"computerName"`
	// The password of the domain administrator used to join this virtual machine to the domain.
	DomainAdminPassword pulumi.StringPtrInput `pulumi:"domainAdminPassword"`
	// The user account of the domain administrator used to join this virtual machine to the domain.
	DomainAdminUser pulumi.StringPtrInput `pulumi:"domainAdminUser"`
	// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
	DomainOu pulumi.StringPtrInput `pulumi:"domainOu"`
	// The full name of the user of this virtual machine.
	FullName pulumi.StringPtrInput `pulumi:"fullName"`
	// The domain that the virtual machine should join.
	JoinDomain pulumi.StringPtrInput `pulumi:"joinDomain"`
	// The organization name this virtual machine is being installed for.
	OrganizationName pulumi.StringPtrInput `pulumi:"organizationName"`
	// The product key for this virtual machine.
	ProductKey pulumi.StringPtrInput `pulumi:"productKey"`
	// A list of commands to run at first user logon, after guest customization.
	RunOnceCommandLists pulumi.StringArrayInput `pulumi:"runOnceCommandLists"`
	// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
	TimeZone pulumi.IntPtrInput `pulumi:"timeZone"`
	// The workgroup for this virtual machine if not joining a domain.
	Workgroup pulumi.StringPtrInput `pulumi:"workgroup"`
}

func (GuestOsCustomizationSpecWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsCustomizationSpecWindowsOptions)(nil)).Elem()
}

func (i GuestOsCustomizationSpecWindowsOptionsArgs) ToGuestOsCustomizationSpecWindowsOptionsOutput() GuestOsCustomizationSpecWindowsOptionsOutput {
	return i.ToGuestOsCustomizationSpecWindowsOptionsOutputWithContext(context.Background())
}

func (i GuestOsCustomizationSpecWindowsOptionsArgs) ToGuestOsCustomizationSpecWindowsOptionsOutputWithContext(ctx context.Context) GuestOsCustomizationSpecWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecWindowsOptionsOutput)
}

func (i GuestOsCustomizationSpecWindowsOptionsArgs) ToGuestOsCustomizationSpecWindowsOptionsPtrOutput() GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return i.ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i GuestOsCustomizationSpecWindowsOptionsArgs) ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecWindowsOptionsOutput).ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(ctx)
}

// GuestOsCustomizationSpecWindowsOptionsPtrInput is an input type that accepts GuestOsCustomizationSpecWindowsOptionsArgs, GuestOsCustomizationSpecWindowsOptionsPtr and GuestOsCustomizationSpecWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `GuestOsCustomizationSpecWindowsOptionsPtrInput` via:
//
//	        GuestOsCustomizationSpecWindowsOptionsArgs{...}
//
//	or:
//
//	        nil
type GuestOsCustomizationSpecWindowsOptionsPtrInput interface {
	pulumi.Input

	ToGuestOsCustomizationSpecWindowsOptionsPtrOutput() GuestOsCustomizationSpecWindowsOptionsPtrOutput
	ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(context.Context) GuestOsCustomizationSpecWindowsOptionsPtrOutput
}

type guestOsCustomizationSpecWindowsOptionsPtrType GuestOsCustomizationSpecWindowsOptionsArgs

func GuestOsCustomizationSpecWindowsOptionsPtr(v *GuestOsCustomizationSpecWindowsOptionsArgs) GuestOsCustomizationSpecWindowsOptionsPtrInput {
	return (*guestOsCustomizationSpecWindowsOptionsPtrType)(v)
}

func (*guestOsCustomizationSpecWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestOsCustomizationSpecWindowsOptions)(nil)).Elem()
}

func (i *guestOsCustomizationSpecWindowsOptionsPtrType) ToGuestOsCustomizationSpecWindowsOptionsPtrOutput() GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return i.ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *guestOsCustomizationSpecWindowsOptionsPtrType) ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuestOsCustomizationSpecWindowsOptionsPtrOutput)
}

type GuestOsCustomizationSpecWindowsOptionsOutput struct{ *pulumi.OutputState }

func (GuestOsCustomizationSpecWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuestOsCustomizationSpecWindowsOptions)(nil)).Elem()
}

func (o GuestOsCustomizationSpecWindowsOptionsOutput) ToGuestOsCustomizationSpecWindowsOptionsOutput() GuestOsCustomizationSpecWindowsOptionsOutput {
	return o
}

func (o GuestOsCustomizationSpecWindowsOptionsOutput) ToGuestOsCustomizationSpecWindowsOptionsOutputWithContext(ctx context.Context) GuestOsCustomizationSpecWindowsOptionsOutput {
	return o
}

func (o GuestOsCustomizationSpecWindowsOptionsOutput) ToGuestOsCustomizationSpecWindowsOptionsPtrOutput() GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return o.ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o GuestOsCustomizationSpecWindowsOptionsOutput) ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuestOsCustomizationSpecWindowsOptions) *GuestOsCustomizationSpecWindowsOptions {
		return &v
	}).(GuestOsCustomizationSpecWindowsOptionsPtrOutput)
}

// The new administrator password for this virtual machine.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies whether or not the VM automatically logs on as Administrator.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) AutoLogon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *bool { return v.AutoLogon }).(pulumi.BoolPtrOutput)
}

// Specifies how many times the VM should auto-logon the Administrator account when autoLogon is true.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) AutoLogonCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *int { return v.AutoLogonCount }).(pulumi.IntPtrOutput)
}

// The host name for this virtual machine.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) ComputerName() pulumi.StringOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) string { return v.ComputerName }).(pulumi.StringOutput)
}

// The password of the domain administrator used to join this virtual machine to the domain.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) DomainAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.DomainAdminPassword }).(pulumi.StringPtrOutput)
}

// The user account of the domain administrator used to join this virtual machine to the domain.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) DomainAdminUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.DomainAdminUser }).(pulumi.StringPtrOutput)
}

// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) DomainOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.DomainOu }).(pulumi.StringPtrOutput)
}

// The full name of the user of this virtual machine.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.FullName }).(pulumi.StringPtrOutput)
}

// The domain that the virtual machine should join.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) JoinDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.JoinDomain }).(pulumi.StringPtrOutput)
}

// The organization name this virtual machine is being installed for.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.OrganizationName }).(pulumi.StringPtrOutput)
}

// The product key for this virtual machine.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) ProductKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.ProductKey }).(pulumi.StringPtrOutput)
}

// A list of commands to run at first user logon, after guest customization.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) RunOnceCommandLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) []string { return v.RunOnceCommandLists }).(pulumi.StringArrayOutput)
}

// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) TimeZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *int { return v.TimeZone }).(pulumi.IntPtrOutput)
}

// The workgroup for this virtual machine if not joining a domain.
func (o GuestOsCustomizationSpecWindowsOptionsOutput) Workgroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuestOsCustomizationSpecWindowsOptions) *string { return v.Workgroup }).(pulumi.StringPtrOutput)
}

type GuestOsCustomizationSpecWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (GuestOsCustomizationSpecWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuestOsCustomizationSpecWindowsOptions)(nil)).Elem()
}

func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) ToGuestOsCustomizationSpecWindowsOptionsPtrOutput() GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return o
}

func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) ToGuestOsCustomizationSpecWindowsOptionsPtrOutputWithContext(ctx context.Context) GuestOsCustomizationSpecWindowsOptionsPtrOutput {
	return o
}

func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) Elem() GuestOsCustomizationSpecWindowsOptionsOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) GuestOsCustomizationSpecWindowsOptions {
		if v != nil {
			return *v
		}
		var ret GuestOsCustomizationSpecWindowsOptions
		return ret
	}).(GuestOsCustomizationSpecWindowsOptionsOutput)
}

// The new administrator password for this virtual machine.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not the VM automatically logs on as Administrator.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) AutoLogon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *bool {
		if v == nil {
			return nil
		}
		return v.AutoLogon
	}).(pulumi.BoolPtrOutput)
}

// Specifies how many times the VM should auto-logon the Administrator account when autoLogon is true.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) AutoLogonCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *int {
		if v == nil {
			return nil
		}
		return v.AutoLogonCount
	}).(pulumi.IntPtrOutput)
}

// The host name for this virtual machine.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return &v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// The password of the domain administrator used to join this virtual machine to the domain.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) DomainAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.DomainAdminPassword
	}).(pulumi.StringPtrOutput)
}

// The user account of the domain administrator used to join this virtual machine to the domain.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) DomainAdminUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.DomainAdminUser
	}).(pulumi.StringPtrOutput)
}

// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) DomainOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.DomainOu
	}).(pulumi.StringPtrOutput)
}

// The full name of the user of this virtual machine.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.FullName
	}).(pulumi.StringPtrOutput)
}

// The domain that the virtual machine should join.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) JoinDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomain
	}).(pulumi.StringPtrOutput)
}

// The organization name this virtual machine is being installed for.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationName
	}).(pulumi.StringPtrOutput)
}

// The product key for this virtual machine.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) ProductKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.ProductKey
	}).(pulumi.StringPtrOutput)
}

// A list of commands to run at first user logon, after guest customization.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) RunOnceCommandLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) []string {
		if v == nil {
			return nil
		}
		return v.RunOnceCommandLists
	}).(pulumi.StringArrayOutput)
}

// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) TimeZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *int {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.IntPtrOutput)
}

// The workgroup for this virtual machine if not joining a domain.
func (o GuestOsCustomizationSpecWindowsOptionsPtrOutput) Workgroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuestOsCustomizationSpecWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.Workgroup
	}).(pulumi.StringPtrOutput)
}

type HostPortGroupPort struct {
	// The key for this port group as returned from the vSphere API.
	Key *string `pulumi:"key"`
	// The MAC addresses of the network service of the virtual machine connected on this port.
	MacAddresses []string `pulumi:"macAddresses"`
	// Type type of the entity connected on this port. Possible values are host (VMKkernel), systemManagement (service console), virtualMachine, or unknown.
	Type *string `pulumi:"type"`
}

// HostPortGroupPortInput is an input type that accepts HostPortGroupPortArgs and HostPortGroupPortOutput values.
// You can construct a concrete instance of `HostPortGroupPortInput` via:
//
//	HostPortGroupPortArgs{...}
type HostPortGroupPortInput interface {
	pulumi.Input

	ToHostPortGroupPortOutput() HostPortGroupPortOutput
	ToHostPortGroupPortOutputWithContext(context.Context) HostPortGroupPortOutput
}

type HostPortGroupPortArgs struct {
	// The key for this port group as returned from the vSphere API.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The MAC addresses of the network service of the virtual machine connected on this port.
	MacAddresses pulumi.StringArrayInput `pulumi:"macAddresses"`
	// Type type of the entity connected on this port. Possible values are host (VMKkernel), systemManagement (service console), virtualMachine, or unknown.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (HostPortGroupPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostPortGroupPort)(nil)).Elem()
}

func (i HostPortGroupPortArgs) ToHostPortGroupPortOutput() HostPortGroupPortOutput {
	return i.ToHostPortGroupPortOutputWithContext(context.Background())
}

func (i HostPortGroupPortArgs) ToHostPortGroupPortOutputWithContext(ctx context.Context) HostPortGroupPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostPortGroupPortOutput)
}

// HostPortGroupPortArrayInput is an input type that accepts HostPortGroupPortArray and HostPortGroupPortArrayOutput values.
// You can construct a concrete instance of `HostPortGroupPortArrayInput` via:
//
//	HostPortGroupPortArray{ HostPortGroupPortArgs{...} }
type HostPortGroupPortArrayInput interface {
	pulumi.Input

	ToHostPortGroupPortArrayOutput() HostPortGroupPortArrayOutput
	ToHostPortGroupPortArrayOutputWithContext(context.Context) HostPortGroupPortArrayOutput
}

type HostPortGroupPortArray []HostPortGroupPortInput

func (HostPortGroupPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostPortGroupPort)(nil)).Elem()
}

func (i HostPortGroupPortArray) ToHostPortGroupPortArrayOutput() HostPortGroupPortArrayOutput {
	return i.ToHostPortGroupPortArrayOutputWithContext(context.Background())
}

func (i HostPortGroupPortArray) ToHostPortGroupPortArrayOutputWithContext(ctx context.Context) HostPortGroupPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostPortGroupPortArrayOutput)
}

type HostPortGroupPortOutput struct{ *pulumi.OutputState }

func (HostPortGroupPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostPortGroupPort)(nil)).Elem()
}

func (o HostPortGroupPortOutput) ToHostPortGroupPortOutput() HostPortGroupPortOutput {
	return o
}

func (o HostPortGroupPortOutput) ToHostPortGroupPortOutputWithContext(ctx context.Context) HostPortGroupPortOutput {
	return o
}

// The key for this port group as returned from the vSphere API.
func (o HostPortGroupPortOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostPortGroupPort) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The MAC addresses of the network service of the virtual machine connected on this port.
func (o HostPortGroupPortOutput) MacAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostPortGroupPort) []string { return v.MacAddresses }).(pulumi.StringArrayOutput)
}

// Type type of the entity connected on this port. Possible values are host (VMKkernel), systemManagement (service console), virtualMachine, or unknown.
func (o HostPortGroupPortOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostPortGroupPort) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type HostPortGroupPortArrayOutput struct{ *pulumi.OutputState }

func (HostPortGroupPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostPortGroupPort)(nil)).Elem()
}

func (o HostPortGroupPortArrayOutput) ToHostPortGroupPortArrayOutput() HostPortGroupPortArrayOutput {
	return o
}

func (o HostPortGroupPortArrayOutput) ToHostPortGroupPortArrayOutputWithContext(ctx context.Context) HostPortGroupPortArrayOutput {
	return o
}

func (o HostPortGroupPortArrayOutput) Index(i pulumi.IntInput) HostPortGroupPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostPortGroupPort {
		return vs[0].([]HostPortGroupPort)[vs[1].(int)]
	}).(HostPortGroupPortOutput)
}

type OfflineSoftwareDepotComponent struct {
	// The name of the component. Useful for easier identification.
	DisplayName *string `pulumi:"displayName"`
	// The identifier of the component.
	Key *string `pulumi:"key"`
	// The list of available versions of the component.
	Versions []string `pulumi:"versions"`
}

// OfflineSoftwareDepotComponentInput is an input type that accepts OfflineSoftwareDepotComponentArgs and OfflineSoftwareDepotComponentOutput values.
// You can construct a concrete instance of `OfflineSoftwareDepotComponentInput` via:
//
//	OfflineSoftwareDepotComponentArgs{...}
type OfflineSoftwareDepotComponentInput interface {
	pulumi.Input

	ToOfflineSoftwareDepotComponentOutput() OfflineSoftwareDepotComponentOutput
	ToOfflineSoftwareDepotComponentOutputWithContext(context.Context) OfflineSoftwareDepotComponentOutput
}

type OfflineSoftwareDepotComponentArgs struct {
	// The name of the component. Useful for easier identification.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The identifier of the component.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The list of available versions of the component.
	Versions pulumi.StringArrayInput `pulumi:"versions"`
}

func (OfflineSoftwareDepotComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OfflineSoftwareDepotComponent)(nil)).Elem()
}

func (i OfflineSoftwareDepotComponentArgs) ToOfflineSoftwareDepotComponentOutput() OfflineSoftwareDepotComponentOutput {
	return i.ToOfflineSoftwareDepotComponentOutputWithContext(context.Background())
}

func (i OfflineSoftwareDepotComponentArgs) ToOfflineSoftwareDepotComponentOutputWithContext(ctx context.Context) OfflineSoftwareDepotComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfflineSoftwareDepotComponentOutput)
}

// OfflineSoftwareDepotComponentArrayInput is an input type that accepts OfflineSoftwareDepotComponentArray and OfflineSoftwareDepotComponentArrayOutput values.
// You can construct a concrete instance of `OfflineSoftwareDepotComponentArrayInput` via:
//
//	OfflineSoftwareDepotComponentArray{ OfflineSoftwareDepotComponentArgs{...} }
type OfflineSoftwareDepotComponentArrayInput interface {
	pulumi.Input

	ToOfflineSoftwareDepotComponentArrayOutput() OfflineSoftwareDepotComponentArrayOutput
	ToOfflineSoftwareDepotComponentArrayOutputWithContext(context.Context) OfflineSoftwareDepotComponentArrayOutput
}

type OfflineSoftwareDepotComponentArray []OfflineSoftwareDepotComponentInput

func (OfflineSoftwareDepotComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OfflineSoftwareDepotComponent)(nil)).Elem()
}

func (i OfflineSoftwareDepotComponentArray) ToOfflineSoftwareDepotComponentArrayOutput() OfflineSoftwareDepotComponentArrayOutput {
	return i.ToOfflineSoftwareDepotComponentArrayOutputWithContext(context.Background())
}

func (i OfflineSoftwareDepotComponentArray) ToOfflineSoftwareDepotComponentArrayOutputWithContext(ctx context.Context) OfflineSoftwareDepotComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OfflineSoftwareDepotComponentArrayOutput)
}

type OfflineSoftwareDepotComponentOutput struct{ *pulumi.OutputState }

func (OfflineSoftwareDepotComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OfflineSoftwareDepotComponent)(nil)).Elem()
}

func (o OfflineSoftwareDepotComponentOutput) ToOfflineSoftwareDepotComponentOutput() OfflineSoftwareDepotComponentOutput {
	return o
}

func (o OfflineSoftwareDepotComponentOutput) ToOfflineSoftwareDepotComponentOutputWithContext(ctx context.Context) OfflineSoftwareDepotComponentOutput {
	return o
}

// The name of the component. Useful for easier identification.
func (o OfflineSoftwareDepotComponentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OfflineSoftwareDepotComponent) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The identifier of the component.
func (o OfflineSoftwareDepotComponentOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OfflineSoftwareDepotComponent) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The list of available versions of the component.
func (o OfflineSoftwareDepotComponentOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OfflineSoftwareDepotComponent) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

type OfflineSoftwareDepotComponentArrayOutput struct{ *pulumi.OutputState }

func (OfflineSoftwareDepotComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OfflineSoftwareDepotComponent)(nil)).Elem()
}

func (o OfflineSoftwareDepotComponentArrayOutput) ToOfflineSoftwareDepotComponentArrayOutput() OfflineSoftwareDepotComponentArrayOutput {
	return o
}

func (o OfflineSoftwareDepotComponentArrayOutput) ToOfflineSoftwareDepotComponentArrayOutputWithContext(ctx context.Context) OfflineSoftwareDepotComponentArrayOutput {
	return o
}

func (o OfflineSoftwareDepotComponentArrayOutput) Index(i pulumi.IntInput) OfflineSoftwareDepotComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OfflineSoftwareDepotComponent {
		return vs[0].([]OfflineSoftwareDepotComponent)[vs[1].(int)]
	}).(OfflineSoftwareDepotComponentOutput)
}

type SupervisorEgressCidr struct {
	// Network address.
	Address string `pulumi:"address"`
	// Subnet prefix.
	Prefix int `pulumi:"prefix"`
}

// SupervisorEgressCidrInput is an input type that accepts SupervisorEgressCidrArgs and SupervisorEgressCidrOutput values.
// You can construct a concrete instance of `SupervisorEgressCidrInput` via:
//
//	SupervisorEgressCidrArgs{...}
type SupervisorEgressCidrInput interface {
	pulumi.Input

	ToSupervisorEgressCidrOutput() SupervisorEgressCidrOutput
	ToSupervisorEgressCidrOutputWithContext(context.Context) SupervisorEgressCidrOutput
}

type SupervisorEgressCidrArgs struct {
	// Network address.
	Address pulumi.StringInput `pulumi:"address"`
	// Subnet prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
}

func (SupervisorEgressCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorEgressCidr)(nil)).Elem()
}

func (i SupervisorEgressCidrArgs) ToSupervisorEgressCidrOutput() SupervisorEgressCidrOutput {
	return i.ToSupervisorEgressCidrOutputWithContext(context.Background())
}

func (i SupervisorEgressCidrArgs) ToSupervisorEgressCidrOutputWithContext(ctx context.Context) SupervisorEgressCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorEgressCidrOutput)
}

// SupervisorEgressCidrArrayInput is an input type that accepts SupervisorEgressCidrArray and SupervisorEgressCidrArrayOutput values.
// You can construct a concrete instance of `SupervisorEgressCidrArrayInput` via:
//
//	SupervisorEgressCidrArray{ SupervisorEgressCidrArgs{...} }
type SupervisorEgressCidrArrayInput interface {
	pulumi.Input

	ToSupervisorEgressCidrArrayOutput() SupervisorEgressCidrArrayOutput
	ToSupervisorEgressCidrArrayOutputWithContext(context.Context) SupervisorEgressCidrArrayOutput
}

type SupervisorEgressCidrArray []SupervisorEgressCidrInput

func (SupervisorEgressCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SupervisorEgressCidr)(nil)).Elem()
}

func (i SupervisorEgressCidrArray) ToSupervisorEgressCidrArrayOutput() SupervisorEgressCidrArrayOutput {
	return i.ToSupervisorEgressCidrArrayOutputWithContext(context.Background())
}

func (i SupervisorEgressCidrArray) ToSupervisorEgressCidrArrayOutputWithContext(ctx context.Context) SupervisorEgressCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorEgressCidrArrayOutput)
}

type SupervisorEgressCidrOutput struct{ *pulumi.OutputState }

func (SupervisorEgressCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorEgressCidr)(nil)).Elem()
}

func (o SupervisorEgressCidrOutput) ToSupervisorEgressCidrOutput() SupervisorEgressCidrOutput {
	return o
}

func (o SupervisorEgressCidrOutput) ToSupervisorEgressCidrOutputWithContext(ctx context.Context) SupervisorEgressCidrOutput {
	return o
}

// Network address.
func (o SupervisorEgressCidrOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorEgressCidr) string { return v.Address }).(pulumi.StringOutput)
}

// Subnet prefix.
func (o SupervisorEgressCidrOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v SupervisorEgressCidr) int { return v.Prefix }).(pulumi.IntOutput)
}

type SupervisorEgressCidrArrayOutput struct{ *pulumi.OutputState }

func (SupervisorEgressCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SupervisorEgressCidr)(nil)).Elem()
}

func (o SupervisorEgressCidrArrayOutput) ToSupervisorEgressCidrArrayOutput() SupervisorEgressCidrArrayOutput {
	return o
}

func (o SupervisorEgressCidrArrayOutput) ToSupervisorEgressCidrArrayOutputWithContext(ctx context.Context) SupervisorEgressCidrArrayOutput {
	return o
}

func (o SupervisorEgressCidrArrayOutput) Index(i pulumi.IntInput) SupervisorEgressCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SupervisorEgressCidr {
		return vs[0].([]SupervisorEgressCidr)[vs[1].(int)]
	}).(SupervisorEgressCidrOutput)
}

type SupervisorIngressCidr struct {
	// Network address.
	Address string `pulumi:"address"`
	// Subnet prefix.
	Prefix int `pulumi:"prefix"`
}

// SupervisorIngressCidrInput is an input type that accepts SupervisorIngressCidrArgs and SupervisorIngressCidrOutput values.
// You can construct a concrete instance of `SupervisorIngressCidrInput` via:
//
//	SupervisorIngressCidrArgs{...}
type SupervisorIngressCidrInput interface {
	pulumi.Input

	ToSupervisorIngressCidrOutput() SupervisorIngressCidrOutput
	ToSupervisorIngressCidrOutputWithContext(context.Context) SupervisorIngressCidrOutput
}

type SupervisorIngressCidrArgs struct {
	// Network address.
	Address pulumi.StringInput `pulumi:"address"`
	// Subnet prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
}

func (SupervisorIngressCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorIngressCidr)(nil)).Elem()
}

func (i SupervisorIngressCidrArgs) ToSupervisorIngressCidrOutput() SupervisorIngressCidrOutput {
	return i.ToSupervisorIngressCidrOutputWithContext(context.Background())
}

func (i SupervisorIngressCidrArgs) ToSupervisorIngressCidrOutputWithContext(ctx context.Context) SupervisorIngressCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorIngressCidrOutput)
}

// SupervisorIngressCidrArrayInput is an input type that accepts SupervisorIngressCidrArray and SupervisorIngressCidrArrayOutput values.
// You can construct a concrete instance of `SupervisorIngressCidrArrayInput` via:
//
//	SupervisorIngressCidrArray{ SupervisorIngressCidrArgs{...} }
type SupervisorIngressCidrArrayInput interface {
	pulumi.Input

	ToSupervisorIngressCidrArrayOutput() SupervisorIngressCidrArrayOutput
	ToSupervisorIngressCidrArrayOutputWithContext(context.Context) SupervisorIngressCidrArrayOutput
}

type SupervisorIngressCidrArray []SupervisorIngressCidrInput

func (SupervisorIngressCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SupervisorIngressCidr)(nil)).Elem()
}

func (i SupervisorIngressCidrArray) ToSupervisorIngressCidrArrayOutput() SupervisorIngressCidrArrayOutput {
	return i.ToSupervisorIngressCidrArrayOutputWithContext(context.Background())
}

func (i SupervisorIngressCidrArray) ToSupervisorIngressCidrArrayOutputWithContext(ctx context.Context) SupervisorIngressCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorIngressCidrArrayOutput)
}

type SupervisorIngressCidrOutput struct{ *pulumi.OutputState }

func (SupervisorIngressCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorIngressCidr)(nil)).Elem()
}

func (o SupervisorIngressCidrOutput) ToSupervisorIngressCidrOutput() SupervisorIngressCidrOutput {
	return o
}

func (o SupervisorIngressCidrOutput) ToSupervisorIngressCidrOutputWithContext(ctx context.Context) SupervisorIngressCidrOutput {
	return o
}

// Network address.
func (o SupervisorIngressCidrOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorIngressCidr) string { return v.Address }).(pulumi.StringOutput)
}

// Subnet prefix.
func (o SupervisorIngressCidrOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v SupervisorIngressCidr) int { return v.Prefix }).(pulumi.IntOutput)
}

type SupervisorIngressCidrArrayOutput struct{ *pulumi.OutputState }

func (SupervisorIngressCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SupervisorIngressCidr)(nil)).Elem()
}

func (o SupervisorIngressCidrArrayOutput) ToSupervisorIngressCidrArrayOutput() SupervisorIngressCidrArrayOutput {
	return o
}

func (o SupervisorIngressCidrArrayOutput) ToSupervisorIngressCidrArrayOutputWithContext(ctx context.Context) SupervisorIngressCidrArrayOutput {
	return o
}

func (o SupervisorIngressCidrArrayOutput) Index(i pulumi.IntInput) SupervisorIngressCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SupervisorIngressCidr {
		return vs[0].([]SupervisorIngressCidr)[vs[1].(int)]
	}).(SupervisorIngressCidrOutput)
}

type SupervisorManagementNetwork struct {
	// Number of addresses to allocate. Starts from 'starting_address'
	AddressCount int `pulumi:"addressCount"`
	// Gateway IP address.
	Gateway string `pulumi:"gateway"`
	// ID of the network. (e.g. a distributed port group).
	Network string `pulumi:"network"`
	// Starting address of the management network range.
	StartingAddress string `pulumi:"startingAddress"`
	// Subnet mask.
	SubnetMask string `pulumi:"subnetMask"`
}

// SupervisorManagementNetworkInput is an input type that accepts SupervisorManagementNetworkArgs and SupervisorManagementNetworkOutput values.
// You can construct a concrete instance of `SupervisorManagementNetworkInput` via:
//
//	SupervisorManagementNetworkArgs{...}
type SupervisorManagementNetworkInput interface {
	pulumi.Input

	ToSupervisorManagementNetworkOutput() SupervisorManagementNetworkOutput
	ToSupervisorManagementNetworkOutputWithContext(context.Context) SupervisorManagementNetworkOutput
}

type SupervisorManagementNetworkArgs struct {
	// Number of addresses to allocate. Starts from 'starting_address'
	AddressCount pulumi.IntInput `pulumi:"addressCount"`
	// Gateway IP address.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// ID of the network. (e.g. a distributed port group).
	Network pulumi.StringInput `pulumi:"network"`
	// Starting address of the management network range.
	StartingAddress pulumi.StringInput `pulumi:"startingAddress"`
	// Subnet mask.
	SubnetMask pulumi.StringInput `pulumi:"subnetMask"`
}

func (SupervisorManagementNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorManagementNetwork)(nil)).Elem()
}

func (i SupervisorManagementNetworkArgs) ToSupervisorManagementNetworkOutput() SupervisorManagementNetworkOutput {
	return i.ToSupervisorManagementNetworkOutputWithContext(context.Background())
}

func (i SupervisorManagementNetworkArgs) ToSupervisorManagementNetworkOutputWithContext(ctx context.Context) SupervisorManagementNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorManagementNetworkOutput)
}

func (i SupervisorManagementNetworkArgs) ToSupervisorManagementNetworkPtrOutput() SupervisorManagementNetworkPtrOutput {
	return i.ToSupervisorManagementNetworkPtrOutputWithContext(context.Background())
}

func (i SupervisorManagementNetworkArgs) ToSupervisorManagementNetworkPtrOutputWithContext(ctx context.Context) SupervisorManagementNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorManagementNetworkOutput).ToSupervisorManagementNetworkPtrOutputWithContext(ctx)
}

// SupervisorManagementNetworkPtrInput is an input type that accepts SupervisorManagementNetworkArgs, SupervisorManagementNetworkPtr and SupervisorManagementNetworkPtrOutput values.
// You can construct a concrete instance of `SupervisorManagementNetworkPtrInput` via:
//
//	        SupervisorManagementNetworkArgs{...}
//
//	or:
//
//	        nil
type SupervisorManagementNetworkPtrInput interface {
	pulumi.Input

	ToSupervisorManagementNetworkPtrOutput() SupervisorManagementNetworkPtrOutput
	ToSupervisorManagementNetworkPtrOutputWithContext(context.Context) SupervisorManagementNetworkPtrOutput
}

type supervisorManagementNetworkPtrType SupervisorManagementNetworkArgs

func SupervisorManagementNetworkPtr(v *SupervisorManagementNetworkArgs) SupervisorManagementNetworkPtrInput {
	return (*supervisorManagementNetworkPtrType)(v)
}

func (*supervisorManagementNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SupervisorManagementNetwork)(nil)).Elem()
}

func (i *supervisorManagementNetworkPtrType) ToSupervisorManagementNetworkPtrOutput() SupervisorManagementNetworkPtrOutput {
	return i.ToSupervisorManagementNetworkPtrOutputWithContext(context.Background())
}

func (i *supervisorManagementNetworkPtrType) ToSupervisorManagementNetworkPtrOutputWithContext(ctx context.Context) SupervisorManagementNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorManagementNetworkPtrOutput)
}

type SupervisorManagementNetworkOutput struct{ *pulumi.OutputState }

func (SupervisorManagementNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorManagementNetwork)(nil)).Elem()
}

func (o SupervisorManagementNetworkOutput) ToSupervisorManagementNetworkOutput() SupervisorManagementNetworkOutput {
	return o
}

func (o SupervisorManagementNetworkOutput) ToSupervisorManagementNetworkOutputWithContext(ctx context.Context) SupervisorManagementNetworkOutput {
	return o
}

func (o SupervisorManagementNetworkOutput) ToSupervisorManagementNetworkPtrOutput() SupervisorManagementNetworkPtrOutput {
	return o.ToSupervisorManagementNetworkPtrOutputWithContext(context.Background())
}

func (o SupervisorManagementNetworkOutput) ToSupervisorManagementNetworkPtrOutputWithContext(ctx context.Context) SupervisorManagementNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SupervisorManagementNetwork) *SupervisorManagementNetwork {
		return &v
	}).(SupervisorManagementNetworkPtrOutput)
}

// Number of addresses to allocate. Starts from 'starting_address'
func (o SupervisorManagementNetworkOutput) AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v SupervisorManagementNetwork) int { return v.AddressCount }).(pulumi.IntOutput)
}

// Gateway IP address.
func (o SupervisorManagementNetworkOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorManagementNetwork) string { return v.Gateway }).(pulumi.StringOutput)
}

// ID of the network. (e.g. a distributed port group).
func (o SupervisorManagementNetworkOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorManagementNetwork) string { return v.Network }).(pulumi.StringOutput)
}

// Starting address of the management network range.
func (o SupervisorManagementNetworkOutput) StartingAddress() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorManagementNetwork) string { return v.StartingAddress }).(pulumi.StringOutput)
}

// Subnet mask.
func (o SupervisorManagementNetworkOutput) SubnetMask() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorManagementNetwork) string { return v.SubnetMask }).(pulumi.StringOutput)
}

type SupervisorManagementNetworkPtrOutput struct{ *pulumi.OutputState }

func (SupervisorManagementNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SupervisorManagementNetwork)(nil)).Elem()
}

func (o SupervisorManagementNetworkPtrOutput) ToSupervisorManagementNetworkPtrOutput() SupervisorManagementNetworkPtrOutput {
	return o
}

func (o SupervisorManagementNetworkPtrOutput) ToSupervisorManagementNetworkPtrOutputWithContext(ctx context.Context) SupervisorManagementNetworkPtrOutput {
	return o
}

func (o SupervisorManagementNetworkPtrOutput) Elem() SupervisorManagementNetworkOutput {
	return o.ApplyT(func(v *SupervisorManagementNetwork) SupervisorManagementNetwork {
		if v != nil {
			return *v
		}
		var ret SupervisorManagementNetwork
		return ret
	}).(SupervisorManagementNetworkOutput)
}

// Number of addresses to allocate. Starts from 'starting_address'
func (o SupervisorManagementNetworkPtrOutput) AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SupervisorManagementNetwork) *int {
		if v == nil {
			return nil
		}
		return &v.AddressCount
	}).(pulumi.IntPtrOutput)
}

// Gateway IP address.
func (o SupervisorManagementNetworkPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SupervisorManagementNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Gateway
	}).(pulumi.StringPtrOutput)
}

// ID of the network. (e.g. a distributed port group).
func (o SupervisorManagementNetworkPtrOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SupervisorManagementNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Network
	}).(pulumi.StringPtrOutput)
}

// Starting address of the management network range.
func (o SupervisorManagementNetworkPtrOutput) StartingAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SupervisorManagementNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.StartingAddress
	}).(pulumi.StringPtrOutput)
}

// Subnet mask.
func (o SupervisorManagementNetworkPtrOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SupervisorManagementNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetMask
	}).(pulumi.StringPtrOutput)
}

type SupervisorNamespace struct {
	// A list of content libraries.
	ContentLibraries []string `pulumi:"contentLibraries"`
	// The name of the namespace.
	Name string `pulumi:"name"`
	// A list of virtual machine classes.
	VmClasses []string `pulumi:"vmClasses"`
}

// SupervisorNamespaceInput is an input type that accepts SupervisorNamespaceArgs and SupervisorNamespaceOutput values.
// You can construct a concrete instance of `SupervisorNamespaceInput` via:
//
//	SupervisorNamespaceArgs{...}
type SupervisorNamespaceInput interface {
	pulumi.Input

	ToSupervisorNamespaceOutput() SupervisorNamespaceOutput
	ToSupervisorNamespaceOutputWithContext(context.Context) SupervisorNamespaceOutput
}

type SupervisorNamespaceArgs struct {
	// A list of content libraries.
	ContentLibraries pulumi.StringArrayInput `pulumi:"contentLibraries"`
	// The name of the namespace.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of virtual machine classes.
	VmClasses pulumi.StringArrayInput `pulumi:"vmClasses"`
}

func (SupervisorNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorNamespace)(nil)).Elem()
}

func (i SupervisorNamespaceArgs) ToSupervisorNamespaceOutput() SupervisorNamespaceOutput {
	return i.ToSupervisorNamespaceOutputWithContext(context.Background())
}

func (i SupervisorNamespaceArgs) ToSupervisorNamespaceOutputWithContext(ctx context.Context) SupervisorNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorNamespaceOutput)
}

// SupervisorNamespaceArrayInput is an input type that accepts SupervisorNamespaceArray and SupervisorNamespaceArrayOutput values.
// You can construct a concrete instance of `SupervisorNamespaceArrayInput` via:
//
//	SupervisorNamespaceArray{ SupervisorNamespaceArgs{...} }
type SupervisorNamespaceArrayInput interface {
	pulumi.Input

	ToSupervisorNamespaceArrayOutput() SupervisorNamespaceArrayOutput
	ToSupervisorNamespaceArrayOutputWithContext(context.Context) SupervisorNamespaceArrayOutput
}

type SupervisorNamespaceArray []SupervisorNamespaceInput

func (SupervisorNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SupervisorNamespace)(nil)).Elem()
}

func (i SupervisorNamespaceArray) ToSupervisorNamespaceArrayOutput() SupervisorNamespaceArrayOutput {
	return i.ToSupervisorNamespaceArrayOutputWithContext(context.Background())
}

func (i SupervisorNamespaceArray) ToSupervisorNamespaceArrayOutputWithContext(ctx context.Context) SupervisorNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorNamespaceArrayOutput)
}

type SupervisorNamespaceOutput struct{ *pulumi.OutputState }

func (SupervisorNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorNamespace)(nil)).Elem()
}

func (o SupervisorNamespaceOutput) ToSupervisorNamespaceOutput() SupervisorNamespaceOutput {
	return o
}

func (o SupervisorNamespaceOutput) ToSupervisorNamespaceOutputWithContext(ctx context.Context) SupervisorNamespaceOutput {
	return o
}

// A list of content libraries.
func (o SupervisorNamespaceOutput) ContentLibraries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SupervisorNamespace) []string { return v.ContentLibraries }).(pulumi.StringArrayOutput)
}

// The name of the namespace.
func (o SupervisorNamespaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorNamespace) string { return v.Name }).(pulumi.StringOutput)
}

// A list of virtual machine classes.
func (o SupervisorNamespaceOutput) VmClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SupervisorNamespace) []string { return v.VmClasses }).(pulumi.StringArrayOutput)
}

type SupervisorNamespaceArrayOutput struct{ *pulumi.OutputState }

func (SupervisorNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SupervisorNamespace)(nil)).Elem()
}

func (o SupervisorNamespaceArrayOutput) ToSupervisorNamespaceArrayOutput() SupervisorNamespaceArrayOutput {
	return o
}

func (o SupervisorNamespaceArrayOutput) ToSupervisorNamespaceArrayOutputWithContext(ctx context.Context) SupervisorNamespaceArrayOutput {
	return o
}

func (o SupervisorNamespaceArrayOutput) Index(i pulumi.IntInput) SupervisorNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SupervisorNamespace {
		return vs[0].([]SupervisorNamespace)[vs[1].(int)]
	}).(SupervisorNamespaceOutput)
}

type SupervisorPodCidr struct {
	// Network address.
	Address string `pulumi:"address"`
	// Subnet prefix.
	Prefix int `pulumi:"prefix"`
}

// SupervisorPodCidrInput is an input type that accepts SupervisorPodCidrArgs and SupervisorPodCidrOutput values.
// You can construct a concrete instance of `SupervisorPodCidrInput` via:
//
//	SupervisorPodCidrArgs{...}
type SupervisorPodCidrInput interface {
	pulumi.Input

	ToSupervisorPodCidrOutput() SupervisorPodCidrOutput
	ToSupervisorPodCidrOutputWithContext(context.Context) SupervisorPodCidrOutput
}

type SupervisorPodCidrArgs struct {
	// Network address.
	Address pulumi.StringInput `pulumi:"address"`
	// Subnet prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
}

func (SupervisorPodCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorPodCidr)(nil)).Elem()
}

func (i SupervisorPodCidrArgs) ToSupervisorPodCidrOutput() SupervisorPodCidrOutput {
	return i.ToSupervisorPodCidrOutputWithContext(context.Background())
}

func (i SupervisorPodCidrArgs) ToSupervisorPodCidrOutputWithContext(ctx context.Context) SupervisorPodCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorPodCidrOutput)
}

// SupervisorPodCidrArrayInput is an input type that accepts SupervisorPodCidrArray and SupervisorPodCidrArrayOutput values.
// You can construct a concrete instance of `SupervisorPodCidrArrayInput` via:
//
//	SupervisorPodCidrArray{ SupervisorPodCidrArgs{...} }
type SupervisorPodCidrArrayInput interface {
	pulumi.Input

	ToSupervisorPodCidrArrayOutput() SupervisorPodCidrArrayOutput
	ToSupervisorPodCidrArrayOutputWithContext(context.Context) SupervisorPodCidrArrayOutput
}

type SupervisorPodCidrArray []SupervisorPodCidrInput

func (SupervisorPodCidrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SupervisorPodCidr)(nil)).Elem()
}

func (i SupervisorPodCidrArray) ToSupervisorPodCidrArrayOutput() SupervisorPodCidrArrayOutput {
	return i.ToSupervisorPodCidrArrayOutputWithContext(context.Background())
}

func (i SupervisorPodCidrArray) ToSupervisorPodCidrArrayOutputWithContext(ctx context.Context) SupervisorPodCidrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorPodCidrArrayOutput)
}

type SupervisorPodCidrOutput struct{ *pulumi.OutputState }

func (SupervisorPodCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorPodCidr)(nil)).Elem()
}

func (o SupervisorPodCidrOutput) ToSupervisorPodCidrOutput() SupervisorPodCidrOutput {
	return o
}

func (o SupervisorPodCidrOutput) ToSupervisorPodCidrOutputWithContext(ctx context.Context) SupervisorPodCidrOutput {
	return o
}

// Network address.
func (o SupervisorPodCidrOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorPodCidr) string { return v.Address }).(pulumi.StringOutput)
}

// Subnet prefix.
func (o SupervisorPodCidrOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v SupervisorPodCidr) int { return v.Prefix }).(pulumi.IntOutput)
}

type SupervisorPodCidrArrayOutput struct{ *pulumi.OutputState }

func (SupervisorPodCidrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SupervisorPodCidr)(nil)).Elem()
}

func (o SupervisorPodCidrArrayOutput) ToSupervisorPodCidrArrayOutput() SupervisorPodCidrArrayOutput {
	return o
}

func (o SupervisorPodCidrArrayOutput) ToSupervisorPodCidrArrayOutputWithContext(ctx context.Context) SupervisorPodCidrArrayOutput {
	return o
}

func (o SupervisorPodCidrArrayOutput) Index(i pulumi.IntInput) SupervisorPodCidrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SupervisorPodCidr {
		return vs[0].([]SupervisorPodCidr)[vs[1].(int)]
	}).(SupervisorPodCidrOutput)
}

type SupervisorServiceCidr struct {
	// Network address.
	Address string `pulumi:"address"`
	// Subnet prefix.
	Prefix int `pulumi:"prefix"`
}

// SupervisorServiceCidrInput is an input type that accepts SupervisorServiceCidrArgs and SupervisorServiceCidrOutput values.
// You can construct a concrete instance of `SupervisorServiceCidrInput` via:
//
//	SupervisorServiceCidrArgs{...}
type SupervisorServiceCidrInput interface {
	pulumi.Input

	ToSupervisorServiceCidrOutput() SupervisorServiceCidrOutput
	ToSupervisorServiceCidrOutputWithContext(context.Context) SupervisorServiceCidrOutput
}

type SupervisorServiceCidrArgs struct {
	// Network address.
	Address pulumi.StringInput `pulumi:"address"`
	// Subnet prefix.
	Prefix pulumi.IntInput `pulumi:"prefix"`
}

func (SupervisorServiceCidrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorServiceCidr)(nil)).Elem()
}

func (i SupervisorServiceCidrArgs) ToSupervisorServiceCidrOutput() SupervisorServiceCidrOutput {
	return i.ToSupervisorServiceCidrOutputWithContext(context.Background())
}

func (i SupervisorServiceCidrArgs) ToSupervisorServiceCidrOutputWithContext(ctx context.Context) SupervisorServiceCidrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorServiceCidrOutput)
}

func (i SupervisorServiceCidrArgs) ToSupervisorServiceCidrPtrOutput() SupervisorServiceCidrPtrOutput {
	return i.ToSupervisorServiceCidrPtrOutputWithContext(context.Background())
}

func (i SupervisorServiceCidrArgs) ToSupervisorServiceCidrPtrOutputWithContext(ctx context.Context) SupervisorServiceCidrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorServiceCidrOutput).ToSupervisorServiceCidrPtrOutputWithContext(ctx)
}

// SupervisorServiceCidrPtrInput is an input type that accepts SupervisorServiceCidrArgs, SupervisorServiceCidrPtr and SupervisorServiceCidrPtrOutput values.
// You can construct a concrete instance of `SupervisorServiceCidrPtrInput` via:
//
//	        SupervisorServiceCidrArgs{...}
//
//	or:
//
//	        nil
type SupervisorServiceCidrPtrInput interface {
	pulumi.Input

	ToSupervisorServiceCidrPtrOutput() SupervisorServiceCidrPtrOutput
	ToSupervisorServiceCidrPtrOutputWithContext(context.Context) SupervisorServiceCidrPtrOutput
}

type supervisorServiceCidrPtrType SupervisorServiceCidrArgs

func SupervisorServiceCidrPtr(v *SupervisorServiceCidrArgs) SupervisorServiceCidrPtrInput {
	return (*supervisorServiceCidrPtrType)(v)
}

func (*supervisorServiceCidrPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SupervisorServiceCidr)(nil)).Elem()
}

func (i *supervisorServiceCidrPtrType) ToSupervisorServiceCidrPtrOutput() SupervisorServiceCidrPtrOutput {
	return i.ToSupervisorServiceCidrPtrOutputWithContext(context.Background())
}

func (i *supervisorServiceCidrPtrType) ToSupervisorServiceCidrPtrOutputWithContext(ctx context.Context) SupervisorServiceCidrPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SupervisorServiceCidrPtrOutput)
}

type SupervisorServiceCidrOutput struct{ *pulumi.OutputState }

func (SupervisorServiceCidrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupervisorServiceCidr)(nil)).Elem()
}

func (o SupervisorServiceCidrOutput) ToSupervisorServiceCidrOutput() SupervisorServiceCidrOutput {
	return o
}

func (o SupervisorServiceCidrOutput) ToSupervisorServiceCidrOutputWithContext(ctx context.Context) SupervisorServiceCidrOutput {
	return o
}

func (o SupervisorServiceCidrOutput) ToSupervisorServiceCidrPtrOutput() SupervisorServiceCidrPtrOutput {
	return o.ToSupervisorServiceCidrPtrOutputWithContext(context.Background())
}

func (o SupervisorServiceCidrOutput) ToSupervisorServiceCidrPtrOutputWithContext(ctx context.Context) SupervisorServiceCidrPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SupervisorServiceCidr) *SupervisorServiceCidr {
		return &v
	}).(SupervisorServiceCidrPtrOutput)
}

// Network address.
func (o SupervisorServiceCidrOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v SupervisorServiceCidr) string { return v.Address }).(pulumi.StringOutput)
}

// Subnet prefix.
func (o SupervisorServiceCidrOutput) Prefix() pulumi.IntOutput {
	return o.ApplyT(func(v SupervisorServiceCidr) int { return v.Prefix }).(pulumi.IntOutput)
}

type SupervisorServiceCidrPtrOutput struct{ *pulumi.OutputState }

func (SupervisorServiceCidrPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SupervisorServiceCidr)(nil)).Elem()
}

func (o SupervisorServiceCidrPtrOutput) ToSupervisorServiceCidrPtrOutput() SupervisorServiceCidrPtrOutput {
	return o
}

func (o SupervisorServiceCidrPtrOutput) ToSupervisorServiceCidrPtrOutputWithContext(ctx context.Context) SupervisorServiceCidrPtrOutput {
	return o
}

func (o SupervisorServiceCidrPtrOutput) Elem() SupervisorServiceCidrOutput {
	return o.ApplyT(func(v *SupervisorServiceCidr) SupervisorServiceCidr {
		if v != nil {
			return *v
		}
		var ret SupervisorServiceCidr
		return ret
	}).(SupervisorServiceCidrOutput)
}

// Network address.
func (o SupervisorServiceCidrPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SupervisorServiceCidr) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// Subnet prefix.
func (o SupervisorServiceCidrPtrOutput) Prefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SupervisorServiceCidr) *int {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineCdrom struct {
	// Indicates whether the device should be mapped to a remote client device
	ClientDevice *bool `pulumi:"clientDevice"`
	// The datastore ID the ISO is located on.
	DatastoreId *string `pulumi:"datastoreId"`
	// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
	DeviceAddress *string `pulumi:"deviceAddress"`
	// The ID of the device within the virtual machine.
	Key *int `pulumi:"key"`
	// The path to the ISO file on the datastore.
	Path *string `pulumi:"path"`
}

// VirtualMachineCdromInput is an input type that accepts VirtualMachineCdromArgs and VirtualMachineCdromOutput values.
// You can construct a concrete instance of `VirtualMachineCdromInput` via:
//
//	VirtualMachineCdromArgs{...}
type VirtualMachineCdromInput interface {
	pulumi.Input

	ToVirtualMachineCdromOutput() VirtualMachineCdromOutput
	ToVirtualMachineCdromOutputWithContext(context.Context) VirtualMachineCdromOutput
}

type VirtualMachineCdromArgs struct {
	// Indicates whether the device should be mapped to a remote client device
	ClientDevice pulumi.BoolPtrInput `pulumi:"clientDevice"`
	// The datastore ID the ISO is located on.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
	DeviceAddress pulumi.StringPtrInput `pulumi:"deviceAddress"`
	// The ID of the device within the virtual machine.
	Key pulumi.IntPtrInput `pulumi:"key"`
	// The path to the ISO file on the datastore.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (VirtualMachineCdromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCdrom)(nil)).Elem()
}

func (i VirtualMachineCdromArgs) ToVirtualMachineCdromOutput() VirtualMachineCdromOutput {
	return i.ToVirtualMachineCdromOutputWithContext(context.Background())
}

func (i VirtualMachineCdromArgs) ToVirtualMachineCdromOutputWithContext(ctx context.Context) VirtualMachineCdromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCdromOutput)
}

// VirtualMachineCdromArrayInput is an input type that accepts VirtualMachineCdromArray and VirtualMachineCdromArrayOutput values.
// You can construct a concrete instance of `VirtualMachineCdromArrayInput` via:
//
//	VirtualMachineCdromArray{ VirtualMachineCdromArgs{...} }
type VirtualMachineCdromArrayInput interface {
	pulumi.Input

	ToVirtualMachineCdromArrayOutput() VirtualMachineCdromArrayOutput
	ToVirtualMachineCdromArrayOutputWithContext(context.Context) VirtualMachineCdromArrayOutput
}

type VirtualMachineCdromArray []VirtualMachineCdromInput

func (VirtualMachineCdromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineCdrom)(nil)).Elem()
}

func (i VirtualMachineCdromArray) ToVirtualMachineCdromArrayOutput() VirtualMachineCdromArrayOutput {
	return i.ToVirtualMachineCdromArrayOutputWithContext(context.Background())
}

func (i VirtualMachineCdromArray) ToVirtualMachineCdromArrayOutputWithContext(ctx context.Context) VirtualMachineCdromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCdromArrayOutput)
}

type VirtualMachineCdromOutput struct{ *pulumi.OutputState }

func (VirtualMachineCdromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCdrom)(nil)).Elem()
}

func (o VirtualMachineCdromOutput) ToVirtualMachineCdromOutput() VirtualMachineCdromOutput {
	return o
}

func (o VirtualMachineCdromOutput) ToVirtualMachineCdromOutputWithContext(ctx context.Context) VirtualMachineCdromOutput {
	return o
}

// Indicates whether the device should be mapped to a remote client device
func (o VirtualMachineCdromOutput) ClientDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineCdrom) *bool { return v.ClientDevice }).(pulumi.BoolPtrOutput)
}

// The datastore ID the ISO is located on.
func (o VirtualMachineCdromOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCdrom) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
func (o VirtualMachineCdromOutput) DeviceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCdrom) *string { return v.DeviceAddress }).(pulumi.StringPtrOutput)
}

// The ID of the device within the virtual machine.
func (o VirtualMachineCdromOutput) Key() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCdrom) *int { return v.Key }).(pulumi.IntPtrOutput)
}

// The path to the ISO file on the datastore.
func (o VirtualMachineCdromOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCdrom) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type VirtualMachineCdromArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineCdromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineCdrom)(nil)).Elem()
}

func (o VirtualMachineCdromArrayOutput) ToVirtualMachineCdromArrayOutput() VirtualMachineCdromArrayOutput {
	return o
}

func (o VirtualMachineCdromArrayOutput) ToVirtualMachineCdromArrayOutputWithContext(ctx context.Context) VirtualMachineCdromArrayOutput {
	return o
}

func (o VirtualMachineCdromArrayOutput) Index(i pulumi.IntInput) VirtualMachineCdromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineCdrom {
		return vs[0].([]VirtualMachineCdrom)[vs[1].(int)]
	}).(VirtualMachineCdromOutput)
}

type VirtualMachineClone struct {
	// The customization specification for the virtual machine post-clone.
	CustomizationSpec *VirtualMachineCloneCustomizationSpec `pulumi:"customizationSpec"`
	// The customization specification for the virtual machine post-clone.
	Customize *VirtualMachineCloneCustomize `pulumi:"customize"`
	// Whether or not to create a linked clone when cloning. When this option is used, the source VM must have a single snapshot associated with it.
	LinkedClone *bool `pulumi:"linkedClone"`
	// Mapping of ovf networks to the networks to use in vSphere.
	OvfNetworkMap map[string]string `pulumi:"ovfNetworkMap"`
	// Mapping of ovf storage to the datastores to use in vSphere.
	OvfStorageMap map[string]string `pulumi:"ovfStorageMap"`
	// The UUID of the source virtual machine or template.
	TemplateUuid string `pulumi:"templateUuid"`
	// The timeout, in minutes, to wait for the virtual machine clone to complete.
	Timeout *int `pulumi:"timeout"`
}

// VirtualMachineCloneInput is an input type that accepts VirtualMachineCloneArgs and VirtualMachineCloneOutput values.
// You can construct a concrete instance of `VirtualMachineCloneInput` via:
//
//	VirtualMachineCloneArgs{...}
type VirtualMachineCloneInput interface {
	pulumi.Input

	ToVirtualMachineCloneOutput() VirtualMachineCloneOutput
	ToVirtualMachineCloneOutputWithContext(context.Context) VirtualMachineCloneOutput
}

type VirtualMachineCloneArgs struct {
	// The customization specification for the virtual machine post-clone.
	CustomizationSpec VirtualMachineCloneCustomizationSpecPtrInput `pulumi:"customizationSpec"`
	// The customization specification for the virtual machine post-clone.
	Customize VirtualMachineCloneCustomizePtrInput `pulumi:"customize"`
	// Whether or not to create a linked clone when cloning. When this option is used, the source VM must have a single snapshot associated with it.
	LinkedClone pulumi.BoolPtrInput `pulumi:"linkedClone"`
	// Mapping of ovf networks to the networks to use in vSphere.
	OvfNetworkMap pulumi.StringMapInput `pulumi:"ovfNetworkMap"`
	// Mapping of ovf storage to the datastores to use in vSphere.
	OvfStorageMap pulumi.StringMapInput `pulumi:"ovfStorageMap"`
	// The UUID of the source virtual machine or template.
	TemplateUuid pulumi.StringInput `pulumi:"templateUuid"`
	// The timeout, in minutes, to wait for the virtual machine clone to complete.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (VirtualMachineCloneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineClone)(nil)).Elem()
}

func (i VirtualMachineCloneArgs) ToVirtualMachineCloneOutput() VirtualMachineCloneOutput {
	return i.ToVirtualMachineCloneOutputWithContext(context.Background())
}

func (i VirtualMachineCloneArgs) ToVirtualMachineCloneOutputWithContext(ctx context.Context) VirtualMachineCloneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneOutput)
}

func (i VirtualMachineCloneArgs) ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput {
	return i.ToVirtualMachineClonePtrOutputWithContext(context.Background())
}

func (i VirtualMachineCloneArgs) ToVirtualMachineClonePtrOutputWithContext(ctx context.Context) VirtualMachineClonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneOutput).ToVirtualMachineClonePtrOutputWithContext(ctx)
}

// VirtualMachineClonePtrInput is an input type that accepts VirtualMachineCloneArgs, VirtualMachineClonePtr and VirtualMachineClonePtrOutput values.
// You can construct a concrete instance of `VirtualMachineClonePtrInput` via:
//
//	        VirtualMachineCloneArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineClonePtrInput interface {
	pulumi.Input

	ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput
	ToVirtualMachineClonePtrOutputWithContext(context.Context) VirtualMachineClonePtrOutput
}

type virtualMachineClonePtrType VirtualMachineCloneArgs

func VirtualMachineClonePtr(v *VirtualMachineCloneArgs) VirtualMachineClonePtrInput {
	return (*virtualMachineClonePtrType)(v)
}

func (*virtualMachineClonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineClone)(nil)).Elem()
}

func (i *virtualMachineClonePtrType) ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput {
	return i.ToVirtualMachineClonePtrOutputWithContext(context.Background())
}

func (i *virtualMachineClonePtrType) ToVirtualMachineClonePtrOutputWithContext(ctx context.Context) VirtualMachineClonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineClonePtrOutput)
}

type VirtualMachineCloneOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineClone)(nil)).Elem()
}

func (o VirtualMachineCloneOutput) ToVirtualMachineCloneOutput() VirtualMachineCloneOutput {
	return o
}

func (o VirtualMachineCloneOutput) ToVirtualMachineCloneOutputWithContext(ctx context.Context) VirtualMachineCloneOutput {
	return o
}

func (o VirtualMachineCloneOutput) ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput {
	return o.ToVirtualMachineClonePtrOutputWithContext(context.Background())
}

func (o VirtualMachineCloneOutput) ToVirtualMachineClonePtrOutputWithContext(ctx context.Context) VirtualMachineClonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineClone) *VirtualMachineClone {
		return &v
	}).(VirtualMachineClonePtrOutput)
}

// The customization specification for the virtual machine post-clone.
func (o VirtualMachineCloneOutput) CustomizationSpec() VirtualMachineCloneCustomizationSpecPtrOutput {
	return o.ApplyT(func(v VirtualMachineClone) *VirtualMachineCloneCustomizationSpec { return v.CustomizationSpec }).(VirtualMachineCloneCustomizationSpecPtrOutput)
}

// The customization specification for the virtual machine post-clone.
func (o VirtualMachineCloneOutput) Customize() VirtualMachineCloneCustomizePtrOutput {
	return o.ApplyT(func(v VirtualMachineClone) *VirtualMachineCloneCustomize { return v.Customize }).(VirtualMachineCloneCustomizePtrOutput)
}

// Whether or not to create a linked clone when cloning. When this option is used, the source VM must have a single snapshot associated with it.
func (o VirtualMachineCloneOutput) LinkedClone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineClone) *bool { return v.LinkedClone }).(pulumi.BoolPtrOutput)
}

// Mapping of ovf networks to the networks to use in vSphere.
func (o VirtualMachineCloneOutput) OvfNetworkMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualMachineClone) map[string]string { return v.OvfNetworkMap }).(pulumi.StringMapOutput)
}

// Mapping of ovf storage to the datastores to use in vSphere.
func (o VirtualMachineCloneOutput) OvfStorageMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualMachineClone) map[string]string { return v.OvfStorageMap }).(pulumi.StringMapOutput)
}

// The UUID of the source virtual machine or template.
func (o VirtualMachineCloneOutput) TemplateUuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineClone) string { return v.TemplateUuid }).(pulumi.StringOutput)
}

// The timeout, in minutes, to wait for the virtual machine clone to complete.
func (o VirtualMachineCloneOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineClone) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type VirtualMachineClonePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineClonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineClone)(nil)).Elem()
}

func (o VirtualMachineClonePtrOutput) ToVirtualMachineClonePtrOutput() VirtualMachineClonePtrOutput {
	return o
}

func (o VirtualMachineClonePtrOutput) ToVirtualMachineClonePtrOutputWithContext(ctx context.Context) VirtualMachineClonePtrOutput {
	return o
}

func (o VirtualMachineClonePtrOutput) Elem() VirtualMachineCloneOutput {
	return o.ApplyT(func(v *VirtualMachineClone) VirtualMachineClone {
		if v != nil {
			return *v
		}
		var ret VirtualMachineClone
		return ret
	}).(VirtualMachineCloneOutput)
}

// The customization specification for the virtual machine post-clone.
func (o VirtualMachineClonePtrOutput) CustomizationSpec() VirtualMachineCloneCustomizationSpecPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *VirtualMachineCloneCustomizationSpec {
		if v == nil {
			return nil
		}
		return v.CustomizationSpec
	}).(VirtualMachineCloneCustomizationSpecPtrOutput)
}

// The customization specification for the virtual machine post-clone.
func (o VirtualMachineClonePtrOutput) Customize() VirtualMachineCloneCustomizePtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *VirtualMachineCloneCustomize {
		if v == nil {
			return nil
		}
		return v.Customize
	}).(VirtualMachineCloneCustomizePtrOutput)
}

// Whether or not to create a linked clone when cloning. When this option is used, the source VM must have a single snapshot associated with it.
func (o VirtualMachineClonePtrOutput) LinkedClone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *bool {
		if v == nil {
			return nil
		}
		return v.LinkedClone
	}).(pulumi.BoolPtrOutput)
}

// Mapping of ovf networks to the networks to use in vSphere.
func (o VirtualMachineClonePtrOutput) OvfNetworkMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachineClone) map[string]string {
		if v == nil {
			return nil
		}
		return v.OvfNetworkMap
	}).(pulumi.StringMapOutput)
}

// Mapping of ovf storage to the datastores to use in vSphere.
func (o VirtualMachineClonePtrOutput) OvfStorageMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachineClone) map[string]string {
		if v == nil {
			return nil
		}
		return v.OvfStorageMap
	}).(pulumi.StringMapOutput)
}

// The UUID of the source virtual machine or template.
func (o VirtualMachineClonePtrOutput) TemplateUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateUuid
	}).(pulumi.StringPtrOutput)
}

// The timeout, in minutes, to wait for the virtual machine clone to complete.
func (o VirtualMachineClonePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClone) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineCloneCustomizationSpec struct {
	// The UUID of the virtual machine.
	Id string `pulumi:"id"`
	// The amount of time, in minutes, to wait for guest OS customization to complete before returning with an error. Setting this value to 0 or a negative value skips the waiter. Default: 10.
	Timeout *int `pulumi:"timeout"`
}

// VirtualMachineCloneCustomizationSpecInput is an input type that accepts VirtualMachineCloneCustomizationSpecArgs and VirtualMachineCloneCustomizationSpecOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizationSpecInput` via:
//
//	VirtualMachineCloneCustomizationSpecArgs{...}
type VirtualMachineCloneCustomizationSpecInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizationSpecOutput() VirtualMachineCloneCustomizationSpecOutput
	ToVirtualMachineCloneCustomizationSpecOutputWithContext(context.Context) VirtualMachineCloneCustomizationSpecOutput
}

type VirtualMachineCloneCustomizationSpecArgs struct {
	// The UUID of the virtual machine.
	Id pulumi.StringInput `pulumi:"id"`
	// The amount of time, in minutes, to wait for guest OS customization to complete before returning with an error. Setting this value to 0 or a negative value skips the waiter. Default: 10.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (VirtualMachineCloneCustomizationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomizationSpec)(nil)).Elem()
}

func (i VirtualMachineCloneCustomizationSpecArgs) ToVirtualMachineCloneCustomizationSpecOutput() VirtualMachineCloneCustomizationSpecOutput {
	return i.ToVirtualMachineCloneCustomizationSpecOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizationSpecArgs) ToVirtualMachineCloneCustomizationSpecOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizationSpecOutput)
}

func (i VirtualMachineCloneCustomizationSpecArgs) ToVirtualMachineCloneCustomizationSpecPtrOutput() VirtualMachineCloneCustomizationSpecPtrOutput {
	return i.ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizationSpecArgs) ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizationSpecOutput).ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(ctx)
}

// VirtualMachineCloneCustomizationSpecPtrInput is an input type that accepts VirtualMachineCloneCustomizationSpecArgs, VirtualMachineCloneCustomizationSpecPtr and VirtualMachineCloneCustomizationSpecPtrOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizationSpecPtrInput` via:
//
//	        VirtualMachineCloneCustomizationSpecArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineCloneCustomizationSpecPtrInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizationSpecPtrOutput() VirtualMachineCloneCustomizationSpecPtrOutput
	ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(context.Context) VirtualMachineCloneCustomizationSpecPtrOutput
}

type virtualMachineCloneCustomizationSpecPtrType VirtualMachineCloneCustomizationSpecArgs

func VirtualMachineCloneCustomizationSpecPtr(v *VirtualMachineCloneCustomizationSpecArgs) VirtualMachineCloneCustomizationSpecPtrInput {
	return (*virtualMachineCloneCustomizationSpecPtrType)(v)
}

func (*virtualMachineCloneCustomizationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCloneCustomizationSpec)(nil)).Elem()
}

func (i *virtualMachineCloneCustomizationSpecPtrType) ToVirtualMachineCloneCustomizationSpecPtrOutput() VirtualMachineCloneCustomizationSpecPtrOutput {
	return i.ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(context.Background())
}

func (i *virtualMachineCloneCustomizationSpecPtrType) ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizationSpecPtrOutput)
}

type VirtualMachineCloneCustomizationSpecOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomizationSpec)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizationSpecOutput) ToVirtualMachineCloneCustomizationSpecOutput() VirtualMachineCloneCustomizationSpecOutput {
	return o
}

func (o VirtualMachineCloneCustomizationSpecOutput) ToVirtualMachineCloneCustomizationSpecOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizationSpecOutput {
	return o
}

func (o VirtualMachineCloneCustomizationSpecOutput) ToVirtualMachineCloneCustomizationSpecPtrOutput() VirtualMachineCloneCustomizationSpecPtrOutput {
	return o.ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(context.Background())
}

func (o VirtualMachineCloneCustomizationSpecOutput) ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineCloneCustomizationSpec) *VirtualMachineCloneCustomizationSpec {
		return &v
	}).(VirtualMachineCloneCustomizationSpecPtrOutput)
}

// The UUID of the virtual machine.
func (o VirtualMachineCloneCustomizationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// The amount of time, in minutes, to wait for guest OS customization to complete before returning with an error. Setting this value to 0 or a negative value skips the waiter. Default: 10.
func (o VirtualMachineCloneCustomizationSpecOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizationSpec) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type VirtualMachineCloneCustomizationSpecPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCloneCustomizationSpec)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizationSpecPtrOutput) ToVirtualMachineCloneCustomizationSpecPtrOutput() VirtualMachineCloneCustomizationSpecPtrOutput {
	return o
}

func (o VirtualMachineCloneCustomizationSpecPtrOutput) ToVirtualMachineCloneCustomizationSpecPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizationSpecPtrOutput {
	return o
}

func (o VirtualMachineCloneCustomizationSpecPtrOutput) Elem() VirtualMachineCloneCustomizationSpecOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizationSpec) VirtualMachineCloneCustomizationSpec {
		if v != nil {
			return *v
		}
		var ret VirtualMachineCloneCustomizationSpec
		return ret
	}).(VirtualMachineCloneCustomizationSpecOutput)
}

// The UUID of the virtual machine.
func (o VirtualMachineCloneCustomizationSpecPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizationSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in minutes, to wait for guest OS customization to complete before returning with an error. Setting this value to 0 or a negative value skips the waiter. Default: 10.
func (o VirtualMachineCloneCustomizationSpecPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizationSpec) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type VirtualMachineCloneCustomize struct {
	// The list of DNS servers for a virtual network adapter with a static IP address.
	DnsServerLists []string `pulumi:"dnsServerLists"`
	// A list of DNS search domains to add to the DNS configuration on the virtual machine.
	DnsSuffixLists []string `pulumi:"dnsSuffixLists"`
	// The IPv4 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
	Ipv4Gateway *string `pulumi:"ipv4Gateway"`
	// The IPv6 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
	Ipv6Gateway *string `pulumi:"ipv6Gateway"`
	// A list of configuration options specific to Linux virtual machines.
	LinuxOptions *VirtualMachineCloneCustomizeLinuxOptions `pulumi:"linuxOptions"`
	// A specification of network interface configuration options.
	NetworkInterfaces []VirtualMachineCloneCustomizeNetworkInterface `pulumi:"networkInterfaces"`
	// The amount of time, in minutes, to wait for guest OS customization to complete before returning with an error. Setting this value to 0 or a negative value skips the waiter. Default: 10.
	Timeout *int `pulumi:"timeout"`
	// A list of configuration options specific to Windows virtual machines.
	WindowsOptions *VirtualMachineCloneCustomizeWindowsOptions `pulumi:"windowsOptions"`
	// Use this option to specify a windows sysprep file directly.
	WindowsSysprepText *string `pulumi:"windowsSysprepText"`
}

// VirtualMachineCloneCustomizeInput is an input type that accepts VirtualMachineCloneCustomizeArgs and VirtualMachineCloneCustomizeOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizeInput` via:
//
//	VirtualMachineCloneCustomizeArgs{...}
type VirtualMachineCloneCustomizeInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizeOutput() VirtualMachineCloneCustomizeOutput
	ToVirtualMachineCloneCustomizeOutputWithContext(context.Context) VirtualMachineCloneCustomizeOutput
}

type VirtualMachineCloneCustomizeArgs struct {
	// The list of DNS servers for a virtual network adapter with a static IP address.
	DnsServerLists pulumi.StringArrayInput `pulumi:"dnsServerLists"`
	// A list of DNS search domains to add to the DNS configuration on the virtual machine.
	DnsSuffixLists pulumi.StringArrayInput `pulumi:"dnsSuffixLists"`
	// The IPv4 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
	Ipv4Gateway pulumi.StringPtrInput `pulumi:"ipv4Gateway"`
	// The IPv6 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
	Ipv6Gateway pulumi.StringPtrInput `pulumi:"ipv6Gateway"`
	// A list of configuration options specific to Linux virtual machines.
	LinuxOptions VirtualMachineCloneCustomizeLinuxOptionsPtrInput `pulumi:"linuxOptions"`
	// A specification of network interface configuration options.
	NetworkInterfaces VirtualMachineCloneCustomizeNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// The amount of time, in minutes, to wait for guest OS customization to complete before returning with an error. Setting this value to 0 or a negative value skips the waiter. Default: 10.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// A list of configuration options specific to Windows virtual machines.
	WindowsOptions VirtualMachineCloneCustomizeWindowsOptionsPtrInput `pulumi:"windowsOptions"`
	// Use this option to specify a windows sysprep file directly.
	WindowsSysprepText pulumi.StringPtrInput `pulumi:"windowsSysprepText"`
}

func (VirtualMachineCloneCustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomize)(nil)).Elem()
}

func (i VirtualMachineCloneCustomizeArgs) ToVirtualMachineCloneCustomizeOutput() VirtualMachineCloneCustomizeOutput {
	return i.ToVirtualMachineCloneCustomizeOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizeArgs) ToVirtualMachineCloneCustomizeOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeOutput)
}

func (i VirtualMachineCloneCustomizeArgs) ToVirtualMachineCloneCustomizePtrOutput() VirtualMachineCloneCustomizePtrOutput {
	return i.ToVirtualMachineCloneCustomizePtrOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizeArgs) ToVirtualMachineCloneCustomizePtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeOutput).ToVirtualMachineCloneCustomizePtrOutputWithContext(ctx)
}

// VirtualMachineCloneCustomizePtrInput is an input type that accepts VirtualMachineCloneCustomizeArgs, VirtualMachineCloneCustomizePtr and VirtualMachineCloneCustomizePtrOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizePtrInput` via:
//
//	        VirtualMachineCloneCustomizeArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineCloneCustomizePtrInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizePtrOutput() VirtualMachineCloneCustomizePtrOutput
	ToVirtualMachineCloneCustomizePtrOutputWithContext(context.Context) VirtualMachineCloneCustomizePtrOutput
}

type virtualMachineCloneCustomizePtrType VirtualMachineCloneCustomizeArgs

func VirtualMachineCloneCustomizePtr(v *VirtualMachineCloneCustomizeArgs) VirtualMachineCloneCustomizePtrInput {
	return (*virtualMachineCloneCustomizePtrType)(v)
}

func (*virtualMachineCloneCustomizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCloneCustomize)(nil)).Elem()
}

func (i *virtualMachineCloneCustomizePtrType) ToVirtualMachineCloneCustomizePtrOutput() VirtualMachineCloneCustomizePtrOutput {
	return i.ToVirtualMachineCloneCustomizePtrOutputWithContext(context.Background())
}

func (i *virtualMachineCloneCustomizePtrType) ToVirtualMachineCloneCustomizePtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizePtrOutput)
}

type VirtualMachineCloneCustomizeOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomize)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizeOutput) ToVirtualMachineCloneCustomizeOutput() VirtualMachineCloneCustomizeOutput {
	return o
}

func (o VirtualMachineCloneCustomizeOutput) ToVirtualMachineCloneCustomizeOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeOutput {
	return o
}

func (o VirtualMachineCloneCustomizeOutput) ToVirtualMachineCloneCustomizePtrOutput() VirtualMachineCloneCustomizePtrOutput {
	return o.ToVirtualMachineCloneCustomizePtrOutputWithContext(context.Background())
}

func (o VirtualMachineCloneCustomizeOutput) ToVirtualMachineCloneCustomizePtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineCloneCustomize) *VirtualMachineCloneCustomize {
		return &v
	}).(VirtualMachineCloneCustomizePtrOutput)
}

// The list of DNS servers for a virtual network adapter with a static IP address.
func (o VirtualMachineCloneCustomizeOutput) DnsServerLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) []string { return v.DnsServerLists }).(pulumi.StringArrayOutput)
}

// A list of DNS search domains to add to the DNS configuration on the virtual machine.
func (o VirtualMachineCloneCustomizeOutput) DnsSuffixLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) []string { return v.DnsSuffixLists }).(pulumi.StringArrayOutput)
}

// The IPv4 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
func (o VirtualMachineCloneCustomizeOutput) Ipv4Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) *string { return v.Ipv4Gateway }).(pulumi.StringPtrOutput)
}

// The IPv6 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
func (o VirtualMachineCloneCustomizeOutput) Ipv6Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) *string { return v.Ipv6Gateway }).(pulumi.StringPtrOutput)
}

// A list of configuration options specific to Linux virtual machines.
func (o VirtualMachineCloneCustomizeOutput) LinuxOptions() VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) *VirtualMachineCloneCustomizeLinuxOptions { return v.LinuxOptions }).(VirtualMachineCloneCustomizeLinuxOptionsPtrOutput)
}

// A specification of network interface configuration options.
func (o VirtualMachineCloneCustomizeOutput) NetworkInterfaces() VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) []VirtualMachineCloneCustomizeNetworkInterface {
		return v.NetworkInterfaces
	}).(VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput)
}

// The amount of time, in minutes, to wait for guest OS customization to complete before returning with an error. Setting this value to 0 or a negative value skips the waiter. Default: 10.
func (o VirtualMachineCloneCustomizeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// A list of configuration options specific to Windows virtual machines.
func (o VirtualMachineCloneCustomizeOutput) WindowsOptions() VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) *VirtualMachineCloneCustomizeWindowsOptions {
		return v.WindowsOptions
	}).(VirtualMachineCloneCustomizeWindowsOptionsPtrOutput)
}

// Use this option to specify a windows sysprep file directly.
func (o VirtualMachineCloneCustomizeOutput) WindowsSysprepText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomize) *string { return v.WindowsSysprepText }).(pulumi.StringPtrOutput)
}

type VirtualMachineCloneCustomizePtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCloneCustomize)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizePtrOutput) ToVirtualMachineCloneCustomizePtrOutput() VirtualMachineCloneCustomizePtrOutput {
	return o
}

func (o VirtualMachineCloneCustomizePtrOutput) ToVirtualMachineCloneCustomizePtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizePtrOutput {
	return o
}

func (o VirtualMachineCloneCustomizePtrOutput) Elem() VirtualMachineCloneCustomizeOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) VirtualMachineCloneCustomize {
		if v != nil {
			return *v
		}
		var ret VirtualMachineCloneCustomize
		return ret
	}).(VirtualMachineCloneCustomizeOutput)
}

// The list of DNS servers for a virtual network adapter with a static IP address.
func (o VirtualMachineCloneCustomizePtrOutput) DnsServerLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) []string {
		if v == nil {
			return nil
		}
		return v.DnsServerLists
	}).(pulumi.StringArrayOutput)
}

// A list of DNS search domains to add to the DNS configuration on the virtual machine.
func (o VirtualMachineCloneCustomizePtrOutput) DnsSuffixLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) []string {
		if v == nil {
			return nil
		}
		return v.DnsSuffixLists
	}).(pulumi.StringArrayOutput)
}

// The IPv4 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
func (o VirtualMachineCloneCustomizePtrOutput) Ipv4Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) *string {
		if v == nil {
			return nil
		}
		return v.Ipv4Gateway
	}).(pulumi.StringPtrOutput)
}

// The IPv6 default gateway when using networkInterface customization on the virtual machine. This address must be local to a static IPv4 address configured in an interface sub-resource.
func (o VirtualMachineCloneCustomizePtrOutput) Ipv6Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) *string {
		if v == nil {
			return nil
		}
		return v.Ipv6Gateway
	}).(pulumi.StringPtrOutput)
}

// A list of configuration options specific to Linux virtual machines.
func (o VirtualMachineCloneCustomizePtrOutput) LinuxOptions() VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) *VirtualMachineCloneCustomizeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.LinuxOptions
	}).(VirtualMachineCloneCustomizeLinuxOptionsPtrOutput)
}

// A specification of network interface configuration options.
func (o VirtualMachineCloneCustomizePtrOutput) NetworkInterfaces() VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) []VirtualMachineCloneCustomizeNetworkInterface {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput)
}

// The amount of time, in minutes, to wait for guest OS customization to complete before returning with an error. Setting this value to 0 or a negative value skips the waiter. Default: 10.
func (o VirtualMachineCloneCustomizePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// A list of configuration options specific to Windows virtual machines.
func (o VirtualMachineCloneCustomizePtrOutput) WindowsOptions() VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) *VirtualMachineCloneCustomizeWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(VirtualMachineCloneCustomizeWindowsOptionsPtrOutput)
}

// Use this option to specify a windows sysprep file directly.
func (o VirtualMachineCloneCustomizePtrOutput) WindowsSysprepText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomize) *string {
		if v == nil {
			return nil
		}
		return v.WindowsSysprepText
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineCloneCustomizeLinuxOptions struct {
	// The domain name for this virtual machine.
	Domain string `pulumi:"domain"`
	// The hostname for this virtual machine.
	HostName string `pulumi:"hostName"`
	// Specifies whether or not the hardware clock should be in UTC or not.
	HwClockUtc *bool `pulumi:"hwClockUtc"`
	// The customization script to run before and or after guest customization
	ScriptText *string `pulumi:"scriptText"`
	// Customize the time zone on the VM. This should be a time zone-style entry, like America/Los_Angeles.
	TimeZone *string `pulumi:"timeZone"`
}

// VirtualMachineCloneCustomizeLinuxOptionsInput is an input type that accepts VirtualMachineCloneCustomizeLinuxOptionsArgs and VirtualMachineCloneCustomizeLinuxOptionsOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizeLinuxOptionsInput` via:
//
//	VirtualMachineCloneCustomizeLinuxOptionsArgs{...}
type VirtualMachineCloneCustomizeLinuxOptionsInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizeLinuxOptionsOutput() VirtualMachineCloneCustomizeLinuxOptionsOutput
	ToVirtualMachineCloneCustomizeLinuxOptionsOutputWithContext(context.Context) VirtualMachineCloneCustomizeLinuxOptionsOutput
}

type VirtualMachineCloneCustomizeLinuxOptionsArgs struct {
	// The domain name for this virtual machine.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The hostname for this virtual machine.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Specifies whether or not the hardware clock should be in UTC or not.
	HwClockUtc pulumi.BoolPtrInput `pulumi:"hwClockUtc"`
	// The customization script to run before and or after guest customization
	ScriptText pulumi.StringPtrInput `pulumi:"scriptText"`
	// Customize the time zone on the VM. This should be a time zone-style entry, like America/Los_Angeles.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (VirtualMachineCloneCustomizeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomizeLinuxOptions)(nil)).Elem()
}

func (i VirtualMachineCloneCustomizeLinuxOptionsArgs) ToVirtualMachineCloneCustomizeLinuxOptionsOutput() VirtualMachineCloneCustomizeLinuxOptionsOutput {
	return i.ToVirtualMachineCloneCustomizeLinuxOptionsOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizeLinuxOptionsArgs) ToVirtualMachineCloneCustomizeLinuxOptionsOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeLinuxOptionsOutput)
}

func (i VirtualMachineCloneCustomizeLinuxOptionsArgs) ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutput() VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return i.ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizeLinuxOptionsArgs) ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeLinuxOptionsOutput).ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(ctx)
}

// VirtualMachineCloneCustomizeLinuxOptionsPtrInput is an input type that accepts VirtualMachineCloneCustomizeLinuxOptionsArgs, VirtualMachineCloneCustomizeLinuxOptionsPtr and VirtualMachineCloneCustomizeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizeLinuxOptionsPtrInput` via:
//
//	        VirtualMachineCloneCustomizeLinuxOptionsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineCloneCustomizeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutput() VirtualMachineCloneCustomizeLinuxOptionsPtrOutput
	ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(context.Context) VirtualMachineCloneCustomizeLinuxOptionsPtrOutput
}

type virtualMachineCloneCustomizeLinuxOptionsPtrType VirtualMachineCloneCustomizeLinuxOptionsArgs

func VirtualMachineCloneCustomizeLinuxOptionsPtr(v *VirtualMachineCloneCustomizeLinuxOptionsArgs) VirtualMachineCloneCustomizeLinuxOptionsPtrInput {
	return (*virtualMachineCloneCustomizeLinuxOptionsPtrType)(v)
}

func (*virtualMachineCloneCustomizeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCloneCustomizeLinuxOptions)(nil)).Elem()
}

func (i *virtualMachineCloneCustomizeLinuxOptionsPtrType) ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutput() VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return i.ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineCloneCustomizeLinuxOptionsPtrType) ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeLinuxOptionsPtrOutput)
}

type VirtualMachineCloneCustomizeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomizeLinuxOptions)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) ToVirtualMachineCloneCustomizeLinuxOptionsOutput() VirtualMachineCloneCustomizeLinuxOptionsOutput {
	return o
}

func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) ToVirtualMachineCloneCustomizeLinuxOptionsOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeLinuxOptionsOutput {
	return o
}

func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutput() VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return o.ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineCloneCustomizeLinuxOptions) *VirtualMachineCloneCustomizeLinuxOptions {
		return &v
	}).(VirtualMachineCloneCustomizeLinuxOptionsPtrOutput)
}

// The domain name for this virtual machine.
func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeLinuxOptions) string { return v.Domain }).(pulumi.StringOutput)
}

// The hostname for this virtual machine.
func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeLinuxOptions) string { return v.HostName }).(pulumi.StringOutput)
}

// Specifies whether or not the hardware clock should be in UTC or not.
func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) HwClockUtc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeLinuxOptions) *bool { return v.HwClockUtc }).(pulumi.BoolPtrOutput)
}

// The customization script to run before and or after guest customization
func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) ScriptText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeLinuxOptions) *string { return v.ScriptText }).(pulumi.StringPtrOutput)
}

// Customize the time zone on the VM. This should be a time zone-style entry, like America/Los_Angeles.
func (o VirtualMachineCloneCustomizeLinuxOptionsOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeLinuxOptions) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type VirtualMachineCloneCustomizeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCloneCustomizeLinuxOptions)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutput() VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return o
}

func (o VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) ToVirtualMachineCloneCustomizeLinuxOptionsPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeLinuxOptionsPtrOutput {
	return o
}

func (o VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) Elem() VirtualMachineCloneCustomizeLinuxOptionsOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeLinuxOptions) VirtualMachineCloneCustomizeLinuxOptions {
		if v != nil {
			return *v
		}
		var ret VirtualMachineCloneCustomizeLinuxOptions
		return ret
	}).(VirtualMachineCloneCustomizeLinuxOptionsOutput)
}

// The domain name for this virtual machine.
func (o VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// The hostname for this virtual machine.
func (o VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not the hardware clock should be in UTC or not.
func (o VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) HwClockUtc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeLinuxOptions) *bool {
		if v == nil {
			return nil
		}
		return v.HwClockUtc
	}).(pulumi.BoolPtrOutput)
}

// The customization script to run before and or after guest customization
func (o VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) ScriptText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.ScriptText
	}).(pulumi.StringPtrOutput)
}

// Customize the time zone on the VM. This should be a time zone-style entry, like America/Los_Angeles.
func (o VirtualMachineCloneCustomizeLinuxOptionsPtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineCloneCustomizeNetworkInterface struct {
	// A DNS search domain to add to the DNS configuration on the virtual machine.
	DnsDomain *string `pulumi:"dnsDomain"`
	// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
	DnsServerLists []string `pulumi:"dnsServerLists"`
	// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
	Ipv4Address *string `pulumi:"ipv4Address"`
	// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
	Ipv4Netmask *int `pulumi:"ipv4Netmask"`
	// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
	Ipv6Address *string `pulumi:"ipv6Address"`
	// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
	Ipv6Netmask *int `pulumi:"ipv6Netmask"`
}

// VirtualMachineCloneCustomizeNetworkInterfaceInput is an input type that accepts VirtualMachineCloneCustomizeNetworkInterfaceArgs and VirtualMachineCloneCustomizeNetworkInterfaceOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizeNetworkInterfaceInput` via:
//
//	VirtualMachineCloneCustomizeNetworkInterfaceArgs{...}
type VirtualMachineCloneCustomizeNetworkInterfaceInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizeNetworkInterfaceOutput() VirtualMachineCloneCustomizeNetworkInterfaceOutput
	ToVirtualMachineCloneCustomizeNetworkInterfaceOutputWithContext(context.Context) VirtualMachineCloneCustomizeNetworkInterfaceOutput
}

type VirtualMachineCloneCustomizeNetworkInterfaceArgs struct {
	// A DNS search domain to add to the DNS configuration on the virtual machine.
	DnsDomain pulumi.StringPtrInput `pulumi:"dnsDomain"`
	// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
	DnsServerLists pulumi.StringArrayInput `pulumi:"dnsServerLists"`
	// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
	// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
	Ipv4Netmask pulumi.IntPtrInput `pulumi:"ipv4Netmask"`
	// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
	// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
	Ipv6Netmask pulumi.IntPtrInput `pulumi:"ipv6Netmask"`
}

func (VirtualMachineCloneCustomizeNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomizeNetworkInterface)(nil)).Elem()
}

func (i VirtualMachineCloneCustomizeNetworkInterfaceArgs) ToVirtualMachineCloneCustomizeNetworkInterfaceOutput() VirtualMachineCloneCustomizeNetworkInterfaceOutput {
	return i.ToVirtualMachineCloneCustomizeNetworkInterfaceOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizeNetworkInterfaceArgs) ToVirtualMachineCloneCustomizeNetworkInterfaceOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeNetworkInterfaceOutput)
}

// VirtualMachineCloneCustomizeNetworkInterfaceArrayInput is an input type that accepts VirtualMachineCloneCustomizeNetworkInterfaceArray and VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizeNetworkInterfaceArrayInput` via:
//
//	VirtualMachineCloneCustomizeNetworkInterfaceArray{ VirtualMachineCloneCustomizeNetworkInterfaceArgs{...} }
type VirtualMachineCloneCustomizeNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizeNetworkInterfaceArrayOutput() VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput
	ToVirtualMachineCloneCustomizeNetworkInterfaceArrayOutputWithContext(context.Context) VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput
}

type VirtualMachineCloneCustomizeNetworkInterfaceArray []VirtualMachineCloneCustomizeNetworkInterfaceInput

func (VirtualMachineCloneCustomizeNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineCloneCustomizeNetworkInterface)(nil)).Elem()
}

func (i VirtualMachineCloneCustomizeNetworkInterfaceArray) ToVirtualMachineCloneCustomizeNetworkInterfaceArrayOutput() VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput {
	return i.ToVirtualMachineCloneCustomizeNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizeNetworkInterfaceArray) ToVirtualMachineCloneCustomizeNetworkInterfaceArrayOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput)
}

type VirtualMachineCloneCustomizeNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizeNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomizeNetworkInterface)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizeNetworkInterfaceOutput) ToVirtualMachineCloneCustomizeNetworkInterfaceOutput() VirtualMachineCloneCustomizeNetworkInterfaceOutput {
	return o
}

func (o VirtualMachineCloneCustomizeNetworkInterfaceOutput) ToVirtualMachineCloneCustomizeNetworkInterfaceOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeNetworkInterfaceOutput {
	return o
}

// A DNS search domain to add to the DNS configuration on the virtual machine.
func (o VirtualMachineCloneCustomizeNetworkInterfaceOutput) DnsDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeNetworkInterface) *string { return v.DnsDomain }).(pulumi.StringPtrOutput)
}

// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
func (o VirtualMachineCloneCustomizeNetworkInterfaceOutput) DnsServerLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeNetworkInterface) []string { return v.DnsServerLists }).(pulumi.StringArrayOutput)
}

// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
func (o VirtualMachineCloneCustomizeNetworkInterfaceOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeNetworkInterface) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
func (o VirtualMachineCloneCustomizeNetworkInterfaceOutput) Ipv4Netmask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeNetworkInterface) *int { return v.Ipv4Netmask }).(pulumi.IntPtrOutput)
}

// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
func (o VirtualMachineCloneCustomizeNetworkInterfaceOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeNetworkInterface) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
func (o VirtualMachineCloneCustomizeNetworkInterfaceOutput) Ipv6Netmask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeNetworkInterface) *int { return v.Ipv6Netmask }).(pulumi.IntPtrOutput)
}

type VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineCloneCustomizeNetworkInterface)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput) ToVirtualMachineCloneCustomizeNetworkInterfaceArrayOutput() VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput {
	return o
}

func (o VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput) ToVirtualMachineCloneCustomizeNetworkInterfaceArrayOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput {
	return o
}

func (o VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) VirtualMachineCloneCustomizeNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineCloneCustomizeNetworkInterface {
		return vs[0].([]VirtualMachineCloneCustomizeNetworkInterface)[vs[1].(int)]
	}).(VirtualMachineCloneCustomizeNetworkInterfaceOutput)
}

type VirtualMachineCloneCustomizeWindowsOptions struct {
	// The new administrator password for this virtual machine.
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies whether or not the VM automatically logs on as Administrator.
	AutoLogon *bool `pulumi:"autoLogon"`
	// Specifies how many times the VM should auto-logon the Administrator account when autoLogon is true.
	AutoLogonCount *int `pulumi:"autoLogonCount"`
	// The host name for this virtual machine.
	ComputerName string `pulumi:"computerName"`
	// The password of the domain administrator used to join this virtual machine to the domain.
	DomainAdminPassword *string `pulumi:"domainAdminPassword"`
	// The user account of the domain administrator used to join this virtual machine to the domain.
	DomainAdminUser *string `pulumi:"domainAdminUser"`
	// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
	DomainOu *string `pulumi:"domainOu"`
	// The full name of the user of this virtual machine.
	FullName *string `pulumi:"fullName"`
	// The domain that the virtual machine should join.
	JoinDomain *string `pulumi:"joinDomain"`
	// The organization name this virtual machine is being installed for.
	OrganizationName *string `pulumi:"organizationName"`
	// The product key for this virtual machine.
	ProductKey *string `pulumi:"productKey"`
	// A list of commands to run at first user logon, after guest customization.
	RunOnceCommandLists []string `pulumi:"runOnceCommandLists"`
	// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
	TimeZone *int `pulumi:"timeZone"`
	// The workgroup for this virtual machine if not joining a domain.
	Workgroup *string `pulumi:"workgroup"`
}

// VirtualMachineCloneCustomizeWindowsOptionsInput is an input type that accepts VirtualMachineCloneCustomizeWindowsOptionsArgs and VirtualMachineCloneCustomizeWindowsOptionsOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizeWindowsOptionsInput` via:
//
//	VirtualMachineCloneCustomizeWindowsOptionsArgs{...}
type VirtualMachineCloneCustomizeWindowsOptionsInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizeWindowsOptionsOutput() VirtualMachineCloneCustomizeWindowsOptionsOutput
	ToVirtualMachineCloneCustomizeWindowsOptionsOutputWithContext(context.Context) VirtualMachineCloneCustomizeWindowsOptionsOutput
}

type VirtualMachineCloneCustomizeWindowsOptionsArgs struct {
	// The new administrator password for this virtual machine.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies whether or not the VM automatically logs on as Administrator.
	AutoLogon pulumi.BoolPtrInput `pulumi:"autoLogon"`
	// Specifies how many times the VM should auto-logon the Administrator account when autoLogon is true.
	AutoLogonCount pulumi.IntPtrInput `pulumi:"autoLogonCount"`
	// The host name for this virtual machine.
	ComputerName pulumi.StringInput `pulumi:"computerName"`
	// The password of the domain administrator used to join this virtual machine to the domain.
	DomainAdminPassword pulumi.StringPtrInput `pulumi:"domainAdminPassword"`
	// The user account of the domain administrator used to join this virtual machine to the domain.
	DomainAdminUser pulumi.StringPtrInput `pulumi:"domainAdminUser"`
	// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
	DomainOu pulumi.StringPtrInput `pulumi:"domainOu"`
	// The full name of the user of this virtual machine.
	FullName pulumi.StringPtrInput `pulumi:"fullName"`
	// The domain that the virtual machine should join.
	JoinDomain pulumi.StringPtrInput `pulumi:"joinDomain"`
	// The organization name this virtual machine is being installed for.
	OrganizationName pulumi.StringPtrInput `pulumi:"organizationName"`
	// The product key for this virtual machine.
	ProductKey pulumi.StringPtrInput `pulumi:"productKey"`
	// A list of commands to run at first user logon, after guest customization.
	RunOnceCommandLists pulumi.StringArrayInput `pulumi:"runOnceCommandLists"`
	// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
	TimeZone pulumi.IntPtrInput `pulumi:"timeZone"`
	// The workgroup for this virtual machine if not joining a domain.
	Workgroup pulumi.StringPtrInput `pulumi:"workgroup"`
}

func (VirtualMachineCloneCustomizeWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomizeWindowsOptions)(nil)).Elem()
}

func (i VirtualMachineCloneCustomizeWindowsOptionsArgs) ToVirtualMachineCloneCustomizeWindowsOptionsOutput() VirtualMachineCloneCustomizeWindowsOptionsOutput {
	return i.ToVirtualMachineCloneCustomizeWindowsOptionsOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizeWindowsOptionsArgs) ToVirtualMachineCloneCustomizeWindowsOptionsOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeWindowsOptionsOutput)
}

func (i VirtualMachineCloneCustomizeWindowsOptionsArgs) ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutput() VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return i.ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i VirtualMachineCloneCustomizeWindowsOptionsArgs) ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeWindowsOptionsOutput).ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(ctx)
}

// VirtualMachineCloneCustomizeWindowsOptionsPtrInput is an input type that accepts VirtualMachineCloneCustomizeWindowsOptionsArgs, VirtualMachineCloneCustomizeWindowsOptionsPtr and VirtualMachineCloneCustomizeWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `VirtualMachineCloneCustomizeWindowsOptionsPtrInput` via:
//
//	        VirtualMachineCloneCustomizeWindowsOptionsArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineCloneCustomizeWindowsOptionsPtrInput interface {
	pulumi.Input

	ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutput() VirtualMachineCloneCustomizeWindowsOptionsPtrOutput
	ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(context.Context) VirtualMachineCloneCustomizeWindowsOptionsPtrOutput
}

type virtualMachineCloneCustomizeWindowsOptionsPtrType VirtualMachineCloneCustomizeWindowsOptionsArgs

func VirtualMachineCloneCustomizeWindowsOptionsPtr(v *VirtualMachineCloneCustomizeWindowsOptionsArgs) VirtualMachineCloneCustomizeWindowsOptionsPtrInput {
	return (*virtualMachineCloneCustomizeWindowsOptionsPtrType)(v)
}

func (*virtualMachineCloneCustomizeWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCloneCustomizeWindowsOptions)(nil)).Elem()
}

func (i *virtualMachineCloneCustomizeWindowsOptionsPtrType) ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutput() VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return i.ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *virtualMachineCloneCustomizeWindowsOptionsPtrType) ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineCloneCustomizeWindowsOptionsPtrOutput)
}

type VirtualMachineCloneCustomizeWindowsOptionsOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizeWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineCloneCustomizeWindowsOptions)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) ToVirtualMachineCloneCustomizeWindowsOptionsOutput() VirtualMachineCloneCustomizeWindowsOptionsOutput {
	return o
}

func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) ToVirtualMachineCloneCustomizeWindowsOptionsOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeWindowsOptionsOutput {
	return o
}

func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutput() VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return o.ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineCloneCustomizeWindowsOptions) *VirtualMachineCloneCustomizeWindowsOptions {
		return &v
	}).(VirtualMachineCloneCustomizeWindowsOptionsPtrOutput)
}

// The new administrator password for this virtual machine.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies whether or not the VM automatically logs on as Administrator.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) AutoLogon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *bool { return v.AutoLogon }).(pulumi.BoolPtrOutput)
}

// Specifies how many times the VM should auto-logon the Administrator account when autoLogon is true.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) AutoLogonCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *int { return v.AutoLogonCount }).(pulumi.IntPtrOutput)
}

// The host name for this virtual machine.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) ComputerName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) string { return v.ComputerName }).(pulumi.StringOutput)
}

// The password of the domain administrator used to join this virtual machine to the domain.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) DomainAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.DomainAdminPassword }).(pulumi.StringPtrOutput)
}

// The user account of the domain administrator used to join this virtual machine to the domain.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) DomainAdminUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.DomainAdminUser }).(pulumi.StringPtrOutput)
}

// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) DomainOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.DomainOu }).(pulumi.StringPtrOutput)
}

// The full name of the user of this virtual machine.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.FullName }).(pulumi.StringPtrOutput)
}

// The domain that the virtual machine should join.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) JoinDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.JoinDomain }).(pulumi.StringPtrOutput)
}

// The organization name this virtual machine is being installed for.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.OrganizationName }).(pulumi.StringPtrOutput)
}

// The product key for this virtual machine.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) ProductKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.ProductKey }).(pulumi.StringPtrOutput)
}

// A list of commands to run at first user logon, after guest customization.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) RunOnceCommandLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) []string { return v.RunOnceCommandLists }).(pulumi.StringArrayOutput)
}

// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) TimeZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *int { return v.TimeZone }).(pulumi.IntPtrOutput)
}

// The workgroup for this virtual machine if not joining a domain.
func (o VirtualMachineCloneCustomizeWindowsOptionsOutput) Workgroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineCloneCustomizeWindowsOptions) *string { return v.Workgroup }).(pulumi.StringPtrOutput)
}

type VirtualMachineCloneCustomizeWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineCloneCustomizeWindowsOptions)(nil)).Elem()
}

func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutput() VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return o
}

func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) ToVirtualMachineCloneCustomizeWindowsOptionsPtrOutputWithContext(ctx context.Context) VirtualMachineCloneCustomizeWindowsOptionsPtrOutput {
	return o
}

func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) Elem() VirtualMachineCloneCustomizeWindowsOptionsOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) VirtualMachineCloneCustomizeWindowsOptions {
		if v != nil {
			return *v
		}
		var ret VirtualMachineCloneCustomizeWindowsOptions
		return ret
	}).(VirtualMachineCloneCustomizeWindowsOptionsOutput)
}

// The new administrator password for this virtual machine.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not the VM automatically logs on as Administrator.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) AutoLogon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *bool {
		if v == nil {
			return nil
		}
		return v.AutoLogon
	}).(pulumi.BoolPtrOutput)
}

// Specifies how many times the VM should auto-logon the Administrator account when autoLogon is true.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) AutoLogonCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *int {
		if v == nil {
			return nil
		}
		return v.AutoLogonCount
	}).(pulumi.IntPtrOutput)
}

// The host name for this virtual machine.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) ComputerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return &v.ComputerName
	}).(pulumi.StringPtrOutput)
}

// The password of the domain administrator used to join this virtual machine to the domain.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) DomainAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.DomainAdminPassword
	}).(pulumi.StringPtrOutput)
}

// The user account of the domain administrator used to join this virtual machine to the domain.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) DomainAdminUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.DomainAdminUser
	}).(pulumi.StringPtrOutput)
}

// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) DomainOu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.DomainOu
	}).(pulumi.StringPtrOutput)
}

// The full name of the user of this virtual machine.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.FullName
	}).(pulumi.StringPtrOutput)
}

// The domain that the virtual machine should join.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) JoinDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.JoinDomain
	}).(pulumi.StringPtrOutput)
}

// The organization name this virtual machine is being installed for.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationName
	}).(pulumi.StringPtrOutput)
}

// The product key for this virtual machine.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) ProductKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.ProductKey
	}).(pulumi.StringPtrOutput)
}

// A list of commands to run at first user logon, after guest customization.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) RunOnceCommandLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) []string {
		if v == nil {
			return nil
		}
		return v.RunOnceCommandLists
	}).(pulumi.StringArrayOutput)
}

// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) TimeZone() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *int {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.IntPtrOutput)
}

// The workgroup for this virtual machine if not joining a domain.
func (o VirtualMachineCloneCustomizeWindowsOptionsPtrOutput) Workgroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineCloneCustomizeWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.Workgroup
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineDisk struct {
	// If this is true, the disk is attached instead of created. Implies keep_on_remove.
	Attach *bool `pulumi:"attach"`
	// The type of controller the disk should be connected to. Must be 'scsi', 'sata', or 'ide'.
	ControllerType *string `pulumi:"controllerType"`
	// The datastore ID for this virtual disk, if different than the virtual machine.
	DatastoreId *string `pulumi:"datastoreId"`
	// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
	DeviceAddress *string `pulumi:"deviceAddress"`
	// The mode of this this virtual disk for purposes of writes and snapshotting. Can be one of append, independent_nonpersistent, independent_persistent, nonpersistent, persistent, or undoable.
	DiskMode *string `pulumi:"diskMode"`
	// The sharing mode of this virtual disk. Can be one of sharingMultiWriter or sharingNone.
	DiskSharing *string `pulumi:"diskSharing"`
	// The virtual disk file zeroing policy when thinProvision is not true. The default is false, which lazily-zeros the disk, speeding up thick-provisioned disk creation time.
	EagerlyScrub *bool `pulumi:"eagerlyScrub"`
	// The upper limit of IOPS that this disk can use.
	IoLimit *int `pulumi:"ioLimit"`
	// The I/O guarantee that this disk has, in IOPS.
	IoReservation *int `pulumi:"ioReservation"`
	// The share count for this disk when the share level is custom.
	IoShareCount *int `pulumi:"ioShareCount"`
	// The share allocation level for this disk. Can be one of low, normal, high, or custom.
	IoShareLevel *string `pulumi:"ioShareLevel"`
	// Set to true to keep the underlying VMDK file when removing this virtual disk from configuration.
	KeepOnRemove *bool `pulumi:"keepOnRemove"`
	// The ID of the device within the virtual machine.
	Key *int `pulumi:"key"`
	// A unique label for this disk.
	Label string `pulumi:"label"`
	// The full path of the virtual disk. This can only be provided if attach is set to true, otherwise it is a read-only value.
	Path *string `pulumi:"path"`
	// The size of the disk, in GB.
	Size *int `pulumi:"size"`
	// The ID of the storage policy to assign to the virtual disk in VM.
	StoragePolicyId *string `pulumi:"storagePolicyId"`
	// If true, this disk is thin provisioned, with space for the file being allocated on an as-needed basis.
	ThinProvisioned *bool `pulumi:"thinProvisioned"`
	// The unique device number for this disk. This number determines where on the SCSI bus this device will be attached.
	UnitNumber *int `pulumi:"unitNumber"`
	// The UUID of the virtual machine. Also exposed as the `id` of the resource.
	Uuid *string `pulumi:"uuid"`
	// If true, writes for this disk are sent directly to the filesystem immediately instead of being buffered.
	WriteThrough *bool `pulumi:"writeThrough"`
}

// VirtualMachineDiskInput is an input type that accepts VirtualMachineDiskArgs and VirtualMachineDiskOutput values.
// You can construct a concrete instance of `VirtualMachineDiskInput` via:
//
//	VirtualMachineDiskArgs{...}
type VirtualMachineDiskInput interface {
	pulumi.Input

	ToVirtualMachineDiskOutput() VirtualMachineDiskOutput
	ToVirtualMachineDiskOutputWithContext(context.Context) VirtualMachineDiskOutput
}

type VirtualMachineDiskArgs struct {
	// If this is true, the disk is attached instead of created. Implies keep_on_remove.
	Attach pulumi.BoolPtrInput `pulumi:"attach"`
	// The type of controller the disk should be connected to. Must be 'scsi', 'sata', or 'ide'.
	ControllerType pulumi.StringPtrInput `pulumi:"controllerType"`
	// The datastore ID for this virtual disk, if different than the virtual machine.
	DatastoreId pulumi.StringPtrInput `pulumi:"datastoreId"`
	// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
	DeviceAddress pulumi.StringPtrInput `pulumi:"deviceAddress"`
	// The mode of this this virtual disk for purposes of writes and snapshotting. Can be one of append, independent_nonpersistent, independent_persistent, nonpersistent, persistent, or undoable.
	DiskMode pulumi.StringPtrInput `pulumi:"diskMode"`
	// The sharing mode of this virtual disk. Can be one of sharingMultiWriter or sharingNone.
	DiskSharing pulumi.StringPtrInput `pulumi:"diskSharing"`
	// The virtual disk file zeroing policy when thinProvision is not true. The default is false, which lazily-zeros the disk, speeding up thick-provisioned disk creation time.
	EagerlyScrub pulumi.BoolPtrInput `pulumi:"eagerlyScrub"`
	// The upper limit of IOPS that this disk can use.
	IoLimit pulumi.IntPtrInput `pulumi:"ioLimit"`
	// The I/O guarantee that this disk has, in IOPS.
	IoReservation pulumi.IntPtrInput `pulumi:"ioReservation"`
	// The share count for this disk when the share level is custom.
	IoShareCount pulumi.IntPtrInput `pulumi:"ioShareCount"`
	// The share allocation level for this disk. Can be one of low, normal, high, or custom.
	IoShareLevel pulumi.StringPtrInput `pulumi:"ioShareLevel"`
	// Set to true to keep the underlying VMDK file when removing this virtual disk from configuration.
	KeepOnRemove pulumi.BoolPtrInput `pulumi:"keepOnRemove"`
	// The ID of the device within the virtual machine.
	Key pulumi.IntPtrInput `pulumi:"key"`
	// A unique label for this disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The full path of the virtual disk. This can only be provided if attach is set to true, otherwise it is a read-only value.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The size of the disk, in GB.
	Size pulumi.IntPtrInput `pulumi:"size"`
	// The ID of the storage policy to assign to the virtual disk in VM.
	StoragePolicyId pulumi.StringPtrInput `pulumi:"storagePolicyId"`
	// If true, this disk is thin provisioned, with space for the file being allocated on an as-needed basis.
	ThinProvisioned pulumi.BoolPtrInput `pulumi:"thinProvisioned"`
	// The unique device number for this disk. This number determines where on the SCSI bus this device will be attached.
	UnitNumber pulumi.IntPtrInput `pulumi:"unitNumber"`
	// The UUID of the virtual machine. Also exposed as the `id` of the resource.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
	// If true, writes for this disk are sent directly to the filesystem immediately instead of being buffered.
	WriteThrough pulumi.BoolPtrInput `pulumi:"writeThrough"`
}

func (VirtualMachineDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineDisk)(nil)).Elem()
}

func (i VirtualMachineDiskArgs) ToVirtualMachineDiskOutput() VirtualMachineDiskOutput {
	return i.ToVirtualMachineDiskOutputWithContext(context.Background())
}

func (i VirtualMachineDiskArgs) ToVirtualMachineDiskOutputWithContext(ctx context.Context) VirtualMachineDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineDiskOutput)
}

// VirtualMachineDiskArrayInput is an input type that accepts VirtualMachineDiskArray and VirtualMachineDiskArrayOutput values.
// You can construct a concrete instance of `VirtualMachineDiskArrayInput` via:
//
//	VirtualMachineDiskArray{ VirtualMachineDiskArgs{...} }
type VirtualMachineDiskArrayInput interface {
	pulumi.Input

	ToVirtualMachineDiskArrayOutput() VirtualMachineDiskArrayOutput
	ToVirtualMachineDiskArrayOutputWithContext(context.Context) VirtualMachineDiskArrayOutput
}

type VirtualMachineDiskArray []VirtualMachineDiskInput

func (VirtualMachineDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineDisk)(nil)).Elem()
}

func (i VirtualMachineDiskArray) ToVirtualMachineDiskArrayOutput() VirtualMachineDiskArrayOutput {
	return i.ToVirtualMachineDiskArrayOutputWithContext(context.Background())
}

func (i VirtualMachineDiskArray) ToVirtualMachineDiskArrayOutputWithContext(ctx context.Context) VirtualMachineDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineDiskArrayOutput)
}

type VirtualMachineDiskOutput struct{ *pulumi.OutputState }

func (VirtualMachineDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineDisk)(nil)).Elem()
}

func (o VirtualMachineDiskOutput) ToVirtualMachineDiskOutput() VirtualMachineDiskOutput {
	return o
}

func (o VirtualMachineDiskOutput) ToVirtualMachineDiskOutputWithContext(ctx context.Context) VirtualMachineDiskOutput {
	return o
}

// If this is true, the disk is attached instead of created. Implies keep_on_remove.
func (o VirtualMachineDiskOutput) Attach() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *bool { return v.Attach }).(pulumi.BoolPtrOutput)
}

// The type of controller the disk should be connected to. Must be 'scsi', 'sata', or 'ide'.
func (o VirtualMachineDiskOutput) ControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.ControllerType }).(pulumi.StringPtrOutput)
}

// The datastore ID for this virtual disk, if different than the virtual machine.
func (o VirtualMachineDiskOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
func (o VirtualMachineDiskOutput) DeviceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.DeviceAddress }).(pulumi.StringPtrOutput)
}

// The mode of this this virtual disk for purposes of writes and snapshotting. Can be one of append, independent_nonpersistent, independent_persistent, nonpersistent, persistent, or undoable.
func (o VirtualMachineDiskOutput) DiskMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.DiskMode }).(pulumi.StringPtrOutput)
}

// The sharing mode of this virtual disk. Can be one of sharingMultiWriter or sharingNone.
func (o VirtualMachineDiskOutput) DiskSharing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.DiskSharing }).(pulumi.StringPtrOutput)
}

// The virtual disk file zeroing policy when thinProvision is not true. The default is false, which lazily-zeros the disk, speeding up thick-provisioned disk creation time.
func (o VirtualMachineDiskOutput) EagerlyScrub() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *bool { return v.EagerlyScrub }).(pulumi.BoolPtrOutput)
}

// The upper limit of IOPS that this disk can use.
func (o VirtualMachineDiskOutput) IoLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *int { return v.IoLimit }).(pulumi.IntPtrOutput)
}

// The I/O guarantee that this disk has, in IOPS.
func (o VirtualMachineDiskOutput) IoReservation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *int { return v.IoReservation }).(pulumi.IntPtrOutput)
}

// The share count for this disk when the share level is custom.
func (o VirtualMachineDiskOutput) IoShareCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *int { return v.IoShareCount }).(pulumi.IntPtrOutput)
}

// The share allocation level for this disk. Can be one of low, normal, high, or custom.
func (o VirtualMachineDiskOutput) IoShareLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.IoShareLevel }).(pulumi.StringPtrOutput)
}

// Set to true to keep the underlying VMDK file when removing this virtual disk from configuration.
func (o VirtualMachineDiskOutput) KeepOnRemove() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *bool { return v.KeepOnRemove }).(pulumi.BoolPtrOutput)
}

// The ID of the device within the virtual machine.
func (o VirtualMachineDiskOutput) Key() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *int { return v.Key }).(pulumi.IntPtrOutput)
}

// A unique label for this disk.
func (o VirtualMachineDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The full path of the virtual disk. This can only be provided if attach is set to true, otherwise it is a read-only value.
func (o VirtualMachineDiskOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The size of the disk, in GB.
func (o VirtualMachineDiskOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The ID of the storage policy to assign to the virtual disk in VM.
func (o VirtualMachineDiskOutput) StoragePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.StoragePolicyId }).(pulumi.StringPtrOutput)
}

// If true, this disk is thin provisioned, with space for the file being allocated on an as-needed basis.
func (o VirtualMachineDiskOutput) ThinProvisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *bool { return v.ThinProvisioned }).(pulumi.BoolPtrOutput)
}

// The unique device number for this disk. This number determines where on the SCSI bus this device will be attached.
func (o VirtualMachineDiskOutput) UnitNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *int { return v.UnitNumber }).(pulumi.IntPtrOutput)
}

// The UUID of the virtual machine. Also exposed as the `id` of the resource.
func (o VirtualMachineDiskOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

// If true, writes for this disk are sent directly to the filesystem immediately instead of being buffered.
func (o VirtualMachineDiskOutput) WriteThrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineDisk) *bool { return v.WriteThrough }).(pulumi.BoolPtrOutput)
}

type VirtualMachineDiskArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineDisk)(nil)).Elem()
}

func (o VirtualMachineDiskArrayOutput) ToVirtualMachineDiskArrayOutput() VirtualMachineDiskArrayOutput {
	return o
}

func (o VirtualMachineDiskArrayOutput) ToVirtualMachineDiskArrayOutputWithContext(ctx context.Context) VirtualMachineDiskArrayOutput {
	return o
}

func (o VirtualMachineDiskArrayOutput) Index(i pulumi.IntInput) VirtualMachineDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineDisk {
		return vs[0].([]VirtualMachineDisk)[vs[1].(int)]
	}).(VirtualMachineDiskOutput)
}

type VirtualMachineNetworkInterface struct {
	// The controller type. Can be one of e1000, e1000e, sriov, vmxnet3, or vrdma.
	AdapterType *string `pulumi:"adapterType"`
	// The upper bandwidth limit of this network interface, in Mbits/sec.
	BandwidthLimit *int `pulumi:"bandwidthLimit"`
	// The bandwidth reservation of this network interface, in Mbits/sec.
	BandwidthReservation *int `pulumi:"bandwidthReservation"`
	// The share count for this network interface when the share level is custom.
	BandwidthShareCount *int `pulumi:"bandwidthShareCount"`
	// The bandwidth share allocation level for this interface. Can be one of low, normal, high, or custom.
	BandwidthShareLevel *string `pulumi:"bandwidthShareLevel"`
	// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
	DeviceAddress *string `pulumi:"deviceAddress"`
	// The ID of the device within the virtual machine.
	Key *int `pulumi:"key"`
	// The MAC address of this network interface. Can only be manually set if useStaticMac is true.
	MacAddress *string `pulumi:"macAddress"`
	// The ID of the network to connect this network interface to.
	NetworkId string `pulumi:"networkId"`
	// Mapping of network interface to OVF network.
	OvfMapping *string `pulumi:"ovfMapping"`
	// The ID of the Physical SR-IOV NIC to attach to, e.g. '0000:d8:00.0'
	PhysicalFunction *string `pulumi:"physicalFunction"`
	// If true, the macAddress field is treated as a static MAC address and set accordingly.
	UseStaticMac *bool `pulumi:"useStaticMac"`
}

// VirtualMachineNetworkInterfaceInput is an input type that accepts VirtualMachineNetworkInterfaceArgs and VirtualMachineNetworkInterfaceOutput values.
// You can construct a concrete instance of `VirtualMachineNetworkInterfaceInput` via:
//
//	VirtualMachineNetworkInterfaceArgs{...}
type VirtualMachineNetworkInterfaceInput interface {
	pulumi.Input

	ToVirtualMachineNetworkInterfaceOutput() VirtualMachineNetworkInterfaceOutput
	ToVirtualMachineNetworkInterfaceOutputWithContext(context.Context) VirtualMachineNetworkInterfaceOutput
}

type VirtualMachineNetworkInterfaceArgs struct {
	// The controller type. Can be one of e1000, e1000e, sriov, vmxnet3, or vrdma.
	AdapterType pulumi.StringPtrInput `pulumi:"adapterType"`
	// The upper bandwidth limit of this network interface, in Mbits/sec.
	BandwidthLimit pulumi.IntPtrInput `pulumi:"bandwidthLimit"`
	// The bandwidth reservation of this network interface, in Mbits/sec.
	BandwidthReservation pulumi.IntPtrInput `pulumi:"bandwidthReservation"`
	// The share count for this network interface when the share level is custom.
	BandwidthShareCount pulumi.IntPtrInput `pulumi:"bandwidthShareCount"`
	// The bandwidth share allocation level for this interface. Can be one of low, normal, high, or custom.
	BandwidthShareLevel pulumi.StringPtrInput `pulumi:"bandwidthShareLevel"`
	// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
	DeviceAddress pulumi.StringPtrInput `pulumi:"deviceAddress"`
	// The ID of the device within the virtual machine.
	Key pulumi.IntPtrInput `pulumi:"key"`
	// The MAC address of this network interface. Can only be manually set if useStaticMac is true.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The ID of the network to connect this network interface to.
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Mapping of network interface to OVF network.
	OvfMapping pulumi.StringPtrInput `pulumi:"ovfMapping"`
	// The ID of the Physical SR-IOV NIC to attach to, e.g. '0000:d8:00.0'
	PhysicalFunction pulumi.StringPtrInput `pulumi:"physicalFunction"`
	// If true, the macAddress field is treated as a static MAC address and set accordingly.
	UseStaticMac pulumi.BoolPtrInput `pulumi:"useStaticMac"`
}

func (VirtualMachineNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineNetworkInterface)(nil)).Elem()
}

func (i VirtualMachineNetworkInterfaceArgs) ToVirtualMachineNetworkInterfaceOutput() VirtualMachineNetworkInterfaceOutput {
	return i.ToVirtualMachineNetworkInterfaceOutputWithContext(context.Background())
}

func (i VirtualMachineNetworkInterfaceArgs) ToVirtualMachineNetworkInterfaceOutputWithContext(ctx context.Context) VirtualMachineNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineNetworkInterfaceOutput)
}

// VirtualMachineNetworkInterfaceArrayInput is an input type that accepts VirtualMachineNetworkInterfaceArray and VirtualMachineNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `VirtualMachineNetworkInterfaceArrayInput` via:
//
//	VirtualMachineNetworkInterfaceArray{ VirtualMachineNetworkInterfaceArgs{...} }
type VirtualMachineNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToVirtualMachineNetworkInterfaceArrayOutput() VirtualMachineNetworkInterfaceArrayOutput
	ToVirtualMachineNetworkInterfaceArrayOutputWithContext(context.Context) VirtualMachineNetworkInterfaceArrayOutput
}

type VirtualMachineNetworkInterfaceArray []VirtualMachineNetworkInterfaceInput

func (VirtualMachineNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineNetworkInterface)(nil)).Elem()
}

func (i VirtualMachineNetworkInterfaceArray) ToVirtualMachineNetworkInterfaceArrayOutput() VirtualMachineNetworkInterfaceArrayOutput {
	return i.ToVirtualMachineNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i VirtualMachineNetworkInterfaceArray) ToVirtualMachineNetworkInterfaceArrayOutputWithContext(ctx context.Context) VirtualMachineNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineNetworkInterfaceArrayOutput)
}

type VirtualMachineNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (VirtualMachineNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineNetworkInterface)(nil)).Elem()
}

func (o VirtualMachineNetworkInterfaceOutput) ToVirtualMachineNetworkInterfaceOutput() VirtualMachineNetworkInterfaceOutput {
	return o
}

func (o VirtualMachineNetworkInterfaceOutput) ToVirtualMachineNetworkInterfaceOutputWithContext(ctx context.Context) VirtualMachineNetworkInterfaceOutput {
	return o
}

// The controller type. Can be one of e1000, e1000e, sriov, vmxnet3, or vrdma.
func (o VirtualMachineNetworkInterfaceOutput) AdapterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *string { return v.AdapterType }).(pulumi.StringPtrOutput)
}

// The upper bandwidth limit of this network interface, in Mbits/sec.
func (o VirtualMachineNetworkInterfaceOutput) BandwidthLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *int { return v.BandwidthLimit }).(pulumi.IntPtrOutput)
}

// The bandwidth reservation of this network interface, in Mbits/sec.
func (o VirtualMachineNetworkInterfaceOutput) BandwidthReservation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *int { return v.BandwidthReservation }).(pulumi.IntPtrOutput)
}

// The share count for this network interface when the share level is custom.
func (o VirtualMachineNetworkInterfaceOutput) BandwidthShareCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *int { return v.BandwidthShareCount }).(pulumi.IntPtrOutput)
}

// The bandwidth share allocation level for this interface. Can be one of low, normal, high, or custom.
func (o VirtualMachineNetworkInterfaceOutput) BandwidthShareLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *string { return v.BandwidthShareLevel }).(pulumi.StringPtrOutput)
}

// The internally-computed address of this device, such as scsi:0:1, denoting scsi bus #0 and device unit 1.
func (o VirtualMachineNetworkInterfaceOutput) DeviceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *string { return v.DeviceAddress }).(pulumi.StringPtrOutput)
}

// The ID of the device within the virtual machine.
func (o VirtualMachineNetworkInterfaceOutput) Key() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *int { return v.Key }).(pulumi.IntPtrOutput)
}

// The MAC address of this network interface. Can only be manually set if useStaticMac is true.
func (o VirtualMachineNetworkInterfaceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The ID of the network to connect this network interface to.
func (o VirtualMachineNetworkInterfaceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Mapping of network interface to OVF network.
func (o VirtualMachineNetworkInterfaceOutput) OvfMapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *string { return v.OvfMapping }).(pulumi.StringPtrOutput)
}

// The ID of the Physical SR-IOV NIC to attach to, e.g. '0000:d8:00.0'
func (o VirtualMachineNetworkInterfaceOutput) PhysicalFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *string { return v.PhysicalFunction }).(pulumi.StringPtrOutput)
}

// If true, the macAddress field is treated as a static MAC address and set accordingly.
func (o VirtualMachineNetworkInterfaceOutput) UseStaticMac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineNetworkInterface) *bool { return v.UseStaticMac }).(pulumi.BoolPtrOutput)
}

type VirtualMachineNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineNetworkInterface)(nil)).Elem()
}

func (o VirtualMachineNetworkInterfaceArrayOutput) ToVirtualMachineNetworkInterfaceArrayOutput() VirtualMachineNetworkInterfaceArrayOutput {
	return o
}

func (o VirtualMachineNetworkInterfaceArrayOutput) ToVirtualMachineNetworkInterfaceArrayOutputWithContext(ctx context.Context) VirtualMachineNetworkInterfaceArrayOutput {
	return o
}

func (o VirtualMachineNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) VirtualMachineNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineNetworkInterface {
		return vs[0].([]VirtualMachineNetworkInterface)[vs[1].(int)]
	}).(VirtualMachineNetworkInterfaceOutput)
}

type VirtualMachineOvfDeploy struct {
	// Allow unverified ssl certificates while deploying ovf/ova from url.
	AllowUnverifiedSslCert *bool `pulumi:"allowUnverifiedSslCert"`
	// The Deployment option to be chosen. If empty, the default option is used.
	DeploymentOption *string `pulumi:"deploymentOption"`
	// An optional disk provisioning. If set, all the disks in the deployed ovf will have the same specified disk type (e.g., thin provisioned).
	DiskProvisioning *string `pulumi:"diskProvisioning"`
	// Allow properties with ovf:userConfigurable=false to be set.
	EnableHiddenProperties *bool `pulumi:"enableHiddenProperties"`
	// The IP allocation policy.
	IpAllocationPolicy *string `pulumi:"ipAllocationPolicy"`
	// The IP protocol.
	IpProtocol *string `pulumi:"ipProtocol"`
	// The absolute path to the ovf/ova file in the local system.
	LocalOvfPath *string `pulumi:"localOvfPath"`
	// The mapping of name of network identifiers from the ovf descriptor to network UUID in the VI infrastructure.
	OvfNetworkMap map[string]string `pulumi:"ovfNetworkMap"`
	// URL to the remote ovf/ova file to be deployed.
	RemoteOvfUrl *string `pulumi:"remoteOvfUrl"`
}

// VirtualMachineOvfDeployInput is an input type that accepts VirtualMachineOvfDeployArgs and VirtualMachineOvfDeployOutput values.
// You can construct a concrete instance of `VirtualMachineOvfDeployInput` via:
//
//	VirtualMachineOvfDeployArgs{...}
type VirtualMachineOvfDeployInput interface {
	pulumi.Input

	ToVirtualMachineOvfDeployOutput() VirtualMachineOvfDeployOutput
	ToVirtualMachineOvfDeployOutputWithContext(context.Context) VirtualMachineOvfDeployOutput
}

type VirtualMachineOvfDeployArgs struct {
	// Allow unverified ssl certificates while deploying ovf/ova from url.
	AllowUnverifiedSslCert pulumi.BoolPtrInput `pulumi:"allowUnverifiedSslCert"`
	// The Deployment option to be chosen. If empty, the default option is used.
	DeploymentOption pulumi.StringPtrInput `pulumi:"deploymentOption"`
	// An optional disk provisioning. If set, all the disks in the deployed ovf will have the same specified disk type (e.g., thin provisioned).
	DiskProvisioning pulumi.StringPtrInput `pulumi:"diskProvisioning"`
	// Allow properties with ovf:userConfigurable=false to be set.
	EnableHiddenProperties pulumi.BoolPtrInput `pulumi:"enableHiddenProperties"`
	// The IP allocation policy.
	IpAllocationPolicy pulumi.StringPtrInput `pulumi:"ipAllocationPolicy"`
	// The IP protocol.
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// The absolute path to the ovf/ova file in the local system.
	LocalOvfPath pulumi.StringPtrInput `pulumi:"localOvfPath"`
	// The mapping of name of network identifiers from the ovf descriptor to network UUID in the VI infrastructure.
	OvfNetworkMap pulumi.StringMapInput `pulumi:"ovfNetworkMap"`
	// URL to the remote ovf/ova file to be deployed.
	RemoteOvfUrl pulumi.StringPtrInput `pulumi:"remoteOvfUrl"`
}

func (VirtualMachineOvfDeployArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOvfDeploy)(nil)).Elem()
}

func (i VirtualMachineOvfDeployArgs) ToVirtualMachineOvfDeployOutput() VirtualMachineOvfDeployOutput {
	return i.ToVirtualMachineOvfDeployOutputWithContext(context.Background())
}

func (i VirtualMachineOvfDeployArgs) ToVirtualMachineOvfDeployOutputWithContext(ctx context.Context) VirtualMachineOvfDeployOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOvfDeployOutput)
}

func (i VirtualMachineOvfDeployArgs) ToVirtualMachineOvfDeployPtrOutput() VirtualMachineOvfDeployPtrOutput {
	return i.ToVirtualMachineOvfDeployPtrOutputWithContext(context.Background())
}

func (i VirtualMachineOvfDeployArgs) ToVirtualMachineOvfDeployPtrOutputWithContext(ctx context.Context) VirtualMachineOvfDeployPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOvfDeployOutput).ToVirtualMachineOvfDeployPtrOutputWithContext(ctx)
}

// VirtualMachineOvfDeployPtrInput is an input type that accepts VirtualMachineOvfDeployArgs, VirtualMachineOvfDeployPtr and VirtualMachineOvfDeployPtrOutput values.
// You can construct a concrete instance of `VirtualMachineOvfDeployPtrInput` via:
//
//	        VirtualMachineOvfDeployArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineOvfDeployPtrInput interface {
	pulumi.Input

	ToVirtualMachineOvfDeployPtrOutput() VirtualMachineOvfDeployPtrOutput
	ToVirtualMachineOvfDeployPtrOutputWithContext(context.Context) VirtualMachineOvfDeployPtrOutput
}

type virtualMachineOvfDeployPtrType VirtualMachineOvfDeployArgs

func VirtualMachineOvfDeployPtr(v *VirtualMachineOvfDeployArgs) VirtualMachineOvfDeployPtrInput {
	return (*virtualMachineOvfDeployPtrType)(v)
}

func (*virtualMachineOvfDeployPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOvfDeploy)(nil)).Elem()
}

func (i *virtualMachineOvfDeployPtrType) ToVirtualMachineOvfDeployPtrOutput() VirtualMachineOvfDeployPtrOutput {
	return i.ToVirtualMachineOvfDeployPtrOutputWithContext(context.Background())
}

func (i *virtualMachineOvfDeployPtrType) ToVirtualMachineOvfDeployPtrOutputWithContext(ctx context.Context) VirtualMachineOvfDeployPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOvfDeployPtrOutput)
}

type VirtualMachineOvfDeployOutput struct{ *pulumi.OutputState }

func (VirtualMachineOvfDeployOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineOvfDeploy)(nil)).Elem()
}

func (o VirtualMachineOvfDeployOutput) ToVirtualMachineOvfDeployOutput() VirtualMachineOvfDeployOutput {
	return o
}

func (o VirtualMachineOvfDeployOutput) ToVirtualMachineOvfDeployOutputWithContext(ctx context.Context) VirtualMachineOvfDeployOutput {
	return o
}

func (o VirtualMachineOvfDeployOutput) ToVirtualMachineOvfDeployPtrOutput() VirtualMachineOvfDeployPtrOutput {
	return o.ToVirtualMachineOvfDeployPtrOutputWithContext(context.Background())
}

func (o VirtualMachineOvfDeployOutput) ToVirtualMachineOvfDeployPtrOutputWithContext(ctx context.Context) VirtualMachineOvfDeployPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineOvfDeploy) *VirtualMachineOvfDeploy {
		return &v
	}).(VirtualMachineOvfDeployPtrOutput)
}

// Allow unverified ssl certificates while deploying ovf/ova from url.
func (o VirtualMachineOvfDeployOutput) AllowUnverifiedSslCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) *bool { return v.AllowUnverifiedSslCert }).(pulumi.BoolPtrOutput)
}

// The Deployment option to be chosen. If empty, the default option is used.
func (o VirtualMachineOvfDeployOutput) DeploymentOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) *string { return v.DeploymentOption }).(pulumi.StringPtrOutput)
}

// An optional disk provisioning. If set, all the disks in the deployed ovf will have the same specified disk type (e.g., thin provisioned).
func (o VirtualMachineOvfDeployOutput) DiskProvisioning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) *string { return v.DiskProvisioning }).(pulumi.StringPtrOutput)
}

// Allow properties with ovf:userConfigurable=false to be set.
func (o VirtualMachineOvfDeployOutput) EnableHiddenProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) *bool { return v.EnableHiddenProperties }).(pulumi.BoolPtrOutput)
}

// The IP allocation policy.
func (o VirtualMachineOvfDeployOutput) IpAllocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) *string { return v.IpAllocationPolicy }).(pulumi.StringPtrOutput)
}

// The IP protocol.
func (o VirtualMachineOvfDeployOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// The absolute path to the ovf/ova file in the local system.
func (o VirtualMachineOvfDeployOutput) LocalOvfPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) *string { return v.LocalOvfPath }).(pulumi.StringPtrOutput)
}

// The mapping of name of network identifiers from the ovf descriptor to network UUID in the VI infrastructure.
func (o VirtualMachineOvfDeployOutput) OvfNetworkMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) map[string]string { return v.OvfNetworkMap }).(pulumi.StringMapOutput)
}

// URL to the remote ovf/ova file to be deployed.
func (o VirtualMachineOvfDeployOutput) RemoteOvfUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineOvfDeploy) *string { return v.RemoteOvfUrl }).(pulumi.StringPtrOutput)
}

type VirtualMachineOvfDeployPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineOvfDeployPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineOvfDeploy)(nil)).Elem()
}

func (o VirtualMachineOvfDeployPtrOutput) ToVirtualMachineOvfDeployPtrOutput() VirtualMachineOvfDeployPtrOutput {
	return o
}

func (o VirtualMachineOvfDeployPtrOutput) ToVirtualMachineOvfDeployPtrOutputWithContext(ctx context.Context) VirtualMachineOvfDeployPtrOutput {
	return o
}

func (o VirtualMachineOvfDeployPtrOutput) Elem() VirtualMachineOvfDeployOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) VirtualMachineOvfDeploy {
		if v != nil {
			return *v
		}
		var ret VirtualMachineOvfDeploy
		return ret
	}).(VirtualMachineOvfDeployOutput)
}

// Allow unverified ssl certificates while deploying ovf/ova from url.
func (o VirtualMachineOvfDeployPtrOutput) AllowUnverifiedSslCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) *bool {
		if v == nil {
			return nil
		}
		return v.AllowUnverifiedSslCert
	}).(pulumi.BoolPtrOutput)
}

// The Deployment option to be chosen. If empty, the default option is used.
func (o VirtualMachineOvfDeployPtrOutput) DeploymentOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentOption
	}).(pulumi.StringPtrOutput)
}

// An optional disk provisioning. If set, all the disks in the deployed ovf will have the same specified disk type (e.g., thin provisioned).
func (o VirtualMachineOvfDeployPtrOutput) DiskProvisioning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) *string {
		if v == nil {
			return nil
		}
		return v.DiskProvisioning
	}).(pulumi.StringPtrOutput)
}

// Allow properties with ovf:userConfigurable=false to be set.
func (o VirtualMachineOvfDeployPtrOutput) EnableHiddenProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHiddenProperties
	}).(pulumi.BoolPtrOutput)
}

// The IP allocation policy.
func (o VirtualMachineOvfDeployPtrOutput) IpAllocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) *string {
		if v == nil {
			return nil
		}
		return v.IpAllocationPolicy
	}).(pulumi.StringPtrOutput)
}

// The IP protocol.
func (o VirtualMachineOvfDeployPtrOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) *string {
		if v == nil {
			return nil
		}
		return v.IpProtocol
	}).(pulumi.StringPtrOutput)
}

// The absolute path to the ovf/ova file in the local system.
func (o VirtualMachineOvfDeployPtrOutput) LocalOvfPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) *string {
		if v == nil {
			return nil
		}
		return v.LocalOvfPath
	}).(pulumi.StringPtrOutput)
}

// The mapping of name of network identifiers from the ovf descriptor to network UUID in the VI infrastructure.
func (o VirtualMachineOvfDeployPtrOutput) OvfNetworkMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) map[string]string {
		if v == nil {
			return nil
		}
		return v.OvfNetworkMap
	}).(pulumi.StringMapOutput)
}

// URL to the remote ovf/ova file to be deployed.
func (o VirtualMachineOvfDeployPtrOutput) RemoteOvfUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineOvfDeploy) *string {
		if v == nil {
			return nil
		}
		return v.RemoteOvfUrl
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineVapp struct {
	// A map of customizable vApp properties and their values. Allows customization of VMs cloned from OVF templates which have customizable vApp properties.
	Properties map[string]string `pulumi:"properties"`
}

// VirtualMachineVappInput is an input type that accepts VirtualMachineVappArgs and VirtualMachineVappOutput values.
// You can construct a concrete instance of `VirtualMachineVappInput` via:
//
//	VirtualMachineVappArgs{...}
type VirtualMachineVappInput interface {
	pulumi.Input

	ToVirtualMachineVappOutput() VirtualMachineVappOutput
	ToVirtualMachineVappOutputWithContext(context.Context) VirtualMachineVappOutput
}

type VirtualMachineVappArgs struct {
	// A map of customizable vApp properties and their values. Allows customization of VMs cloned from OVF templates which have customizable vApp properties.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (VirtualMachineVappArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineVapp)(nil)).Elem()
}

func (i VirtualMachineVappArgs) ToVirtualMachineVappOutput() VirtualMachineVappOutput {
	return i.ToVirtualMachineVappOutputWithContext(context.Background())
}

func (i VirtualMachineVappArgs) ToVirtualMachineVappOutputWithContext(ctx context.Context) VirtualMachineVappOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineVappOutput)
}

func (i VirtualMachineVappArgs) ToVirtualMachineVappPtrOutput() VirtualMachineVappPtrOutput {
	return i.ToVirtualMachineVappPtrOutputWithContext(context.Background())
}

func (i VirtualMachineVappArgs) ToVirtualMachineVappPtrOutputWithContext(ctx context.Context) VirtualMachineVappPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineVappOutput).ToVirtualMachineVappPtrOutputWithContext(ctx)
}

// VirtualMachineVappPtrInput is an input type that accepts VirtualMachineVappArgs, VirtualMachineVappPtr and VirtualMachineVappPtrOutput values.
// You can construct a concrete instance of `VirtualMachineVappPtrInput` via:
//
//	        VirtualMachineVappArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineVappPtrInput interface {
	pulumi.Input

	ToVirtualMachineVappPtrOutput() VirtualMachineVappPtrOutput
	ToVirtualMachineVappPtrOutputWithContext(context.Context) VirtualMachineVappPtrOutput
}

type virtualMachineVappPtrType VirtualMachineVappArgs

func VirtualMachineVappPtr(v *VirtualMachineVappArgs) VirtualMachineVappPtrInput {
	return (*virtualMachineVappPtrType)(v)
}

func (*virtualMachineVappPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineVapp)(nil)).Elem()
}

func (i *virtualMachineVappPtrType) ToVirtualMachineVappPtrOutput() VirtualMachineVappPtrOutput {
	return i.ToVirtualMachineVappPtrOutputWithContext(context.Background())
}

func (i *virtualMachineVappPtrType) ToVirtualMachineVappPtrOutputWithContext(ctx context.Context) VirtualMachineVappPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineVappPtrOutput)
}

type VirtualMachineVappOutput struct{ *pulumi.OutputState }

func (VirtualMachineVappOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineVapp)(nil)).Elem()
}

func (o VirtualMachineVappOutput) ToVirtualMachineVappOutput() VirtualMachineVappOutput {
	return o
}

func (o VirtualMachineVappOutput) ToVirtualMachineVappOutputWithContext(ctx context.Context) VirtualMachineVappOutput {
	return o
}

func (o VirtualMachineVappOutput) ToVirtualMachineVappPtrOutput() VirtualMachineVappPtrOutput {
	return o.ToVirtualMachineVappPtrOutputWithContext(context.Background())
}

func (o VirtualMachineVappOutput) ToVirtualMachineVappPtrOutputWithContext(ctx context.Context) VirtualMachineVappPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineVapp) *VirtualMachineVapp {
		return &v
	}).(VirtualMachineVappPtrOutput)
}

// A map of customizable vApp properties and their values. Allows customization of VMs cloned from OVF templates which have customizable vApp properties.
func (o VirtualMachineVappOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualMachineVapp) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type VirtualMachineVappPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineVappPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineVapp)(nil)).Elem()
}

func (o VirtualMachineVappPtrOutput) ToVirtualMachineVappPtrOutput() VirtualMachineVappPtrOutput {
	return o
}

func (o VirtualMachineVappPtrOutput) ToVirtualMachineVappPtrOutputWithContext(ctx context.Context) VirtualMachineVappPtrOutput {
	return o
}

func (o VirtualMachineVappPtrOutput) Elem() VirtualMachineVappOutput {
	return o.ApplyT(func(v *VirtualMachineVapp) VirtualMachineVapp {
		if v != nil {
			return *v
		}
		var ret VirtualMachineVapp
		return ret
	}).(VirtualMachineVappOutput)
}

// A map of customizable vApp properties and their values. Allows customization of VMs cloned from OVF templates which have customizable vApp properties.
func (o VirtualMachineVappPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachineVapp) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

type VmStoragePolicyTagRule struct {
	// Include datastores with the given tags or exclude. Default `true`.
	IncludeDatastoresWithTags *bool `pulumi:"includeDatastoresWithTags"`
	// Name of the tag category.
	TagCategory string `pulumi:"tagCategory"`
	// List of Name of tags to select from the given category.
	Tags []string `pulumi:"tags"`
}

// VmStoragePolicyTagRuleInput is an input type that accepts VmStoragePolicyTagRuleArgs and VmStoragePolicyTagRuleOutput values.
// You can construct a concrete instance of `VmStoragePolicyTagRuleInput` via:
//
//	VmStoragePolicyTagRuleArgs{...}
type VmStoragePolicyTagRuleInput interface {
	pulumi.Input

	ToVmStoragePolicyTagRuleOutput() VmStoragePolicyTagRuleOutput
	ToVmStoragePolicyTagRuleOutputWithContext(context.Context) VmStoragePolicyTagRuleOutput
}

type VmStoragePolicyTagRuleArgs struct {
	// Include datastores with the given tags or exclude. Default `true`.
	IncludeDatastoresWithTags pulumi.BoolPtrInput `pulumi:"includeDatastoresWithTags"`
	// Name of the tag category.
	TagCategory pulumi.StringInput `pulumi:"tagCategory"`
	// List of Name of tags to select from the given category.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (VmStoragePolicyTagRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmStoragePolicyTagRule)(nil)).Elem()
}

func (i VmStoragePolicyTagRuleArgs) ToVmStoragePolicyTagRuleOutput() VmStoragePolicyTagRuleOutput {
	return i.ToVmStoragePolicyTagRuleOutputWithContext(context.Background())
}

func (i VmStoragePolicyTagRuleArgs) ToVmStoragePolicyTagRuleOutputWithContext(ctx context.Context) VmStoragePolicyTagRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmStoragePolicyTagRuleOutput)
}

// VmStoragePolicyTagRuleArrayInput is an input type that accepts VmStoragePolicyTagRuleArray and VmStoragePolicyTagRuleArrayOutput values.
// You can construct a concrete instance of `VmStoragePolicyTagRuleArrayInput` via:
//
//	VmStoragePolicyTagRuleArray{ VmStoragePolicyTagRuleArgs{...} }
type VmStoragePolicyTagRuleArrayInput interface {
	pulumi.Input

	ToVmStoragePolicyTagRuleArrayOutput() VmStoragePolicyTagRuleArrayOutput
	ToVmStoragePolicyTagRuleArrayOutputWithContext(context.Context) VmStoragePolicyTagRuleArrayOutput
}

type VmStoragePolicyTagRuleArray []VmStoragePolicyTagRuleInput

func (VmStoragePolicyTagRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmStoragePolicyTagRule)(nil)).Elem()
}

func (i VmStoragePolicyTagRuleArray) ToVmStoragePolicyTagRuleArrayOutput() VmStoragePolicyTagRuleArrayOutput {
	return i.ToVmStoragePolicyTagRuleArrayOutputWithContext(context.Background())
}

func (i VmStoragePolicyTagRuleArray) ToVmStoragePolicyTagRuleArrayOutputWithContext(ctx context.Context) VmStoragePolicyTagRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmStoragePolicyTagRuleArrayOutput)
}

type VmStoragePolicyTagRuleOutput struct{ *pulumi.OutputState }

func (VmStoragePolicyTagRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmStoragePolicyTagRule)(nil)).Elem()
}

func (o VmStoragePolicyTagRuleOutput) ToVmStoragePolicyTagRuleOutput() VmStoragePolicyTagRuleOutput {
	return o
}

func (o VmStoragePolicyTagRuleOutput) ToVmStoragePolicyTagRuleOutputWithContext(ctx context.Context) VmStoragePolicyTagRuleOutput {
	return o
}

// Include datastores with the given tags or exclude. Default `true`.
func (o VmStoragePolicyTagRuleOutput) IncludeDatastoresWithTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VmStoragePolicyTagRule) *bool { return v.IncludeDatastoresWithTags }).(pulumi.BoolPtrOutput)
}

// Name of the tag category.
func (o VmStoragePolicyTagRuleOutput) TagCategory() pulumi.StringOutput {
	return o.ApplyT(func(v VmStoragePolicyTagRule) string { return v.TagCategory }).(pulumi.StringOutput)
}

// List of Name of tags to select from the given category.
func (o VmStoragePolicyTagRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VmStoragePolicyTagRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type VmStoragePolicyTagRuleArrayOutput struct{ *pulumi.OutputState }

func (VmStoragePolicyTagRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VmStoragePolicyTagRule)(nil)).Elem()
}

func (o VmStoragePolicyTagRuleArrayOutput) ToVmStoragePolicyTagRuleArrayOutput() VmStoragePolicyTagRuleArrayOutput {
	return o
}

func (o VmStoragePolicyTagRuleArrayOutput) ToVmStoragePolicyTagRuleArrayOutputWithContext(ctx context.Context) VmStoragePolicyTagRuleArrayOutput {
	return o
}

func (o VmStoragePolicyTagRuleArrayOutput) Index(i pulumi.IntInput) VmStoragePolicyTagRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VmStoragePolicyTagRule {
		return vs[0].([]VmStoragePolicyTagRule)[vs[1].(int)]
	}).(VmStoragePolicyTagRuleOutput)
}

type VnicIpv4 struct {
	// Use DHCP to configure the interface's IPv4 stack.
	Dhcp *bool `pulumi:"dhcp"`
	// IP address of the default gateway, if DHCP is not set.
	Gw *string `pulumi:"gw"`
	// address of the interface, if DHCP is not set.
	Ip *string `pulumi:"ip"`
	// netmask of the interface, if DHCP is not set.
	Netmask *string `pulumi:"netmask"`
}

// VnicIpv4Input is an input type that accepts VnicIpv4Args and VnicIpv4Output values.
// You can construct a concrete instance of `VnicIpv4Input` via:
//
//	VnicIpv4Args{...}
type VnicIpv4Input interface {
	pulumi.Input

	ToVnicIpv4Output() VnicIpv4Output
	ToVnicIpv4OutputWithContext(context.Context) VnicIpv4Output
}

type VnicIpv4Args struct {
	// Use DHCP to configure the interface's IPv4 stack.
	Dhcp pulumi.BoolPtrInput `pulumi:"dhcp"`
	// IP address of the default gateway, if DHCP is not set.
	Gw pulumi.StringPtrInput `pulumi:"gw"`
	// address of the interface, if DHCP is not set.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// netmask of the interface, if DHCP is not set.
	Netmask pulumi.StringPtrInput `pulumi:"netmask"`
}

func (VnicIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VnicIpv4)(nil)).Elem()
}

func (i VnicIpv4Args) ToVnicIpv4Output() VnicIpv4Output {
	return i.ToVnicIpv4OutputWithContext(context.Background())
}

func (i VnicIpv4Args) ToVnicIpv4OutputWithContext(ctx context.Context) VnicIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(VnicIpv4Output)
}

func (i VnicIpv4Args) ToVnicIpv4PtrOutput() VnicIpv4PtrOutput {
	return i.ToVnicIpv4PtrOutputWithContext(context.Background())
}

func (i VnicIpv4Args) ToVnicIpv4PtrOutputWithContext(ctx context.Context) VnicIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnicIpv4Output).ToVnicIpv4PtrOutputWithContext(ctx)
}

// VnicIpv4PtrInput is an input type that accepts VnicIpv4Args, VnicIpv4Ptr and VnicIpv4PtrOutput values.
// You can construct a concrete instance of `VnicIpv4PtrInput` via:
//
//	        VnicIpv4Args{...}
//
//	or:
//
//	        nil
type VnicIpv4PtrInput interface {
	pulumi.Input

	ToVnicIpv4PtrOutput() VnicIpv4PtrOutput
	ToVnicIpv4PtrOutputWithContext(context.Context) VnicIpv4PtrOutput
}

type vnicIpv4PtrType VnicIpv4Args

func VnicIpv4Ptr(v *VnicIpv4Args) VnicIpv4PtrInput {
	return (*vnicIpv4PtrType)(v)
}

func (*vnicIpv4PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnicIpv4)(nil)).Elem()
}

func (i *vnicIpv4PtrType) ToVnicIpv4PtrOutput() VnicIpv4PtrOutput {
	return i.ToVnicIpv4PtrOutputWithContext(context.Background())
}

func (i *vnicIpv4PtrType) ToVnicIpv4PtrOutputWithContext(ctx context.Context) VnicIpv4PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnicIpv4PtrOutput)
}

type VnicIpv4Output struct{ *pulumi.OutputState }

func (VnicIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VnicIpv4)(nil)).Elem()
}

func (o VnicIpv4Output) ToVnicIpv4Output() VnicIpv4Output {
	return o
}

func (o VnicIpv4Output) ToVnicIpv4OutputWithContext(ctx context.Context) VnicIpv4Output {
	return o
}

func (o VnicIpv4Output) ToVnicIpv4PtrOutput() VnicIpv4PtrOutput {
	return o.ToVnicIpv4PtrOutputWithContext(context.Background())
}

func (o VnicIpv4Output) ToVnicIpv4PtrOutputWithContext(ctx context.Context) VnicIpv4PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VnicIpv4) *VnicIpv4 {
		return &v
	}).(VnicIpv4PtrOutput)
}

// Use DHCP to configure the interface's IPv4 stack.
func (o VnicIpv4Output) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VnicIpv4) *bool { return v.Dhcp }).(pulumi.BoolPtrOutput)
}

// IP address of the default gateway, if DHCP is not set.
func (o VnicIpv4Output) Gw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnicIpv4) *string { return v.Gw }).(pulumi.StringPtrOutput)
}

// address of the interface, if DHCP is not set.
func (o VnicIpv4Output) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnicIpv4) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// netmask of the interface, if DHCP is not set.
func (o VnicIpv4Output) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnicIpv4) *string { return v.Netmask }).(pulumi.StringPtrOutput)
}

type VnicIpv4PtrOutput struct{ *pulumi.OutputState }

func (VnicIpv4PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnicIpv4)(nil)).Elem()
}

func (o VnicIpv4PtrOutput) ToVnicIpv4PtrOutput() VnicIpv4PtrOutput {
	return o
}

func (o VnicIpv4PtrOutput) ToVnicIpv4PtrOutputWithContext(ctx context.Context) VnicIpv4PtrOutput {
	return o
}

func (o VnicIpv4PtrOutput) Elem() VnicIpv4Output {
	return o.ApplyT(func(v *VnicIpv4) VnicIpv4 {
		if v != nil {
			return *v
		}
		var ret VnicIpv4
		return ret
	}).(VnicIpv4Output)
}

// Use DHCP to configure the interface's IPv4 stack.
func (o VnicIpv4PtrOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VnicIpv4) *bool {
		if v == nil {
			return nil
		}
		return v.Dhcp
	}).(pulumi.BoolPtrOutput)
}

// IP address of the default gateway, if DHCP is not set.
func (o VnicIpv4PtrOutput) Gw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnicIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Gw
	}).(pulumi.StringPtrOutput)
}

// address of the interface, if DHCP is not set.
func (o VnicIpv4PtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnicIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

// netmask of the interface, if DHCP is not set.
func (o VnicIpv4PtrOutput) Netmask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnicIpv4) *string {
		if v == nil {
			return nil
		}
		return v.Netmask
	}).(pulumi.StringPtrOutput)
}

type VnicIpv6 struct {
	// List of IPv6 addresses
	Addresses []string `pulumi:"addresses"`
	// Use IPv6 Autoconfiguration (RFC2462).
	Autoconfig *bool `pulumi:"autoconfig"`
	// Use DHCP to configure the interface's IPv4 stack.
	Dhcp *bool `pulumi:"dhcp"`
	// IP address of the default gateway, if DHCP or autoconfig is not set.
	Gw *string `pulumi:"gw"`
}

// VnicIpv6Input is an input type that accepts VnicIpv6Args and VnicIpv6Output values.
// You can construct a concrete instance of `VnicIpv6Input` via:
//
//	VnicIpv6Args{...}
type VnicIpv6Input interface {
	pulumi.Input

	ToVnicIpv6Output() VnicIpv6Output
	ToVnicIpv6OutputWithContext(context.Context) VnicIpv6Output
}

type VnicIpv6Args struct {
	// List of IPv6 addresses
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// Use IPv6 Autoconfiguration (RFC2462).
	Autoconfig pulumi.BoolPtrInput `pulumi:"autoconfig"`
	// Use DHCP to configure the interface's IPv4 stack.
	Dhcp pulumi.BoolPtrInput `pulumi:"dhcp"`
	// IP address of the default gateway, if DHCP or autoconfig is not set.
	Gw pulumi.StringPtrInput `pulumi:"gw"`
}

func (VnicIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VnicIpv6)(nil)).Elem()
}

func (i VnicIpv6Args) ToVnicIpv6Output() VnicIpv6Output {
	return i.ToVnicIpv6OutputWithContext(context.Background())
}

func (i VnicIpv6Args) ToVnicIpv6OutputWithContext(ctx context.Context) VnicIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(VnicIpv6Output)
}

func (i VnicIpv6Args) ToVnicIpv6PtrOutput() VnicIpv6PtrOutput {
	return i.ToVnicIpv6PtrOutputWithContext(context.Background())
}

func (i VnicIpv6Args) ToVnicIpv6PtrOutputWithContext(ctx context.Context) VnicIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnicIpv6Output).ToVnicIpv6PtrOutputWithContext(ctx)
}

// VnicIpv6PtrInput is an input type that accepts VnicIpv6Args, VnicIpv6Ptr and VnicIpv6PtrOutput values.
// You can construct a concrete instance of `VnicIpv6PtrInput` via:
//
//	        VnicIpv6Args{...}
//
//	or:
//
//	        nil
type VnicIpv6PtrInput interface {
	pulumi.Input

	ToVnicIpv6PtrOutput() VnicIpv6PtrOutput
	ToVnicIpv6PtrOutputWithContext(context.Context) VnicIpv6PtrOutput
}

type vnicIpv6PtrType VnicIpv6Args

func VnicIpv6Ptr(v *VnicIpv6Args) VnicIpv6PtrInput {
	return (*vnicIpv6PtrType)(v)
}

func (*vnicIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnicIpv6)(nil)).Elem()
}

func (i *vnicIpv6PtrType) ToVnicIpv6PtrOutput() VnicIpv6PtrOutput {
	return i.ToVnicIpv6PtrOutputWithContext(context.Background())
}

func (i *vnicIpv6PtrType) ToVnicIpv6PtrOutputWithContext(ctx context.Context) VnicIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnicIpv6PtrOutput)
}

type VnicIpv6Output struct{ *pulumi.OutputState }

func (VnicIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VnicIpv6)(nil)).Elem()
}

func (o VnicIpv6Output) ToVnicIpv6Output() VnicIpv6Output {
	return o
}

func (o VnicIpv6Output) ToVnicIpv6OutputWithContext(ctx context.Context) VnicIpv6Output {
	return o
}

func (o VnicIpv6Output) ToVnicIpv6PtrOutput() VnicIpv6PtrOutput {
	return o.ToVnicIpv6PtrOutputWithContext(context.Background())
}

func (o VnicIpv6Output) ToVnicIpv6PtrOutputWithContext(ctx context.Context) VnicIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VnicIpv6) *VnicIpv6 {
		return &v
	}).(VnicIpv6PtrOutput)
}

// List of IPv6 addresses
func (o VnicIpv6Output) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VnicIpv6) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// Use IPv6 Autoconfiguration (RFC2462).
func (o VnicIpv6Output) Autoconfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VnicIpv6) *bool { return v.Autoconfig }).(pulumi.BoolPtrOutput)
}

// Use DHCP to configure the interface's IPv4 stack.
func (o VnicIpv6Output) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VnicIpv6) *bool { return v.Dhcp }).(pulumi.BoolPtrOutput)
}

// IP address of the default gateway, if DHCP or autoconfig is not set.
func (o VnicIpv6Output) Gw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnicIpv6) *string { return v.Gw }).(pulumi.StringPtrOutput)
}

type VnicIpv6PtrOutput struct{ *pulumi.OutputState }

func (VnicIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnicIpv6)(nil)).Elem()
}

func (o VnicIpv6PtrOutput) ToVnicIpv6PtrOutput() VnicIpv6PtrOutput {
	return o
}

func (o VnicIpv6PtrOutput) ToVnicIpv6PtrOutputWithContext(ctx context.Context) VnicIpv6PtrOutput {
	return o
}

func (o VnicIpv6PtrOutput) Elem() VnicIpv6Output {
	return o.ApplyT(func(v *VnicIpv6) VnicIpv6 {
		if v != nil {
			return *v
		}
		var ret VnicIpv6
		return ret
	}).(VnicIpv6Output)
}

// List of IPv6 addresses
func (o VnicIpv6PtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VnicIpv6) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

// Use IPv6 Autoconfiguration (RFC2462).
func (o VnicIpv6PtrOutput) Autoconfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VnicIpv6) *bool {
		if v == nil {
			return nil
		}
		return v.Autoconfig
	}).(pulumi.BoolPtrOutput)
}

// Use DHCP to configure the interface's IPv4 stack.
func (o VnicIpv6PtrOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VnicIpv6) *bool {
		if v == nil {
			return nil
		}
		return v.Dhcp
	}).(pulumi.BoolPtrOutput)
}

// IP address of the default gateway, if DHCP or autoconfig is not set.
func (o VnicIpv6PtrOutput) Gw() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VnicIpv6) *string {
		if v == nil {
			return nil
		}
		return v.Gw
	}).(pulumi.StringPtrOutput)
}

type GetGuestOsCustomizationSpec struct {
	// A list of DNS servers for a virtual network adapter with a static IP address.
	DnsServerLists []string `pulumi:"dnsServerLists"`
	// A list of DNS search domains to add to the DNS configuration on the virtual machine.
	DnsSuffixLists []string `pulumi:"dnsSuffixLists"`
	// A list of configuration options specific to Linux.
	LinuxOptions []GetGuestOsCustomizationSpecLinuxOption `pulumi:"linuxOptions"`
	// A specification of network interface configuration options.
	NetworkInterfaces []GetGuestOsCustomizationSpecNetworkInterface `pulumi:"networkInterfaces"`
	// A list of configuration options specific to Windows.
	WindowsOptions []GetGuestOsCustomizationSpecWindowsOption `pulumi:"windowsOptions"`
	// Use this option to specify use of a Windows Sysprep file.
	WindowsSysprepText string `pulumi:"windowsSysprepText"`
}

// GetGuestOsCustomizationSpecInput is an input type that accepts GetGuestOsCustomizationSpecArgs and GetGuestOsCustomizationSpecOutput values.
// You can construct a concrete instance of `GetGuestOsCustomizationSpecInput` via:
//
//	GetGuestOsCustomizationSpecArgs{...}
type GetGuestOsCustomizationSpecInput interface {
	pulumi.Input

	ToGetGuestOsCustomizationSpecOutput() GetGuestOsCustomizationSpecOutput
	ToGetGuestOsCustomizationSpecOutputWithContext(context.Context) GetGuestOsCustomizationSpecOutput
}

type GetGuestOsCustomizationSpecArgs struct {
	// A list of DNS servers for a virtual network adapter with a static IP address.
	DnsServerLists pulumi.StringArrayInput `pulumi:"dnsServerLists"`
	// A list of DNS search domains to add to the DNS configuration on the virtual machine.
	DnsSuffixLists pulumi.StringArrayInput `pulumi:"dnsSuffixLists"`
	// A list of configuration options specific to Linux.
	LinuxOptions GetGuestOsCustomizationSpecLinuxOptionArrayInput `pulumi:"linuxOptions"`
	// A specification of network interface configuration options.
	NetworkInterfaces GetGuestOsCustomizationSpecNetworkInterfaceArrayInput `pulumi:"networkInterfaces"`
	// A list of configuration options specific to Windows.
	WindowsOptions GetGuestOsCustomizationSpecWindowsOptionArrayInput `pulumi:"windowsOptions"`
	// Use this option to specify use of a Windows Sysprep file.
	WindowsSysprepText pulumi.StringInput `pulumi:"windowsSysprepText"`
}

func (GetGuestOsCustomizationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuestOsCustomizationSpec)(nil)).Elem()
}

func (i GetGuestOsCustomizationSpecArgs) ToGetGuestOsCustomizationSpecOutput() GetGuestOsCustomizationSpecOutput {
	return i.ToGetGuestOsCustomizationSpecOutputWithContext(context.Background())
}

func (i GetGuestOsCustomizationSpecArgs) ToGetGuestOsCustomizationSpecOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuestOsCustomizationSpecOutput)
}

// GetGuestOsCustomizationSpecArrayInput is an input type that accepts GetGuestOsCustomizationSpecArray and GetGuestOsCustomizationSpecArrayOutput values.
// You can construct a concrete instance of `GetGuestOsCustomizationSpecArrayInput` via:
//
//	GetGuestOsCustomizationSpecArray{ GetGuestOsCustomizationSpecArgs{...} }
type GetGuestOsCustomizationSpecArrayInput interface {
	pulumi.Input

	ToGetGuestOsCustomizationSpecArrayOutput() GetGuestOsCustomizationSpecArrayOutput
	ToGetGuestOsCustomizationSpecArrayOutputWithContext(context.Context) GetGuestOsCustomizationSpecArrayOutput
}

type GetGuestOsCustomizationSpecArray []GetGuestOsCustomizationSpecInput

func (GetGuestOsCustomizationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuestOsCustomizationSpec)(nil)).Elem()
}

func (i GetGuestOsCustomizationSpecArray) ToGetGuestOsCustomizationSpecArrayOutput() GetGuestOsCustomizationSpecArrayOutput {
	return i.ToGetGuestOsCustomizationSpecArrayOutputWithContext(context.Background())
}

func (i GetGuestOsCustomizationSpecArray) ToGetGuestOsCustomizationSpecArrayOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuestOsCustomizationSpecArrayOutput)
}

type GetGuestOsCustomizationSpecOutput struct{ *pulumi.OutputState }

func (GetGuestOsCustomizationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuestOsCustomizationSpec)(nil)).Elem()
}

func (o GetGuestOsCustomizationSpecOutput) ToGetGuestOsCustomizationSpecOutput() GetGuestOsCustomizationSpecOutput {
	return o
}

func (o GetGuestOsCustomizationSpecOutput) ToGetGuestOsCustomizationSpecOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecOutput {
	return o
}

// A list of DNS servers for a virtual network adapter with a static IP address.
func (o GetGuestOsCustomizationSpecOutput) DnsServerLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpec) []string { return v.DnsServerLists }).(pulumi.StringArrayOutput)
}

// A list of DNS search domains to add to the DNS configuration on the virtual machine.
func (o GetGuestOsCustomizationSpecOutput) DnsSuffixLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpec) []string { return v.DnsSuffixLists }).(pulumi.StringArrayOutput)
}

// A list of configuration options specific to Linux.
func (o GetGuestOsCustomizationSpecOutput) LinuxOptions() GetGuestOsCustomizationSpecLinuxOptionArrayOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpec) []GetGuestOsCustomizationSpecLinuxOption { return v.LinuxOptions }).(GetGuestOsCustomizationSpecLinuxOptionArrayOutput)
}

// A specification of network interface configuration options.
func (o GetGuestOsCustomizationSpecOutput) NetworkInterfaces() GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpec) []GetGuestOsCustomizationSpecNetworkInterface {
		return v.NetworkInterfaces
	}).(GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput)
}

// A list of configuration options specific to Windows.
func (o GetGuestOsCustomizationSpecOutput) WindowsOptions() GetGuestOsCustomizationSpecWindowsOptionArrayOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpec) []GetGuestOsCustomizationSpecWindowsOption {
		return v.WindowsOptions
	}).(GetGuestOsCustomizationSpecWindowsOptionArrayOutput)
}

// Use this option to specify use of a Windows Sysprep file.
func (o GetGuestOsCustomizationSpecOutput) WindowsSysprepText() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpec) string { return v.WindowsSysprepText }).(pulumi.StringOutput)
}

type GetGuestOsCustomizationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetGuestOsCustomizationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuestOsCustomizationSpec)(nil)).Elem()
}

func (o GetGuestOsCustomizationSpecArrayOutput) ToGetGuestOsCustomizationSpecArrayOutput() GetGuestOsCustomizationSpecArrayOutput {
	return o
}

func (o GetGuestOsCustomizationSpecArrayOutput) ToGetGuestOsCustomizationSpecArrayOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecArrayOutput {
	return o
}

func (o GetGuestOsCustomizationSpecArrayOutput) Index(i pulumi.IntInput) GetGuestOsCustomizationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuestOsCustomizationSpec {
		return vs[0].([]GetGuestOsCustomizationSpec)[vs[1].(int)]
	}).(GetGuestOsCustomizationSpecOutput)
}

type GetGuestOsCustomizationSpecLinuxOption struct {
	// The domain name for this virtual machine.
	Domain string `pulumi:"domain"`
	// The hostname for this virtual machine.
	HostName string `pulumi:"hostName"`
	// Specifies whether or not the hardware clock should be in UTC or not.
	HwClockUtc bool `pulumi:"hwClockUtc"`
	// The customization script to run before and or after guest customization.
	ScriptText string `pulumi:"scriptText"`
	// Set the time zone on the guest operating system. For a list of the acceptable values for Linux customization specifications, see [List of Time Zone Database Zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) on Wikipedia.
	TimeZone string `pulumi:"timeZone"`
}

// GetGuestOsCustomizationSpecLinuxOptionInput is an input type that accepts GetGuestOsCustomizationSpecLinuxOptionArgs and GetGuestOsCustomizationSpecLinuxOptionOutput values.
// You can construct a concrete instance of `GetGuestOsCustomizationSpecLinuxOptionInput` via:
//
//	GetGuestOsCustomizationSpecLinuxOptionArgs{...}
type GetGuestOsCustomizationSpecLinuxOptionInput interface {
	pulumi.Input

	ToGetGuestOsCustomizationSpecLinuxOptionOutput() GetGuestOsCustomizationSpecLinuxOptionOutput
	ToGetGuestOsCustomizationSpecLinuxOptionOutputWithContext(context.Context) GetGuestOsCustomizationSpecLinuxOptionOutput
}

type GetGuestOsCustomizationSpecLinuxOptionArgs struct {
	// The domain name for this virtual machine.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The hostname for this virtual machine.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// Specifies whether or not the hardware clock should be in UTC or not.
	HwClockUtc pulumi.BoolInput `pulumi:"hwClockUtc"`
	// The customization script to run before and or after guest customization.
	ScriptText pulumi.StringInput `pulumi:"scriptText"`
	// Set the time zone on the guest operating system. For a list of the acceptable values for Linux customization specifications, see [List of Time Zone Database Zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) on Wikipedia.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (GetGuestOsCustomizationSpecLinuxOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuestOsCustomizationSpecLinuxOption)(nil)).Elem()
}

func (i GetGuestOsCustomizationSpecLinuxOptionArgs) ToGetGuestOsCustomizationSpecLinuxOptionOutput() GetGuestOsCustomizationSpecLinuxOptionOutput {
	return i.ToGetGuestOsCustomizationSpecLinuxOptionOutputWithContext(context.Background())
}

func (i GetGuestOsCustomizationSpecLinuxOptionArgs) ToGetGuestOsCustomizationSpecLinuxOptionOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecLinuxOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuestOsCustomizationSpecLinuxOptionOutput)
}

// GetGuestOsCustomizationSpecLinuxOptionArrayInput is an input type that accepts GetGuestOsCustomizationSpecLinuxOptionArray and GetGuestOsCustomizationSpecLinuxOptionArrayOutput values.
// You can construct a concrete instance of `GetGuestOsCustomizationSpecLinuxOptionArrayInput` via:
//
//	GetGuestOsCustomizationSpecLinuxOptionArray{ GetGuestOsCustomizationSpecLinuxOptionArgs{...} }
type GetGuestOsCustomizationSpecLinuxOptionArrayInput interface {
	pulumi.Input

	ToGetGuestOsCustomizationSpecLinuxOptionArrayOutput() GetGuestOsCustomizationSpecLinuxOptionArrayOutput
	ToGetGuestOsCustomizationSpecLinuxOptionArrayOutputWithContext(context.Context) GetGuestOsCustomizationSpecLinuxOptionArrayOutput
}

type GetGuestOsCustomizationSpecLinuxOptionArray []GetGuestOsCustomizationSpecLinuxOptionInput

func (GetGuestOsCustomizationSpecLinuxOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuestOsCustomizationSpecLinuxOption)(nil)).Elem()
}

func (i GetGuestOsCustomizationSpecLinuxOptionArray) ToGetGuestOsCustomizationSpecLinuxOptionArrayOutput() GetGuestOsCustomizationSpecLinuxOptionArrayOutput {
	return i.ToGetGuestOsCustomizationSpecLinuxOptionArrayOutputWithContext(context.Background())
}

func (i GetGuestOsCustomizationSpecLinuxOptionArray) ToGetGuestOsCustomizationSpecLinuxOptionArrayOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecLinuxOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuestOsCustomizationSpecLinuxOptionArrayOutput)
}

type GetGuestOsCustomizationSpecLinuxOptionOutput struct{ *pulumi.OutputState }

func (GetGuestOsCustomizationSpecLinuxOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuestOsCustomizationSpecLinuxOption)(nil)).Elem()
}

func (o GetGuestOsCustomizationSpecLinuxOptionOutput) ToGetGuestOsCustomizationSpecLinuxOptionOutput() GetGuestOsCustomizationSpecLinuxOptionOutput {
	return o
}

func (o GetGuestOsCustomizationSpecLinuxOptionOutput) ToGetGuestOsCustomizationSpecLinuxOptionOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecLinuxOptionOutput {
	return o
}

// The domain name for this virtual machine.
func (o GetGuestOsCustomizationSpecLinuxOptionOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecLinuxOption) string { return v.Domain }).(pulumi.StringOutput)
}

// The hostname for this virtual machine.
func (o GetGuestOsCustomizationSpecLinuxOptionOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecLinuxOption) string { return v.HostName }).(pulumi.StringOutput)
}

// Specifies whether or not the hardware clock should be in UTC or not.
func (o GetGuestOsCustomizationSpecLinuxOptionOutput) HwClockUtc() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecLinuxOption) bool { return v.HwClockUtc }).(pulumi.BoolOutput)
}

// The customization script to run before and or after guest customization.
func (o GetGuestOsCustomizationSpecLinuxOptionOutput) ScriptText() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecLinuxOption) string { return v.ScriptText }).(pulumi.StringOutput)
}

// Set the time zone on the guest operating system. For a list of the acceptable values for Linux customization specifications, see [List of Time Zone Database Zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) on Wikipedia.
func (o GetGuestOsCustomizationSpecLinuxOptionOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecLinuxOption) string { return v.TimeZone }).(pulumi.StringOutput)
}

type GetGuestOsCustomizationSpecLinuxOptionArrayOutput struct{ *pulumi.OutputState }

func (GetGuestOsCustomizationSpecLinuxOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuestOsCustomizationSpecLinuxOption)(nil)).Elem()
}

func (o GetGuestOsCustomizationSpecLinuxOptionArrayOutput) ToGetGuestOsCustomizationSpecLinuxOptionArrayOutput() GetGuestOsCustomizationSpecLinuxOptionArrayOutput {
	return o
}

func (o GetGuestOsCustomizationSpecLinuxOptionArrayOutput) ToGetGuestOsCustomizationSpecLinuxOptionArrayOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecLinuxOptionArrayOutput {
	return o
}

func (o GetGuestOsCustomizationSpecLinuxOptionArrayOutput) Index(i pulumi.IntInput) GetGuestOsCustomizationSpecLinuxOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuestOsCustomizationSpecLinuxOption {
		return vs[0].([]GetGuestOsCustomizationSpecLinuxOption)[vs[1].(int)]
	}).(GetGuestOsCustomizationSpecLinuxOptionOutput)
}

type GetGuestOsCustomizationSpecNetworkInterface struct {
	// A DNS search domain to add to the DNS configuration on the virtual machine.
	DnsDomain string `pulumi:"dnsDomain"`
	// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
	DnsServerLists []string `pulumi:"dnsServerLists"`
	// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
	Ipv4Address string `pulumi:"ipv4Address"`
	// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
	Ipv4Netmask int `pulumi:"ipv4Netmask"`
	// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
	Ipv6Address string `pulumi:"ipv6Address"`
	// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
	Ipv6Netmask int `pulumi:"ipv6Netmask"`
}

// GetGuestOsCustomizationSpecNetworkInterfaceInput is an input type that accepts GetGuestOsCustomizationSpecNetworkInterfaceArgs and GetGuestOsCustomizationSpecNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetGuestOsCustomizationSpecNetworkInterfaceInput` via:
//
//	GetGuestOsCustomizationSpecNetworkInterfaceArgs{...}
type GetGuestOsCustomizationSpecNetworkInterfaceInput interface {
	pulumi.Input

	ToGetGuestOsCustomizationSpecNetworkInterfaceOutput() GetGuestOsCustomizationSpecNetworkInterfaceOutput
	ToGetGuestOsCustomizationSpecNetworkInterfaceOutputWithContext(context.Context) GetGuestOsCustomizationSpecNetworkInterfaceOutput
}

type GetGuestOsCustomizationSpecNetworkInterfaceArgs struct {
	// A DNS search domain to add to the DNS configuration on the virtual machine.
	DnsDomain pulumi.StringInput `pulumi:"dnsDomain"`
	// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
	DnsServerLists pulumi.StringArrayInput `pulumi:"dnsServerLists"`
	// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
	Ipv4Address pulumi.StringInput `pulumi:"ipv4Address"`
	// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
	Ipv4Netmask pulumi.IntInput `pulumi:"ipv4Netmask"`
	// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
	Ipv6Netmask pulumi.IntInput `pulumi:"ipv6Netmask"`
}

func (GetGuestOsCustomizationSpecNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuestOsCustomizationSpecNetworkInterface)(nil)).Elem()
}

func (i GetGuestOsCustomizationSpecNetworkInterfaceArgs) ToGetGuestOsCustomizationSpecNetworkInterfaceOutput() GetGuestOsCustomizationSpecNetworkInterfaceOutput {
	return i.ToGetGuestOsCustomizationSpecNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetGuestOsCustomizationSpecNetworkInterfaceArgs) ToGetGuestOsCustomizationSpecNetworkInterfaceOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuestOsCustomizationSpecNetworkInterfaceOutput)
}

// GetGuestOsCustomizationSpecNetworkInterfaceArrayInput is an input type that accepts GetGuestOsCustomizationSpecNetworkInterfaceArray and GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetGuestOsCustomizationSpecNetworkInterfaceArrayInput` via:
//
//	GetGuestOsCustomizationSpecNetworkInterfaceArray{ GetGuestOsCustomizationSpecNetworkInterfaceArgs{...} }
type GetGuestOsCustomizationSpecNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetGuestOsCustomizationSpecNetworkInterfaceArrayOutput() GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput
	ToGetGuestOsCustomizationSpecNetworkInterfaceArrayOutputWithContext(context.Context) GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput
}

type GetGuestOsCustomizationSpecNetworkInterfaceArray []GetGuestOsCustomizationSpecNetworkInterfaceInput

func (GetGuestOsCustomizationSpecNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuestOsCustomizationSpecNetworkInterface)(nil)).Elem()
}

func (i GetGuestOsCustomizationSpecNetworkInterfaceArray) ToGetGuestOsCustomizationSpecNetworkInterfaceArrayOutput() GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return i.ToGetGuestOsCustomizationSpecNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetGuestOsCustomizationSpecNetworkInterfaceArray) ToGetGuestOsCustomizationSpecNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput)
}

type GetGuestOsCustomizationSpecNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetGuestOsCustomizationSpecNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuestOsCustomizationSpecNetworkInterface)(nil)).Elem()
}

func (o GetGuestOsCustomizationSpecNetworkInterfaceOutput) ToGetGuestOsCustomizationSpecNetworkInterfaceOutput() GetGuestOsCustomizationSpecNetworkInterfaceOutput {
	return o
}

func (o GetGuestOsCustomizationSpecNetworkInterfaceOutput) ToGetGuestOsCustomizationSpecNetworkInterfaceOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecNetworkInterfaceOutput {
	return o
}

// A DNS search domain to add to the DNS configuration on the virtual machine.
func (o GetGuestOsCustomizationSpecNetworkInterfaceOutput) DnsDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecNetworkInterface) string { return v.DnsDomain }).(pulumi.StringOutput)
}

// Network-interface specific DNS settings for Windows operating systems. Ignored on Linux.
func (o GetGuestOsCustomizationSpecNetworkInterfaceOutput) DnsServerLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecNetworkInterface) []string { return v.DnsServerLists }).(pulumi.StringArrayOutput)
}

// The IPv4 address assigned to this network adapter. If left blank, DHCP is used.
func (o GetGuestOsCustomizationSpecNetworkInterfaceOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecNetworkInterface) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// The IPv4 CIDR netmask for the supplied IP address. Ignored if DHCP is selected.
func (o GetGuestOsCustomizationSpecNetworkInterfaceOutput) Ipv4Netmask() pulumi.IntOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecNetworkInterface) int { return v.Ipv4Netmask }).(pulumi.IntOutput)
}

// The IPv6 address assigned to this network adapter. If left blank, default auto-configuration is used.
func (o GetGuestOsCustomizationSpecNetworkInterfaceOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecNetworkInterface) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The IPv6 CIDR netmask for the supplied IP address. Ignored if auto-configuration is selected.
func (o GetGuestOsCustomizationSpecNetworkInterfaceOutput) Ipv6Netmask() pulumi.IntOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecNetworkInterface) int { return v.Ipv6Netmask }).(pulumi.IntOutput)
}

type GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuestOsCustomizationSpecNetworkInterface)(nil)).Elem()
}

func (o GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput) ToGetGuestOsCustomizationSpecNetworkInterfaceArrayOutput() GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return o
}

func (o GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput) ToGetGuestOsCustomizationSpecNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput {
	return o
}

func (o GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetGuestOsCustomizationSpecNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuestOsCustomizationSpecNetworkInterface {
		return vs[0].([]GetGuestOsCustomizationSpecNetworkInterface)[vs[1].(int)]
	}).(GetGuestOsCustomizationSpecNetworkInterfaceOutput)
}

type GetGuestOsCustomizationSpecWindowsOption struct {
	// The new administrator password for this virtual machine.
	AdminPassword string `pulumi:"adminPassword"`
	// Specifies whether or not the guest operating system automatically logs on as Administrator.
	AutoLogon bool `pulumi:"autoLogon"`
	// Specifies how many times the guest operating system should auto-logon the Administrator account when `autoLogon` is `true`.
	AutoLogonCount int `pulumi:"autoLogonCount"`
	// The hostname for this virtual machine.
	ComputerName string `pulumi:"computerName"`
	// The user account used to join this virtual machine to the Active Directory domain.
	DomainAdminPassword *string `pulumi:"domainAdminPassword"`
	// The user account of the domain administrator used to join this virtual machine to the domain.
	DomainAdminUser string `pulumi:"domainAdminUser"`
	// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
	DomainOu string `pulumi:"domainOu"`
	// The Active Directory domain for the virtual machine to join.
	JoinDomain string `pulumi:"joinDomain"`
	// A list of commands to run at first user logon, after guest customization.
	RunOnceCommandLists []string `pulumi:"runOnceCommandLists"`
	// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
	TimeZone int `pulumi:"timeZone"`
	// The workgroup for this virtual machine if not joining an Active Directory domain.
	Workgroup string `pulumi:"workgroup"`
}

// GetGuestOsCustomizationSpecWindowsOptionInput is an input type that accepts GetGuestOsCustomizationSpecWindowsOptionArgs and GetGuestOsCustomizationSpecWindowsOptionOutput values.
// You can construct a concrete instance of `GetGuestOsCustomizationSpecWindowsOptionInput` via:
//
//	GetGuestOsCustomizationSpecWindowsOptionArgs{...}
type GetGuestOsCustomizationSpecWindowsOptionInput interface {
	pulumi.Input

	ToGetGuestOsCustomizationSpecWindowsOptionOutput() GetGuestOsCustomizationSpecWindowsOptionOutput
	ToGetGuestOsCustomizationSpecWindowsOptionOutputWithContext(context.Context) GetGuestOsCustomizationSpecWindowsOptionOutput
}

type GetGuestOsCustomizationSpecWindowsOptionArgs struct {
	// The new administrator password for this virtual machine.
	AdminPassword pulumi.StringInput `pulumi:"adminPassword"`
	// Specifies whether or not the guest operating system automatically logs on as Administrator.
	AutoLogon pulumi.BoolInput `pulumi:"autoLogon"`
	// Specifies how many times the guest operating system should auto-logon the Administrator account when `autoLogon` is `true`.
	AutoLogonCount pulumi.IntInput `pulumi:"autoLogonCount"`
	// The hostname for this virtual machine.
	ComputerName pulumi.StringInput `pulumi:"computerName"`
	// The user account used to join this virtual machine to the Active Directory domain.
	DomainAdminPassword pulumi.StringPtrInput `pulumi:"domainAdminPassword"`
	// The user account of the domain administrator used to join this virtual machine to the domain.
	DomainAdminUser pulumi.StringInput `pulumi:"domainAdminUser"`
	// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
	DomainOu pulumi.StringInput `pulumi:"domainOu"`
	// The Active Directory domain for the virtual machine to join.
	JoinDomain pulumi.StringInput `pulumi:"joinDomain"`
	// A list of commands to run at first user logon, after guest customization.
	RunOnceCommandLists pulumi.StringArrayInput `pulumi:"runOnceCommandLists"`
	// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
	TimeZone pulumi.IntInput `pulumi:"timeZone"`
	// The workgroup for this virtual machine if not joining an Active Directory domain.
	Workgroup pulumi.StringInput `pulumi:"workgroup"`
}

func (GetGuestOsCustomizationSpecWindowsOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuestOsCustomizationSpecWindowsOption)(nil)).Elem()
}

func (i GetGuestOsCustomizationSpecWindowsOptionArgs) ToGetGuestOsCustomizationSpecWindowsOptionOutput() GetGuestOsCustomizationSpecWindowsOptionOutput {
	return i.ToGetGuestOsCustomizationSpecWindowsOptionOutputWithContext(context.Background())
}

func (i GetGuestOsCustomizationSpecWindowsOptionArgs) ToGetGuestOsCustomizationSpecWindowsOptionOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecWindowsOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuestOsCustomizationSpecWindowsOptionOutput)
}

// GetGuestOsCustomizationSpecWindowsOptionArrayInput is an input type that accepts GetGuestOsCustomizationSpecWindowsOptionArray and GetGuestOsCustomizationSpecWindowsOptionArrayOutput values.
// You can construct a concrete instance of `GetGuestOsCustomizationSpecWindowsOptionArrayInput` via:
//
//	GetGuestOsCustomizationSpecWindowsOptionArray{ GetGuestOsCustomizationSpecWindowsOptionArgs{...} }
type GetGuestOsCustomizationSpecWindowsOptionArrayInput interface {
	pulumi.Input

	ToGetGuestOsCustomizationSpecWindowsOptionArrayOutput() GetGuestOsCustomizationSpecWindowsOptionArrayOutput
	ToGetGuestOsCustomizationSpecWindowsOptionArrayOutputWithContext(context.Context) GetGuestOsCustomizationSpecWindowsOptionArrayOutput
}

type GetGuestOsCustomizationSpecWindowsOptionArray []GetGuestOsCustomizationSpecWindowsOptionInput

func (GetGuestOsCustomizationSpecWindowsOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuestOsCustomizationSpecWindowsOption)(nil)).Elem()
}

func (i GetGuestOsCustomizationSpecWindowsOptionArray) ToGetGuestOsCustomizationSpecWindowsOptionArrayOutput() GetGuestOsCustomizationSpecWindowsOptionArrayOutput {
	return i.ToGetGuestOsCustomizationSpecWindowsOptionArrayOutputWithContext(context.Background())
}

func (i GetGuestOsCustomizationSpecWindowsOptionArray) ToGetGuestOsCustomizationSpecWindowsOptionArrayOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecWindowsOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGuestOsCustomizationSpecWindowsOptionArrayOutput)
}

type GetGuestOsCustomizationSpecWindowsOptionOutput struct{ *pulumi.OutputState }

func (GetGuestOsCustomizationSpecWindowsOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGuestOsCustomizationSpecWindowsOption)(nil)).Elem()
}

func (o GetGuestOsCustomizationSpecWindowsOptionOutput) ToGetGuestOsCustomizationSpecWindowsOptionOutput() GetGuestOsCustomizationSpecWindowsOptionOutput {
	return o
}

func (o GetGuestOsCustomizationSpecWindowsOptionOutput) ToGetGuestOsCustomizationSpecWindowsOptionOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecWindowsOptionOutput {
	return o
}

// The new administrator password for this virtual machine.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) string { return v.AdminPassword }).(pulumi.StringOutput)
}

// Specifies whether or not the guest operating system automatically logs on as Administrator.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) AutoLogon() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) bool { return v.AutoLogon }).(pulumi.BoolOutput)
}

// Specifies how many times the guest operating system should auto-logon the Administrator account when `autoLogon` is `true`.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) AutoLogonCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) int { return v.AutoLogonCount }).(pulumi.IntOutput)
}

// The hostname for this virtual machine.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) ComputerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) string { return v.ComputerName }).(pulumi.StringOutput)
}

// The user account used to join this virtual machine to the Active Directory domain.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) DomainAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) *string { return v.DomainAdminPassword }).(pulumi.StringPtrOutput)
}

// The user account of the domain administrator used to join this virtual machine to the domain.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) DomainAdminUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) string { return v.DomainAdminUser }).(pulumi.StringOutput)
}

// The MachineObjectOU which specifies the full LDAP path name of the OU to which the virtual machine belongs.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) DomainOu() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) string { return v.DomainOu }).(pulumi.StringOutput)
}

// The Active Directory domain for the virtual machine to join.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) JoinDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) string { return v.JoinDomain }).(pulumi.StringOutput)
}

// A list of commands to run at first user logon, after guest customization.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) RunOnceCommandLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) []string { return v.RunOnceCommandLists }).(pulumi.StringArrayOutput)
}

// The new time zone for the virtual machine. This is a sysprep-dictated timezone code.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) TimeZone() pulumi.IntOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) int { return v.TimeZone }).(pulumi.IntOutput)
}

// The workgroup for this virtual machine if not joining an Active Directory domain.
func (o GetGuestOsCustomizationSpecWindowsOptionOutput) Workgroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetGuestOsCustomizationSpecWindowsOption) string { return v.Workgroup }).(pulumi.StringOutput)
}

type GetGuestOsCustomizationSpecWindowsOptionArrayOutput struct{ *pulumi.OutputState }

func (GetGuestOsCustomizationSpecWindowsOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGuestOsCustomizationSpecWindowsOption)(nil)).Elem()
}

func (o GetGuestOsCustomizationSpecWindowsOptionArrayOutput) ToGetGuestOsCustomizationSpecWindowsOptionArrayOutput() GetGuestOsCustomizationSpecWindowsOptionArrayOutput {
	return o
}

func (o GetGuestOsCustomizationSpecWindowsOptionArrayOutput) ToGetGuestOsCustomizationSpecWindowsOptionArrayOutputWithContext(ctx context.Context) GetGuestOsCustomizationSpecWindowsOptionArrayOutput {
	return o
}

func (o GetGuestOsCustomizationSpecWindowsOptionArrayOutput) Index(i pulumi.IntInput) GetGuestOsCustomizationSpecWindowsOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGuestOsCustomizationSpecWindowsOption {
		return vs[0].([]GetGuestOsCustomizationSpecWindowsOption)[vs[1].(int)]
	}).(GetGuestOsCustomizationSpecWindowsOptionOutput)
}

type GetHostVgpuProfileVgpuProfile struct {
	// Indicates whether the GPU plugin on this host is
	// capable of disk-only snapshots when VM is not powered off.
	DiskSnapshotSupported bool `pulumi:"diskSnapshotSupported"`
	// Indicates whether the GPU plugin on this host
	// is capable of memory snapshots.
	MemorySnapshotSupported bool `pulumi:"memorySnapshotSupported"`
	// Indicates whether the GPU plugin on this host is
	// capable of migration.
	MigrateSupported bool `pulumi:"migrateSupported"`
	// Indicates whether the GPU plugin on this host is
	// capable of suspend-resume.
	SuspendSupported bool `pulumi:"suspendSupported"`
	// Name of a particular vGPU available as a shared GPU device (vGPU
	// profile).
	Vgpu string `pulumi:"vgpu"`
}

// GetHostVgpuProfileVgpuProfileInput is an input type that accepts GetHostVgpuProfileVgpuProfileArgs and GetHostVgpuProfileVgpuProfileOutput values.
// You can construct a concrete instance of `GetHostVgpuProfileVgpuProfileInput` via:
//
//	GetHostVgpuProfileVgpuProfileArgs{...}
type GetHostVgpuProfileVgpuProfileInput interface {
	pulumi.Input

	ToGetHostVgpuProfileVgpuProfileOutput() GetHostVgpuProfileVgpuProfileOutput
	ToGetHostVgpuProfileVgpuProfileOutputWithContext(context.Context) GetHostVgpuProfileVgpuProfileOutput
}

type GetHostVgpuProfileVgpuProfileArgs struct {
	// Indicates whether the GPU plugin on this host is
	// capable of disk-only snapshots when VM is not powered off.
	DiskSnapshotSupported pulumi.BoolInput `pulumi:"diskSnapshotSupported"`
	// Indicates whether the GPU plugin on this host
	// is capable of memory snapshots.
	MemorySnapshotSupported pulumi.BoolInput `pulumi:"memorySnapshotSupported"`
	// Indicates whether the GPU plugin on this host is
	// capable of migration.
	MigrateSupported pulumi.BoolInput `pulumi:"migrateSupported"`
	// Indicates whether the GPU plugin on this host is
	// capable of suspend-resume.
	SuspendSupported pulumi.BoolInput `pulumi:"suspendSupported"`
	// Name of a particular vGPU available as a shared GPU device (vGPU
	// profile).
	Vgpu pulumi.StringInput `pulumi:"vgpu"`
}

func (GetHostVgpuProfileVgpuProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostVgpuProfileVgpuProfile)(nil)).Elem()
}

func (i GetHostVgpuProfileVgpuProfileArgs) ToGetHostVgpuProfileVgpuProfileOutput() GetHostVgpuProfileVgpuProfileOutput {
	return i.ToGetHostVgpuProfileVgpuProfileOutputWithContext(context.Background())
}

func (i GetHostVgpuProfileVgpuProfileArgs) ToGetHostVgpuProfileVgpuProfileOutputWithContext(ctx context.Context) GetHostVgpuProfileVgpuProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostVgpuProfileVgpuProfileOutput)
}

// GetHostVgpuProfileVgpuProfileArrayInput is an input type that accepts GetHostVgpuProfileVgpuProfileArray and GetHostVgpuProfileVgpuProfileArrayOutput values.
// You can construct a concrete instance of `GetHostVgpuProfileVgpuProfileArrayInput` via:
//
//	GetHostVgpuProfileVgpuProfileArray{ GetHostVgpuProfileVgpuProfileArgs{...} }
type GetHostVgpuProfileVgpuProfileArrayInput interface {
	pulumi.Input

	ToGetHostVgpuProfileVgpuProfileArrayOutput() GetHostVgpuProfileVgpuProfileArrayOutput
	ToGetHostVgpuProfileVgpuProfileArrayOutputWithContext(context.Context) GetHostVgpuProfileVgpuProfileArrayOutput
}

type GetHostVgpuProfileVgpuProfileArray []GetHostVgpuProfileVgpuProfileInput

func (GetHostVgpuProfileVgpuProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostVgpuProfileVgpuProfile)(nil)).Elem()
}

func (i GetHostVgpuProfileVgpuProfileArray) ToGetHostVgpuProfileVgpuProfileArrayOutput() GetHostVgpuProfileVgpuProfileArrayOutput {
	return i.ToGetHostVgpuProfileVgpuProfileArrayOutputWithContext(context.Background())
}

func (i GetHostVgpuProfileVgpuProfileArray) ToGetHostVgpuProfileVgpuProfileArrayOutputWithContext(ctx context.Context) GetHostVgpuProfileVgpuProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostVgpuProfileVgpuProfileArrayOutput)
}

type GetHostVgpuProfileVgpuProfileOutput struct{ *pulumi.OutputState }

func (GetHostVgpuProfileVgpuProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostVgpuProfileVgpuProfile)(nil)).Elem()
}

func (o GetHostVgpuProfileVgpuProfileOutput) ToGetHostVgpuProfileVgpuProfileOutput() GetHostVgpuProfileVgpuProfileOutput {
	return o
}

func (o GetHostVgpuProfileVgpuProfileOutput) ToGetHostVgpuProfileVgpuProfileOutputWithContext(ctx context.Context) GetHostVgpuProfileVgpuProfileOutput {
	return o
}

// Indicates whether the GPU plugin on this host is
// capable of disk-only snapshots when VM is not powered off.
func (o GetHostVgpuProfileVgpuProfileOutput) DiskSnapshotSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostVgpuProfileVgpuProfile) bool { return v.DiskSnapshotSupported }).(pulumi.BoolOutput)
}

// Indicates whether the GPU plugin on this host
// is capable of memory snapshots.
func (o GetHostVgpuProfileVgpuProfileOutput) MemorySnapshotSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostVgpuProfileVgpuProfile) bool { return v.MemorySnapshotSupported }).(pulumi.BoolOutput)
}

// Indicates whether the GPU plugin on this host is
// capable of migration.
func (o GetHostVgpuProfileVgpuProfileOutput) MigrateSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostVgpuProfileVgpuProfile) bool { return v.MigrateSupported }).(pulumi.BoolOutput)
}

// Indicates whether the GPU plugin on this host is
// capable of suspend-resume.
func (o GetHostVgpuProfileVgpuProfileOutput) SuspendSupported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostVgpuProfileVgpuProfile) bool { return v.SuspendSupported }).(pulumi.BoolOutput)
}

// Name of a particular vGPU available as a shared GPU device (vGPU
// profile).
func (o GetHostVgpuProfileVgpuProfileOutput) Vgpu() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostVgpuProfileVgpuProfile) string { return v.Vgpu }).(pulumi.StringOutput)
}

type GetHostVgpuProfileVgpuProfileArrayOutput struct{ *pulumi.OutputState }

func (GetHostVgpuProfileVgpuProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostVgpuProfileVgpuProfile)(nil)).Elem()
}

func (o GetHostVgpuProfileVgpuProfileArrayOutput) ToGetHostVgpuProfileVgpuProfileArrayOutput() GetHostVgpuProfileVgpuProfileArrayOutput {
	return o
}

func (o GetHostVgpuProfileVgpuProfileArrayOutput) ToGetHostVgpuProfileVgpuProfileArrayOutputWithContext(ctx context.Context) GetHostVgpuProfileVgpuProfileArrayOutput {
	return o
}

func (o GetHostVgpuProfileVgpuProfileArrayOutput) Index(i pulumi.IntInput) GetHostVgpuProfileVgpuProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostVgpuProfileVgpuProfile {
		return vs[0].([]GetHostVgpuProfileVgpuProfile)[vs[1].(int)]
	}).(GetHostVgpuProfileVgpuProfileOutput)
}

type GetVirtualMachineDisk struct {
	// Set to `true` if the disk has been eager zeroed.
	EagerlyScrub bool `pulumi:"eagerlyScrub"`
	// The label for the disk.
	Label string `pulumi:"label"`
	// The size of the disk, in GIB.
	Size int `pulumi:"size"`
	// Set to `true` if the disk has been thin provisioned.
	ThinProvisioned bool `pulumi:"thinProvisioned"`
	// The disk number on the storage bus.
	UnitNumber int `pulumi:"unitNumber"`
}

// GetVirtualMachineDiskInput is an input type that accepts GetVirtualMachineDiskArgs and GetVirtualMachineDiskOutput values.
// You can construct a concrete instance of `GetVirtualMachineDiskInput` via:
//
//	GetVirtualMachineDiskArgs{...}
type GetVirtualMachineDiskInput interface {
	pulumi.Input

	ToGetVirtualMachineDiskOutput() GetVirtualMachineDiskOutput
	ToGetVirtualMachineDiskOutputWithContext(context.Context) GetVirtualMachineDiskOutput
}

type GetVirtualMachineDiskArgs struct {
	// Set to `true` if the disk has been eager zeroed.
	EagerlyScrub pulumi.BoolInput `pulumi:"eagerlyScrub"`
	// The label for the disk.
	Label pulumi.StringInput `pulumi:"label"`
	// The size of the disk, in GIB.
	Size pulumi.IntInput `pulumi:"size"`
	// Set to `true` if the disk has been thin provisioned.
	ThinProvisioned pulumi.BoolInput `pulumi:"thinProvisioned"`
	// The disk number on the storage bus.
	UnitNumber pulumi.IntInput `pulumi:"unitNumber"`
}

func (GetVirtualMachineDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachineDisk)(nil)).Elem()
}

func (i GetVirtualMachineDiskArgs) ToGetVirtualMachineDiskOutput() GetVirtualMachineDiskOutput {
	return i.ToGetVirtualMachineDiskOutputWithContext(context.Background())
}

func (i GetVirtualMachineDiskArgs) ToGetVirtualMachineDiskOutputWithContext(ctx context.Context) GetVirtualMachineDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineDiskOutput)
}

// GetVirtualMachineDiskArrayInput is an input type that accepts GetVirtualMachineDiskArray and GetVirtualMachineDiskArrayOutput values.
// You can construct a concrete instance of `GetVirtualMachineDiskArrayInput` via:
//
//	GetVirtualMachineDiskArray{ GetVirtualMachineDiskArgs{...} }
type GetVirtualMachineDiskArrayInput interface {
	pulumi.Input

	ToGetVirtualMachineDiskArrayOutput() GetVirtualMachineDiskArrayOutput
	ToGetVirtualMachineDiskArrayOutputWithContext(context.Context) GetVirtualMachineDiskArrayOutput
}

type GetVirtualMachineDiskArray []GetVirtualMachineDiskInput

func (GetVirtualMachineDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachineDisk)(nil)).Elem()
}

func (i GetVirtualMachineDiskArray) ToGetVirtualMachineDiskArrayOutput() GetVirtualMachineDiskArrayOutput {
	return i.ToGetVirtualMachineDiskArrayOutputWithContext(context.Background())
}

func (i GetVirtualMachineDiskArray) ToGetVirtualMachineDiskArrayOutputWithContext(ctx context.Context) GetVirtualMachineDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineDiskArrayOutput)
}

type GetVirtualMachineDiskOutput struct{ *pulumi.OutputState }

func (GetVirtualMachineDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachineDisk)(nil)).Elem()
}

func (o GetVirtualMachineDiskOutput) ToGetVirtualMachineDiskOutput() GetVirtualMachineDiskOutput {
	return o
}

func (o GetVirtualMachineDiskOutput) ToGetVirtualMachineDiskOutputWithContext(ctx context.Context) GetVirtualMachineDiskOutput {
	return o
}

// Set to `true` if the disk has been eager zeroed.
func (o GetVirtualMachineDiskOutput) EagerlyScrub() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVirtualMachineDisk) bool { return v.EagerlyScrub }).(pulumi.BoolOutput)
}

// The label for the disk.
func (o GetVirtualMachineDiskOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachineDisk) string { return v.Label }).(pulumi.StringOutput)
}

// The size of the disk, in GIB.
func (o GetVirtualMachineDiskOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachineDisk) int { return v.Size }).(pulumi.IntOutput)
}

// Set to `true` if the disk has been thin provisioned.
func (o GetVirtualMachineDiskOutput) ThinProvisioned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVirtualMachineDisk) bool { return v.ThinProvisioned }).(pulumi.BoolOutput)
}

// The disk number on the storage bus.
func (o GetVirtualMachineDiskOutput) UnitNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachineDisk) int { return v.UnitNumber }).(pulumi.IntOutput)
}

type GetVirtualMachineDiskArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualMachineDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachineDisk)(nil)).Elem()
}

func (o GetVirtualMachineDiskArrayOutput) ToGetVirtualMachineDiskArrayOutput() GetVirtualMachineDiskArrayOutput {
	return o
}

func (o GetVirtualMachineDiskArrayOutput) ToGetVirtualMachineDiskArrayOutputWithContext(ctx context.Context) GetVirtualMachineDiskArrayOutput {
	return o
}

func (o GetVirtualMachineDiskArrayOutput) Index(i pulumi.IntInput) GetVirtualMachineDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualMachineDisk {
		return vs[0].([]GetVirtualMachineDisk)[vs[1].(int)]
	}).(GetVirtualMachineDiskOutput)
}

type GetVirtualMachineNetworkInterface struct {
	// The network interface types for each network interface found
	// on the virtual machine, in device bus order. Will be one of `e1000`,
	// `e1000e`, `vmxnet3vrdma`, or `vmxnet3`.
	AdapterType string `pulumi:"adapterType"`
	// The upper bandwidth limit of this network interface,
	// in Mbits/sec.
	BandwidthLimit *int `pulumi:"bandwidthLimit"`
	// The bandwidth reservation of this network
	// interface, in Mbits/sec.
	BandwidthReservation *int `pulumi:"bandwidthReservation"`
	// The share count for this network interface when the
	// share level is custom.
	BandwidthShareCount int `pulumi:"bandwidthShareCount"`
	// The bandwidth share allocation level for this
	// interface. Can be one of `low`, `normal`, `high`, or `custom`.
	BandwidthShareLevel *string `pulumi:"bandwidthShareLevel"`
	// The MAC address of this network interface.
	MacAddress string `pulumi:"macAddress"`
	// The managed object reference ID of the network this interface
	// is connected to.
	NetworkId string `pulumi:"networkId"`
	// The ID of the Physical SR-IOV NIC to attach to, e.g. '0000:d8:00.0'
	PhysicalFunction string `pulumi:"physicalFunction"`
}

// GetVirtualMachineNetworkInterfaceInput is an input type that accepts GetVirtualMachineNetworkInterfaceArgs and GetVirtualMachineNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetVirtualMachineNetworkInterfaceInput` via:
//
//	GetVirtualMachineNetworkInterfaceArgs{...}
type GetVirtualMachineNetworkInterfaceInput interface {
	pulumi.Input

	ToGetVirtualMachineNetworkInterfaceOutput() GetVirtualMachineNetworkInterfaceOutput
	ToGetVirtualMachineNetworkInterfaceOutputWithContext(context.Context) GetVirtualMachineNetworkInterfaceOutput
}

type GetVirtualMachineNetworkInterfaceArgs struct {
	// The network interface types for each network interface found
	// on the virtual machine, in device bus order. Will be one of `e1000`,
	// `e1000e`, `vmxnet3vrdma`, or `vmxnet3`.
	AdapterType pulumi.StringInput `pulumi:"adapterType"`
	// The upper bandwidth limit of this network interface,
	// in Mbits/sec.
	BandwidthLimit pulumi.IntPtrInput `pulumi:"bandwidthLimit"`
	// The bandwidth reservation of this network
	// interface, in Mbits/sec.
	BandwidthReservation pulumi.IntPtrInput `pulumi:"bandwidthReservation"`
	// The share count for this network interface when the
	// share level is custom.
	BandwidthShareCount pulumi.IntInput `pulumi:"bandwidthShareCount"`
	// The bandwidth share allocation level for this
	// interface. Can be one of `low`, `normal`, `high`, or `custom`.
	BandwidthShareLevel pulumi.StringPtrInput `pulumi:"bandwidthShareLevel"`
	// The MAC address of this network interface.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The managed object reference ID of the network this interface
	// is connected to.
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// The ID of the Physical SR-IOV NIC to attach to, e.g. '0000:d8:00.0'
	PhysicalFunction pulumi.StringInput `pulumi:"physicalFunction"`
}

func (GetVirtualMachineNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachineNetworkInterface)(nil)).Elem()
}

func (i GetVirtualMachineNetworkInterfaceArgs) ToGetVirtualMachineNetworkInterfaceOutput() GetVirtualMachineNetworkInterfaceOutput {
	return i.ToGetVirtualMachineNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetVirtualMachineNetworkInterfaceArgs) ToGetVirtualMachineNetworkInterfaceOutputWithContext(ctx context.Context) GetVirtualMachineNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineNetworkInterfaceOutput)
}

// GetVirtualMachineNetworkInterfaceArrayInput is an input type that accepts GetVirtualMachineNetworkInterfaceArray and GetVirtualMachineNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetVirtualMachineNetworkInterfaceArrayInput` via:
//
//	GetVirtualMachineNetworkInterfaceArray{ GetVirtualMachineNetworkInterfaceArgs{...} }
type GetVirtualMachineNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetVirtualMachineNetworkInterfaceArrayOutput() GetVirtualMachineNetworkInterfaceArrayOutput
	ToGetVirtualMachineNetworkInterfaceArrayOutputWithContext(context.Context) GetVirtualMachineNetworkInterfaceArrayOutput
}

type GetVirtualMachineNetworkInterfaceArray []GetVirtualMachineNetworkInterfaceInput

func (GetVirtualMachineNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachineNetworkInterface)(nil)).Elem()
}

func (i GetVirtualMachineNetworkInterfaceArray) ToGetVirtualMachineNetworkInterfaceArrayOutput() GetVirtualMachineNetworkInterfaceArrayOutput {
	return i.ToGetVirtualMachineNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetVirtualMachineNetworkInterfaceArray) ToGetVirtualMachineNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetVirtualMachineNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineNetworkInterfaceArrayOutput)
}

type GetVirtualMachineNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetVirtualMachineNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachineNetworkInterface)(nil)).Elem()
}

func (o GetVirtualMachineNetworkInterfaceOutput) ToGetVirtualMachineNetworkInterfaceOutput() GetVirtualMachineNetworkInterfaceOutput {
	return o
}

func (o GetVirtualMachineNetworkInterfaceOutput) ToGetVirtualMachineNetworkInterfaceOutputWithContext(ctx context.Context) GetVirtualMachineNetworkInterfaceOutput {
	return o
}

// The network interface types for each network interface found
// on the virtual machine, in device bus order. Will be one of `e1000`,
// `e1000e`, `vmxnet3vrdma`, or `vmxnet3`.
func (o GetVirtualMachineNetworkInterfaceOutput) AdapterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachineNetworkInterface) string { return v.AdapterType }).(pulumi.StringOutput)
}

// The upper bandwidth limit of this network interface,
// in Mbits/sec.
func (o GetVirtualMachineNetworkInterfaceOutput) BandwidthLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetVirtualMachineNetworkInterface) *int { return v.BandwidthLimit }).(pulumi.IntPtrOutput)
}

// The bandwidth reservation of this network
// interface, in Mbits/sec.
func (o GetVirtualMachineNetworkInterfaceOutput) BandwidthReservation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetVirtualMachineNetworkInterface) *int { return v.BandwidthReservation }).(pulumi.IntPtrOutput)
}

// The share count for this network interface when the
// share level is custom.
func (o GetVirtualMachineNetworkInterfaceOutput) BandwidthShareCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualMachineNetworkInterface) int { return v.BandwidthShareCount }).(pulumi.IntOutput)
}

// The bandwidth share allocation level for this
// interface. Can be one of `low`, `normal`, `high`, or `custom`.
func (o GetVirtualMachineNetworkInterfaceOutput) BandwidthShareLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualMachineNetworkInterface) *string { return v.BandwidthShareLevel }).(pulumi.StringPtrOutput)
}

// The MAC address of this network interface.
func (o GetVirtualMachineNetworkInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachineNetworkInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The managed object reference ID of the network this interface
// is connected to.
func (o GetVirtualMachineNetworkInterfaceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachineNetworkInterface) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The ID of the Physical SR-IOV NIC to attach to, e.g. '0000:d8:00.0'
func (o GetVirtualMachineNetworkInterfaceOutput) PhysicalFunction() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualMachineNetworkInterface) string { return v.PhysicalFunction }).(pulumi.StringOutput)
}

type GetVirtualMachineNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetVirtualMachineNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVirtualMachineNetworkInterface)(nil)).Elem()
}

func (o GetVirtualMachineNetworkInterfaceArrayOutput) ToGetVirtualMachineNetworkInterfaceArrayOutput() GetVirtualMachineNetworkInterfaceArrayOutput {
	return o
}

func (o GetVirtualMachineNetworkInterfaceArrayOutput) ToGetVirtualMachineNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetVirtualMachineNetworkInterfaceArrayOutput {
	return o
}

func (o GetVirtualMachineNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetVirtualMachineNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVirtualMachineNetworkInterface {
		return vs[0].([]GetVirtualMachineNetworkInterface)[vs[1].(int)]
	}).(GetVirtualMachineNetworkInterfaceOutput)
}

type GetVirtualMachineVapp struct {
	// A map of customizable vApp properties and their values. Allows customization of VMs cloned from OVF templates which have customizable vApp properties.
	Properties map[string]string `pulumi:"properties"`
}

// GetVirtualMachineVappInput is an input type that accepts GetVirtualMachineVappArgs and GetVirtualMachineVappOutput values.
// You can construct a concrete instance of `GetVirtualMachineVappInput` via:
//
//	GetVirtualMachineVappArgs{...}
type GetVirtualMachineVappInput interface {
	pulumi.Input

	ToGetVirtualMachineVappOutput() GetVirtualMachineVappOutput
	ToGetVirtualMachineVappOutputWithContext(context.Context) GetVirtualMachineVappOutput
}

type GetVirtualMachineVappArgs struct {
	// A map of customizable vApp properties and their values. Allows customization of VMs cloned from OVF templates which have customizable vApp properties.
	Properties pulumi.StringMapInput `pulumi:"properties"`
}

func (GetVirtualMachineVappArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachineVapp)(nil)).Elem()
}

func (i GetVirtualMachineVappArgs) ToGetVirtualMachineVappOutput() GetVirtualMachineVappOutput {
	return i.ToGetVirtualMachineVappOutputWithContext(context.Background())
}

func (i GetVirtualMachineVappArgs) ToGetVirtualMachineVappOutputWithContext(ctx context.Context) GetVirtualMachineVappOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineVappOutput)
}

func (i GetVirtualMachineVappArgs) ToGetVirtualMachineVappPtrOutput() GetVirtualMachineVappPtrOutput {
	return i.ToGetVirtualMachineVappPtrOutputWithContext(context.Background())
}

func (i GetVirtualMachineVappArgs) ToGetVirtualMachineVappPtrOutputWithContext(ctx context.Context) GetVirtualMachineVappPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineVappOutput).ToGetVirtualMachineVappPtrOutputWithContext(ctx)
}

// GetVirtualMachineVappPtrInput is an input type that accepts GetVirtualMachineVappArgs, GetVirtualMachineVappPtr and GetVirtualMachineVappPtrOutput values.
// You can construct a concrete instance of `GetVirtualMachineVappPtrInput` via:
//
//	        GetVirtualMachineVappArgs{...}
//
//	or:
//
//	        nil
type GetVirtualMachineVappPtrInput interface {
	pulumi.Input

	ToGetVirtualMachineVappPtrOutput() GetVirtualMachineVappPtrOutput
	ToGetVirtualMachineVappPtrOutputWithContext(context.Context) GetVirtualMachineVappPtrOutput
}

type getVirtualMachineVappPtrType GetVirtualMachineVappArgs

func GetVirtualMachineVappPtr(v *GetVirtualMachineVappArgs) GetVirtualMachineVappPtrInput {
	return (*getVirtualMachineVappPtrType)(v)
}

func (*getVirtualMachineVappPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetVirtualMachineVapp)(nil)).Elem()
}

func (i *getVirtualMachineVappPtrType) ToGetVirtualMachineVappPtrOutput() GetVirtualMachineVappPtrOutput {
	return i.ToGetVirtualMachineVappPtrOutputWithContext(context.Background())
}

func (i *getVirtualMachineVappPtrType) ToGetVirtualMachineVappPtrOutputWithContext(ctx context.Context) GetVirtualMachineVappPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualMachineVappPtrOutput)
}

type GetVirtualMachineVappOutput struct{ *pulumi.OutputState }

func (GetVirtualMachineVappOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualMachineVapp)(nil)).Elem()
}

func (o GetVirtualMachineVappOutput) ToGetVirtualMachineVappOutput() GetVirtualMachineVappOutput {
	return o
}

func (o GetVirtualMachineVappOutput) ToGetVirtualMachineVappOutputWithContext(ctx context.Context) GetVirtualMachineVappOutput {
	return o
}

func (o GetVirtualMachineVappOutput) ToGetVirtualMachineVappPtrOutput() GetVirtualMachineVappPtrOutput {
	return o.ToGetVirtualMachineVappPtrOutputWithContext(context.Background())
}

func (o GetVirtualMachineVappOutput) ToGetVirtualMachineVappPtrOutputWithContext(ctx context.Context) GetVirtualMachineVappPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetVirtualMachineVapp) *GetVirtualMachineVapp {
		return &v
	}).(GetVirtualMachineVappPtrOutput)
}

// A map of customizable vApp properties and their values. Allows customization of VMs cloned from OVF templates which have customizable vApp properties.
func (o GetVirtualMachineVappOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetVirtualMachineVapp) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

type GetVirtualMachineVappPtrOutput struct{ *pulumi.OutputState }

func (GetVirtualMachineVappPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetVirtualMachineVapp)(nil)).Elem()
}

func (o GetVirtualMachineVappPtrOutput) ToGetVirtualMachineVappPtrOutput() GetVirtualMachineVappPtrOutput {
	return o
}

func (o GetVirtualMachineVappPtrOutput) ToGetVirtualMachineVappPtrOutputWithContext(ctx context.Context) GetVirtualMachineVappPtrOutput {
	return o
}

func (o GetVirtualMachineVappPtrOutput) Elem() GetVirtualMachineVappOutput {
	return o.ApplyT(func(v *GetVirtualMachineVapp) GetVirtualMachineVapp {
		if v != nil {
			return *v
		}
		var ret GetVirtualMachineVapp
		return ret
	}).(GetVirtualMachineVappOutput)
}

// A map of customizable vApp properties and their values. Allows customization of VMs cloned from OVF templates which have customizable vApp properties.
func (o GetVirtualMachineVappPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetVirtualMachineVapp) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterHostImageInput)(nil)).Elem(), ComputeClusterHostImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterHostImagePtrInput)(nil)).Elem(), ComputeClusterHostImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterHostImageComponentInput)(nil)).Elem(), ComputeClusterHostImageComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterHostImageComponentArrayInput)(nil)).Elem(), ComputeClusterHostImageComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterVsanDiskGroupInput)(nil)).Elem(), ComputeClusterVsanDiskGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterVsanDiskGroupArrayInput)(nil)).Elem(), ComputeClusterVsanDiskGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterVsanFaultDomainInput)(nil)).Elem(), ComputeClusterVsanFaultDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterVsanFaultDomainArrayInput)(nil)).Elem(), ComputeClusterVsanFaultDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterVsanFaultDomainFaultDomainInput)(nil)).Elem(), ComputeClusterVsanFaultDomainFaultDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterVsanFaultDomainFaultDomainArrayInput)(nil)).Elem(), ComputeClusterVsanFaultDomainFaultDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterVsanStretchedClusterInput)(nil)).Elem(), ComputeClusterVsanStretchedClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeClusterVsanStretchedClusterPtrInput)(nil)).Elem(), ComputeClusterVsanStretchedClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentLibraryPublicationInput)(nil)).Elem(), ContentLibraryPublicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentLibraryPublicationPtrInput)(nil)).Elem(), ContentLibraryPublicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentLibrarySubscriptionInput)(nil)).Elem(), ContentLibrarySubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentLibrarySubscriptionPtrInput)(nil)).Elem(), ContentLibrarySubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedPortGroupVlanRangeInput)(nil)).Elem(), DistributedPortGroupVlanRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedPortGroupVlanRangeArrayInput)(nil)).Elem(), DistributedPortGroupVlanRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchHostInput)(nil)).Elem(), DistributedVirtualSwitchHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchHostArrayInput)(nil)).Elem(), DistributedVirtualSwitchHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchPvlanMappingInput)(nil)).Elem(), DistributedVirtualSwitchPvlanMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchPvlanMappingArrayInput)(nil)).Elem(), DistributedVirtualSwitchPvlanMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchVlanRangeInput)(nil)).Elem(), DistributedVirtualSwitchVlanRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributedVirtualSwitchVlanRangeArrayInput)(nil)).Elem(), DistributedVirtualSwitchVlanRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityPermissionsPermissionInput)(nil)).Elem(), EntityPermissionsPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityPermissionsPermissionArrayInput)(nil)).Elem(), EntityPermissionsPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsCustomizationSpecInput)(nil)).Elem(), GuestOsCustomizationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsCustomizationSpecPtrInput)(nil)).Elem(), GuestOsCustomizationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsCustomizationSpecLinuxOptionsInput)(nil)).Elem(), GuestOsCustomizationSpecLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsCustomizationSpecLinuxOptionsPtrInput)(nil)).Elem(), GuestOsCustomizationSpecLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsCustomizationSpecNetworkInterfaceInput)(nil)).Elem(), GuestOsCustomizationSpecNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsCustomizationSpecNetworkInterfaceArrayInput)(nil)).Elem(), GuestOsCustomizationSpecNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsCustomizationSpecWindowsOptionsInput)(nil)).Elem(), GuestOsCustomizationSpecWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuestOsCustomizationSpecWindowsOptionsPtrInput)(nil)).Elem(), GuestOsCustomizationSpecWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostPortGroupPortInput)(nil)).Elem(), HostPortGroupPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostPortGroupPortArrayInput)(nil)).Elem(), HostPortGroupPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OfflineSoftwareDepotComponentInput)(nil)).Elem(), OfflineSoftwareDepotComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OfflineSoftwareDepotComponentArrayInput)(nil)).Elem(), OfflineSoftwareDepotComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorEgressCidrInput)(nil)).Elem(), SupervisorEgressCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorEgressCidrArrayInput)(nil)).Elem(), SupervisorEgressCidrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorIngressCidrInput)(nil)).Elem(), SupervisorIngressCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorIngressCidrArrayInput)(nil)).Elem(), SupervisorIngressCidrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorManagementNetworkInput)(nil)).Elem(), SupervisorManagementNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorManagementNetworkPtrInput)(nil)).Elem(), SupervisorManagementNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorNamespaceInput)(nil)).Elem(), SupervisorNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorNamespaceArrayInput)(nil)).Elem(), SupervisorNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorPodCidrInput)(nil)).Elem(), SupervisorPodCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorPodCidrArrayInput)(nil)).Elem(), SupervisorPodCidrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorServiceCidrInput)(nil)).Elem(), SupervisorServiceCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SupervisorServiceCidrPtrInput)(nil)).Elem(), SupervisorServiceCidrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCdromInput)(nil)).Elem(), VirtualMachineCdromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCdromArrayInput)(nil)).Elem(), VirtualMachineCdromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneInput)(nil)).Elem(), VirtualMachineCloneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineClonePtrInput)(nil)).Elem(), VirtualMachineCloneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizationSpecInput)(nil)).Elem(), VirtualMachineCloneCustomizationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizationSpecPtrInput)(nil)).Elem(), VirtualMachineCloneCustomizationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizeInput)(nil)).Elem(), VirtualMachineCloneCustomizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizePtrInput)(nil)).Elem(), VirtualMachineCloneCustomizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizeLinuxOptionsInput)(nil)).Elem(), VirtualMachineCloneCustomizeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizeLinuxOptionsPtrInput)(nil)).Elem(), VirtualMachineCloneCustomizeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizeNetworkInterfaceInput)(nil)).Elem(), VirtualMachineCloneCustomizeNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizeNetworkInterfaceArrayInput)(nil)).Elem(), VirtualMachineCloneCustomizeNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizeWindowsOptionsInput)(nil)).Elem(), VirtualMachineCloneCustomizeWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineCloneCustomizeWindowsOptionsPtrInput)(nil)).Elem(), VirtualMachineCloneCustomizeWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineDiskInput)(nil)).Elem(), VirtualMachineDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineDiskArrayInput)(nil)).Elem(), VirtualMachineDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineNetworkInterfaceInput)(nil)).Elem(), VirtualMachineNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineNetworkInterfaceArrayInput)(nil)).Elem(), VirtualMachineNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineOvfDeployInput)(nil)).Elem(), VirtualMachineOvfDeployArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineOvfDeployPtrInput)(nil)).Elem(), VirtualMachineOvfDeployArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineVappInput)(nil)).Elem(), VirtualMachineVappArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineVappPtrInput)(nil)).Elem(), VirtualMachineVappArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmStoragePolicyTagRuleInput)(nil)).Elem(), VmStoragePolicyTagRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmStoragePolicyTagRuleArrayInput)(nil)).Elem(), VmStoragePolicyTagRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VnicIpv4Input)(nil)).Elem(), VnicIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VnicIpv4PtrInput)(nil)).Elem(), VnicIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VnicIpv6Input)(nil)).Elem(), VnicIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*VnicIpv6PtrInput)(nil)).Elem(), VnicIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuestOsCustomizationSpecInput)(nil)).Elem(), GetGuestOsCustomizationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuestOsCustomizationSpecArrayInput)(nil)).Elem(), GetGuestOsCustomizationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuestOsCustomizationSpecLinuxOptionInput)(nil)).Elem(), GetGuestOsCustomizationSpecLinuxOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuestOsCustomizationSpecLinuxOptionArrayInput)(nil)).Elem(), GetGuestOsCustomizationSpecLinuxOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuestOsCustomizationSpecNetworkInterfaceInput)(nil)).Elem(), GetGuestOsCustomizationSpecNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuestOsCustomizationSpecNetworkInterfaceArrayInput)(nil)).Elem(), GetGuestOsCustomizationSpecNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuestOsCustomizationSpecWindowsOptionInput)(nil)).Elem(), GetGuestOsCustomizationSpecWindowsOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGuestOsCustomizationSpecWindowsOptionArrayInput)(nil)).Elem(), GetGuestOsCustomizationSpecWindowsOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostVgpuProfileVgpuProfileInput)(nil)).Elem(), GetHostVgpuProfileVgpuProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostVgpuProfileVgpuProfileArrayInput)(nil)).Elem(), GetHostVgpuProfileVgpuProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachineDiskInput)(nil)).Elem(), GetVirtualMachineDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachineDiskArrayInput)(nil)).Elem(), GetVirtualMachineDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachineNetworkInterfaceInput)(nil)).Elem(), GetVirtualMachineNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachineNetworkInterfaceArrayInput)(nil)).Elem(), GetVirtualMachineNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachineVappInput)(nil)).Elem(), GetVirtualMachineVappArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVirtualMachineVappPtrInput)(nil)).Elem(), GetVirtualMachineVappArgs{})
	pulumi.RegisterOutputType(ComputeClusterHostImageOutput{})
	pulumi.RegisterOutputType(ComputeClusterHostImagePtrOutput{})
	pulumi.RegisterOutputType(ComputeClusterHostImageComponentOutput{})
	pulumi.RegisterOutputType(ComputeClusterHostImageComponentArrayOutput{})
	pulumi.RegisterOutputType(ComputeClusterVsanDiskGroupOutput{})
	pulumi.RegisterOutputType(ComputeClusterVsanDiskGroupArrayOutput{})
	pulumi.RegisterOutputType(ComputeClusterVsanFaultDomainOutput{})
	pulumi.RegisterOutputType(ComputeClusterVsanFaultDomainArrayOutput{})
	pulumi.RegisterOutputType(ComputeClusterVsanFaultDomainFaultDomainOutput{})
	pulumi.RegisterOutputType(ComputeClusterVsanFaultDomainFaultDomainArrayOutput{})
	pulumi.RegisterOutputType(ComputeClusterVsanStretchedClusterOutput{})
	pulumi.RegisterOutputType(ComputeClusterVsanStretchedClusterPtrOutput{})
	pulumi.RegisterOutputType(ContentLibraryPublicationOutput{})
	pulumi.RegisterOutputType(ContentLibraryPublicationPtrOutput{})
	pulumi.RegisterOutputType(ContentLibrarySubscriptionOutput{})
	pulumi.RegisterOutputType(ContentLibrarySubscriptionPtrOutput{})
	pulumi.RegisterOutputType(DistributedPortGroupVlanRangeOutput{})
	pulumi.RegisterOutputType(DistributedPortGroupVlanRangeArrayOutput{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchHostOutput{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchHostArrayOutput{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchPvlanMappingOutput{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchPvlanMappingArrayOutput{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchVlanRangeOutput{})
	pulumi.RegisterOutputType(DistributedVirtualSwitchVlanRangeArrayOutput{})
	pulumi.RegisterOutputType(EntityPermissionsPermissionOutput{})
	pulumi.RegisterOutputType(EntityPermissionsPermissionArrayOutput{})
	pulumi.RegisterOutputType(GuestOsCustomizationSpecOutput{})
	pulumi.RegisterOutputType(GuestOsCustomizationSpecPtrOutput{})
	pulumi.RegisterOutputType(GuestOsCustomizationSpecLinuxOptionsOutput{})
	pulumi.RegisterOutputType(GuestOsCustomizationSpecLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(GuestOsCustomizationSpecNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GuestOsCustomizationSpecNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GuestOsCustomizationSpecWindowsOptionsOutput{})
	pulumi.RegisterOutputType(GuestOsCustomizationSpecWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(HostPortGroupPortOutput{})
	pulumi.RegisterOutputType(HostPortGroupPortArrayOutput{})
	pulumi.RegisterOutputType(OfflineSoftwareDepotComponentOutput{})
	pulumi.RegisterOutputType(OfflineSoftwareDepotComponentArrayOutput{})
	pulumi.RegisterOutputType(SupervisorEgressCidrOutput{})
	pulumi.RegisterOutputType(SupervisorEgressCidrArrayOutput{})
	pulumi.RegisterOutputType(SupervisorIngressCidrOutput{})
	pulumi.RegisterOutputType(SupervisorIngressCidrArrayOutput{})
	pulumi.RegisterOutputType(SupervisorManagementNetworkOutput{})
	pulumi.RegisterOutputType(SupervisorManagementNetworkPtrOutput{})
	pulumi.RegisterOutputType(SupervisorNamespaceOutput{})
	pulumi.RegisterOutputType(SupervisorNamespaceArrayOutput{})
	pulumi.RegisterOutputType(SupervisorPodCidrOutput{})
	pulumi.RegisterOutputType(SupervisorPodCidrArrayOutput{})
	pulumi.RegisterOutputType(SupervisorServiceCidrOutput{})
	pulumi.RegisterOutputType(SupervisorServiceCidrPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineCdromOutput{})
	pulumi.RegisterOutputType(VirtualMachineCdromArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneOutput{})
	pulumi.RegisterOutputType(VirtualMachineClonePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizationSpecOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizationSpecPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizeOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizePtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizeNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizeNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizeWindowsOptionsOutput{})
	pulumi.RegisterOutputType(VirtualMachineCloneCustomizeWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineDiskOutput{})
	pulumi.RegisterOutputType(VirtualMachineDiskArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(VirtualMachineNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineOvfDeployOutput{})
	pulumi.RegisterOutputType(VirtualMachineOvfDeployPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineVappOutput{})
	pulumi.RegisterOutputType(VirtualMachineVappPtrOutput{})
	pulumi.RegisterOutputType(VmStoragePolicyTagRuleOutput{})
	pulumi.RegisterOutputType(VmStoragePolicyTagRuleArrayOutput{})
	pulumi.RegisterOutputType(VnicIpv4Output{})
	pulumi.RegisterOutputType(VnicIpv4PtrOutput{})
	pulumi.RegisterOutputType(VnicIpv6Output{})
	pulumi.RegisterOutputType(VnicIpv6PtrOutput{})
	pulumi.RegisterOutputType(GetGuestOsCustomizationSpecOutput{})
	pulumi.RegisterOutputType(GetGuestOsCustomizationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetGuestOsCustomizationSpecLinuxOptionOutput{})
	pulumi.RegisterOutputType(GetGuestOsCustomizationSpecLinuxOptionArrayOutput{})
	pulumi.RegisterOutputType(GetGuestOsCustomizationSpecNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetGuestOsCustomizationSpecNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetGuestOsCustomizationSpecWindowsOptionOutput{})
	pulumi.RegisterOutputType(GetGuestOsCustomizationSpecWindowsOptionArrayOutput{})
	pulumi.RegisterOutputType(GetHostVgpuProfileVgpuProfileOutput{})
	pulumi.RegisterOutputType(GetHostVgpuProfileVgpuProfileArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualMachineDiskOutput{})
	pulumi.RegisterOutputType(GetVirtualMachineDiskArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualMachineNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetVirtualMachineNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetVirtualMachineVappOutput{})
	pulumi.RegisterOutputType(GetVirtualMachineVappPtrOutput{})
}
