// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The `vsphere_custom_attribute` resource can be used to create and manage custom
// attributes, which allow users to associate user-specific meta-information with 
// vSphere managed objects. Custom attribute values must be strings and are stored 
// on the vCenter Server and not the managed object.
// 
// For more information about custom attributes, click [here][ext-custom-attributes].
// 
// [ext-custom-attributes]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcenterhost.doc/GUID-73606C4C-763C-4E27-A1DA-032E4C46219D.html
// 
// ~> **NOTE:** Custom attributes are unsupported on direct ESXi connections 
// and require vCenter.
type CustomAttribute struct {
	s *pulumi.ResourceState
}

// NewCustomAttribute registers a new resource with the given unique name, arguments, and options.
func NewCustomAttribute(ctx *pulumi.Context,
	name string, args *CustomAttributeArgs, opts ...pulumi.ResourceOpt) (*CustomAttribute, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["managedObjectType"] = nil
		inputs["name"] = nil
	} else {
		inputs["managedObjectType"] = args.ManagedObjectType
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("vsphere:index/customAttribute:CustomAttribute", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CustomAttribute{s: s}, nil
}

// GetCustomAttribute gets an existing CustomAttribute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomAttribute(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CustomAttributeState, opts ...pulumi.ResourceOpt) (*CustomAttribute, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["managedObjectType"] = state.ManagedObjectType
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("vsphere:index/customAttribute:CustomAttribute", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CustomAttribute{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *CustomAttribute) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *CustomAttribute) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The object type that this attribute may be
// applied to. If not set, the custom attribute may be applied to any object
// type. For a full list, click here. Forces a new
// resource if changed.
func (r *CustomAttribute) ManagedObjectType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["managedObjectType"])
}

// The name of the custom attribute.
func (r *CustomAttribute) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering CustomAttribute resources.
type CustomAttributeState struct {
	// The object type that this attribute may be
	// applied to. If not set, the custom attribute may be applied to any object
	// type. For a full list, click here. Forces a new
	// resource if changed.
	ManagedObjectType interface{}
	// The name of the custom attribute.
	Name interface{}
}

// The set of arguments for constructing a CustomAttribute resource.
type CustomAttributeArgs struct {
	// The object type that this attribute may be
	// applied to. If not set, the custom attribute may be applied to any object
	// type. For a full list, click here. Forces a new
	// resource if changed.
	ManagedObjectType interface{}
	// The name of the custom attribute.
	Name interface{}
}
