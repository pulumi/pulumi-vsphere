// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vsphere/sdk/v4/go/vsphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The `Role` data source can be used to discover the `id` and privileges associated
// with a role given its name or display label.
func LookupRole(ctx *pulumi.Context, args *LookupRoleArgs, opts ...pulumi.InvokeOption) (*LookupRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRoleResult
	err := ctx.Invoke("vsphere:index/getRole:getRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRole.
type LookupRoleArgs struct {
	// The description of the role.
	Description *string `pulumi:"description"`
	// The label of the role.
	Label string  `pulumi:"label"`
	Name  *string `pulumi:"name"`
	// The privileges associated with the role.
	RolePrivileges []string `pulumi:"rolePrivileges"`
}

// A collection of values returned by getRole.
type LookupRoleResult struct {
	// The description of the role.
	Description *string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The display label of the role.
	Label string  `pulumi:"label"`
	Name  *string `pulumi:"name"`
	// The privileges associated with the role.
	RolePrivileges []string `pulumi:"rolePrivileges"`
}

func LookupRoleOutput(ctx *pulumi.Context, args LookupRoleOutputArgs, opts ...pulumi.InvokeOption) LookupRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRoleResult, error) {
			args := v.(LookupRoleArgs)
			r, err := LookupRole(ctx, &args, opts...)
			var s LookupRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRoleResultOutput)
}

// A collection of arguments for invoking getRole.
type LookupRoleOutputArgs struct {
	// The description of the role.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The label of the role.
	Label pulumi.StringInput    `pulumi:"label"`
	Name  pulumi.StringPtrInput `pulumi:"name"`
	// The privileges associated with the role.
	RolePrivileges pulumi.StringArrayInput `pulumi:"rolePrivileges"`
}

func (LookupRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleArgs)(nil)).Elem()
}

// A collection of values returned by getRole.
type LookupRoleResultOutput struct{ *pulumi.OutputState }

func (LookupRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleResult)(nil)).Elem()
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutput() LookupRoleResultOutput {
	return o
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutputWithContext(ctx context.Context) LookupRoleResultOutput {
	return o
}

func (o LookupRoleResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRoleResult] {
	return pulumix.Output[LookupRoleResult]{
		OutputState: o.OutputState,
	}
}

// The description of the role.
func (o LookupRoleResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The display label of the role.
func (o LookupRoleResultOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Label }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The privileges associated with the role.
func (o LookupRoleResultOutput) RolePrivileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []string { return v.RolePrivileges }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoleResultOutput{})
}
