// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StorageDrsVmOverride struct {
	pulumi.CustomResourceState

	// The managed object reference
	// ID of the datastore cluster to put the override in.
	// Forces a new resource if changed.
	DatastoreClusterId pulumi.StringOutput `pulumi:"datastoreClusterId"`
	// Overrides any Storage DRS automation
	// levels for this virtual machine. Can be one of `automated` or `manual`. When
	// not specified, the datastore cluster's settings are used according to the
	// specific SDRS subsystem.
	SdrsAutomationLevel pulumi.StringPtrOutput `pulumi:"sdrsAutomationLevel"`
	// Overrides the default Storage DRS setting for
	// this virtual machine. When not specified, the datastore cluster setting is
	// used.
	SdrsEnabled pulumi.StringPtrOutput `pulumi:"sdrsEnabled"`
	// Overrides the intra-VM affinity setting
	// for this virtual machine. When `true`, all disks for this virtual machine
	// will be kept on the same datastore. When `false`, Storage DRS may locate
	// individual disks on different datastores if it helps satisfy cluster
	// requirements. When not specified, the datastore cluster's settings are used.
	SdrsIntraVmAffinity pulumi.StringPtrOutput `pulumi:"sdrsIntraVmAffinity"`
	// The UUID of the virtual machine to create
	// the override for.  Forces a new resource if changed.
	VirtualMachineId pulumi.StringOutput `pulumi:"virtualMachineId"`
}

// NewStorageDrsVmOverride registers a new resource with the given unique name, arguments, and options.
func NewStorageDrsVmOverride(ctx *pulumi.Context,
	name string, args *StorageDrsVmOverrideArgs, opts ...pulumi.ResourceOption) (*StorageDrsVmOverride, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatastoreClusterId == nil {
		return nil, errors.New("invalid value for required argument 'DatastoreClusterId'")
	}
	if args.VirtualMachineId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMachineId'")
	}
	var resource StorageDrsVmOverride
	err := ctx.RegisterResource("vsphere:index/storageDrsVmOverride:StorageDrsVmOverride", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageDrsVmOverride gets an existing StorageDrsVmOverride resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageDrsVmOverride(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageDrsVmOverrideState, opts ...pulumi.ResourceOption) (*StorageDrsVmOverride, error) {
	var resource StorageDrsVmOverride
	err := ctx.ReadResource("vsphere:index/storageDrsVmOverride:StorageDrsVmOverride", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageDrsVmOverride resources.
type storageDrsVmOverrideState struct {
	// The managed object reference
	// ID of the datastore cluster to put the override in.
	// Forces a new resource if changed.
	DatastoreClusterId *string `pulumi:"datastoreClusterId"`
	// Overrides any Storage DRS automation
	// levels for this virtual machine. Can be one of `automated` or `manual`. When
	// not specified, the datastore cluster's settings are used according to the
	// specific SDRS subsystem.
	SdrsAutomationLevel *string `pulumi:"sdrsAutomationLevel"`
	// Overrides the default Storage DRS setting for
	// this virtual machine. When not specified, the datastore cluster setting is
	// used.
	SdrsEnabled *string `pulumi:"sdrsEnabled"`
	// Overrides the intra-VM affinity setting
	// for this virtual machine. When `true`, all disks for this virtual machine
	// will be kept on the same datastore. When `false`, Storage DRS may locate
	// individual disks on different datastores if it helps satisfy cluster
	// requirements. When not specified, the datastore cluster's settings are used.
	SdrsIntraVmAffinity *string `pulumi:"sdrsIntraVmAffinity"`
	// The UUID of the virtual machine to create
	// the override for.  Forces a new resource if changed.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

type StorageDrsVmOverrideState struct {
	// The managed object reference
	// ID of the datastore cluster to put the override in.
	// Forces a new resource if changed.
	DatastoreClusterId pulumi.StringPtrInput
	// Overrides any Storage DRS automation
	// levels for this virtual machine. Can be one of `automated` or `manual`. When
	// not specified, the datastore cluster's settings are used according to the
	// specific SDRS subsystem.
	SdrsAutomationLevel pulumi.StringPtrInput
	// Overrides the default Storage DRS setting for
	// this virtual machine. When not specified, the datastore cluster setting is
	// used.
	SdrsEnabled pulumi.StringPtrInput
	// Overrides the intra-VM affinity setting
	// for this virtual machine. When `true`, all disks for this virtual machine
	// will be kept on the same datastore. When `false`, Storage DRS may locate
	// individual disks on different datastores if it helps satisfy cluster
	// requirements. When not specified, the datastore cluster's settings are used.
	SdrsIntraVmAffinity pulumi.StringPtrInput
	// The UUID of the virtual machine to create
	// the override for.  Forces a new resource if changed.
	VirtualMachineId pulumi.StringPtrInput
}

func (StorageDrsVmOverrideState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageDrsVmOverrideState)(nil)).Elem()
}

type storageDrsVmOverrideArgs struct {
	// The managed object reference
	// ID of the datastore cluster to put the override in.
	// Forces a new resource if changed.
	DatastoreClusterId string `pulumi:"datastoreClusterId"`
	// Overrides any Storage DRS automation
	// levels for this virtual machine. Can be one of `automated` or `manual`. When
	// not specified, the datastore cluster's settings are used according to the
	// specific SDRS subsystem.
	SdrsAutomationLevel *string `pulumi:"sdrsAutomationLevel"`
	// Overrides the default Storage DRS setting for
	// this virtual machine. When not specified, the datastore cluster setting is
	// used.
	SdrsEnabled *string `pulumi:"sdrsEnabled"`
	// Overrides the intra-VM affinity setting
	// for this virtual machine. When `true`, all disks for this virtual machine
	// will be kept on the same datastore. When `false`, Storage DRS may locate
	// individual disks on different datastores if it helps satisfy cluster
	// requirements. When not specified, the datastore cluster's settings are used.
	SdrsIntraVmAffinity *string `pulumi:"sdrsIntraVmAffinity"`
	// The UUID of the virtual machine to create
	// the override for.  Forces a new resource if changed.
	VirtualMachineId string `pulumi:"virtualMachineId"`
}

// The set of arguments for constructing a StorageDrsVmOverride resource.
type StorageDrsVmOverrideArgs struct {
	// The managed object reference
	// ID of the datastore cluster to put the override in.
	// Forces a new resource if changed.
	DatastoreClusterId pulumi.StringInput
	// Overrides any Storage DRS automation
	// levels for this virtual machine. Can be one of `automated` or `manual`. When
	// not specified, the datastore cluster's settings are used according to the
	// specific SDRS subsystem.
	SdrsAutomationLevel pulumi.StringPtrInput
	// Overrides the default Storage DRS setting for
	// this virtual machine. When not specified, the datastore cluster setting is
	// used.
	SdrsEnabled pulumi.StringPtrInput
	// Overrides the intra-VM affinity setting
	// for this virtual machine. When `true`, all disks for this virtual machine
	// will be kept on the same datastore. When `false`, Storage DRS may locate
	// individual disks on different datastores if it helps satisfy cluster
	// requirements. When not specified, the datastore cluster's settings are used.
	SdrsIntraVmAffinity pulumi.StringPtrInput
	// The UUID of the virtual machine to create
	// the override for.  Forces a new resource if changed.
	VirtualMachineId pulumi.StringInput
}

func (StorageDrsVmOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageDrsVmOverrideArgs)(nil)).Elem()
}

type StorageDrsVmOverrideInput interface {
	pulumi.Input

	ToStorageDrsVmOverrideOutput() StorageDrsVmOverrideOutput
	ToStorageDrsVmOverrideOutputWithContext(ctx context.Context) StorageDrsVmOverrideOutput
}

func (*StorageDrsVmOverride) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDrsVmOverride)(nil))
}

func (i *StorageDrsVmOverride) ToStorageDrsVmOverrideOutput() StorageDrsVmOverrideOutput {
	return i.ToStorageDrsVmOverrideOutputWithContext(context.Background())
}

func (i *StorageDrsVmOverride) ToStorageDrsVmOverrideOutputWithContext(ctx context.Context) StorageDrsVmOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDrsVmOverrideOutput)
}

func (i *StorageDrsVmOverride) ToStorageDrsVmOverridePtrOutput() StorageDrsVmOverridePtrOutput {
	return i.ToStorageDrsVmOverridePtrOutputWithContext(context.Background())
}

func (i *StorageDrsVmOverride) ToStorageDrsVmOverridePtrOutputWithContext(ctx context.Context) StorageDrsVmOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDrsVmOverridePtrOutput)
}

type StorageDrsVmOverridePtrInput interface {
	pulumi.Input

	ToStorageDrsVmOverridePtrOutput() StorageDrsVmOverridePtrOutput
	ToStorageDrsVmOverridePtrOutputWithContext(ctx context.Context) StorageDrsVmOverridePtrOutput
}

type storageDrsVmOverridePtrType StorageDrsVmOverrideArgs

func (*storageDrsVmOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDrsVmOverride)(nil))
}

func (i *storageDrsVmOverridePtrType) ToStorageDrsVmOverridePtrOutput() StorageDrsVmOverridePtrOutput {
	return i.ToStorageDrsVmOverridePtrOutputWithContext(context.Background())
}

func (i *storageDrsVmOverridePtrType) ToStorageDrsVmOverridePtrOutputWithContext(ctx context.Context) StorageDrsVmOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDrsVmOverridePtrOutput)
}

// StorageDrsVmOverrideArrayInput is an input type that accepts StorageDrsVmOverrideArray and StorageDrsVmOverrideArrayOutput values.
// You can construct a concrete instance of `StorageDrsVmOverrideArrayInput` via:
//
//          StorageDrsVmOverrideArray{ StorageDrsVmOverrideArgs{...} }
type StorageDrsVmOverrideArrayInput interface {
	pulumi.Input

	ToStorageDrsVmOverrideArrayOutput() StorageDrsVmOverrideArrayOutput
	ToStorageDrsVmOverrideArrayOutputWithContext(context.Context) StorageDrsVmOverrideArrayOutput
}

type StorageDrsVmOverrideArray []StorageDrsVmOverrideInput

func (StorageDrsVmOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*StorageDrsVmOverride)(nil))
}

func (i StorageDrsVmOverrideArray) ToStorageDrsVmOverrideArrayOutput() StorageDrsVmOverrideArrayOutput {
	return i.ToStorageDrsVmOverrideArrayOutputWithContext(context.Background())
}

func (i StorageDrsVmOverrideArray) ToStorageDrsVmOverrideArrayOutputWithContext(ctx context.Context) StorageDrsVmOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDrsVmOverrideArrayOutput)
}

// StorageDrsVmOverrideMapInput is an input type that accepts StorageDrsVmOverrideMap and StorageDrsVmOverrideMapOutput values.
// You can construct a concrete instance of `StorageDrsVmOverrideMapInput` via:
//
//          StorageDrsVmOverrideMap{ "key": StorageDrsVmOverrideArgs{...} }
type StorageDrsVmOverrideMapInput interface {
	pulumi.Input

	ToStorageDrsVmOverrideMapOutput() StorageDrsVmOverrideMapOutput
	ToStorageDrsVmOverrideMapOutputWithContext(context.Context) StorageDrsVmOverrideMapOutput
}

type StorageDrsVmOverrideMap map[string]StorageDrsVmOverrideInput

func (StorageDrsVmOverrideMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*StorageDrsVmOverride)(nil))
}

func (i StorageDrsVmOverrideMap) ToStorageDrsVmOverrideMapOutput() StorageDrsVmOverrideMapOutput {
	return i.ToStorageDrsVmOverrideMapOutputWithContext(context.Background())
}

func (i StorageDrsVmOverrideMap) ToStorageDrsVmOverrideMapOutputWithContext(ctx context.Context) StorageDrsVmOverrideMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDrsVmOverrideMapOutput)
}

type StorageDrsVmOverrideOutput struct {
	*pulumi.OutputState
}

func (StorageDrsVmOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageDrsVmOverride)(nil))
}

func (o StorageDrsVmOverrideOutput) ToStorageDrsVmOverrideOutput() StorageDrsVmOverrideOutput {
	return o
}

func (o StorageDrsVmOverrideOutput) ToStorageDrsVmOverrideOutputWithContext(ctx context.Context) StorageDrsVmOverrideOutput {
	return o
}

func (o StorageDrsVmOverrideOutput) ToStorageDrsVmOverridePtrOutput() StorageDrsVmOverridePtrOutput {
	return o.ToStorageDrsVmOverridePtrOutputWithContext(context.Background())
}

func (o StorageDrsVmOverrideOutput) ToStorageDrsVmOverridePtrOutputWithContext(ctx context.Context) StorageDrsVmOverridePtrOutput {
	return o.ApplyT(func(v StorageDrsVmOverride) *StorageDrsVmOverride {
		return &v
	}).(StorageDrsVmOverridePtrOutput)
}

type StorageDrsVmOverridePtrOutput struct {
	*pulumi.OutputState
}

func (StorageDrsVmOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDrsVmOverride)(nil))
}

func (o StorageDrsVmOverridePtrOutput) ToStorageDrsVmOverridePtrOutput() StorageDrsVmOverridePtrOutput {
	return o
}

func (o StorageDrsVmOverridePtrOutput) ToStorageDrsVmOverridePtrOutputWithContext(ctx context.Context) StorageDrsVmOverridePtrOutput {
	return o
}

type StorageDrsVmOverrideArrayOutput struct{ *pulumi.OutputState }

func (StorageDrsVmOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageDrsVmOverride)(nil))
}

func (o StorageDrsVmOverrideArrayOutput) ToStorageDrsVmOverrideArrayOutput() StorageDrsVmOverrideArrayOutput {
	return o
}

func (o StorageDrsVmOverrideArrayOutput) ToStorageDrsVmOverrideArrayOutputWithContext(ctx context.Context) StorageDrsVmOverrideArrayOutput {
	return o
}

func (o StorageDrsVmOverrideArrayOutput) Index(i pulumi.IntInput) StorageDrsVmOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageDrsVmOverride {
		return vs[0].([]StorageDrsVmOverride)[vs[1].(int)]
	}).(StorageDrsVmOverrideOutput)
}

type StorageDrsVmOverrideMapOutput struct{ *pulumi.OutputState }

func (StorageDrsVmOverrideMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageDrsVmOverride)(nil))
}

func (o StorageDrsVmOverrideMapOutput) ToStorageDrsVmOverrideMapOutput() StorageDrsVmOverrideMapOutput {
	return o
}

func (o StorageDrsVmOverrideMapOutput) ToStorageDrsVmOverrideMapOutputWithContext(ctx context.Context) StorageDrsVmOverrideMapOutput {
	return o
}

func (o StorageDrsVmOverrideMapOutput) MapIndex(k pulumi.StringInput) StorageDrsVmOverrideOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StorageDrsVmOverride {
		return vs[0].(map[string]StorageDrsVmOverride)[vs[1].(string)]
	}).(StorageDrsVmOverrideOutput)
}

func init() {
	pulumi.RegisterOutputType(StorageDrsVmOverrideOutput{})
	pulumi.RegisterOutputType(StorageDrsVmOverridePtrOutput{})
	pulumi.RegisterOutputType(StorageDrsVmOverrideArrayOutput{})
	pulumi.RegisterOutputType(StorageDrsVmOverrideMapOutput{})
}
