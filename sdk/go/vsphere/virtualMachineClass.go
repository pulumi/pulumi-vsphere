// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-vsphere/sdk/v4/go/vsphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource for configuring a Virtual Machine class.
//
// ## Example Usage
//
// ### S
//
// **Create a basic class**
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vsphere/sdk/v4/go/vsphere"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vsphere.NewVirtualMachineClass(ctx, "basic_class", &vsphere.VirtualMachineClassArgs{
//				Name:   pulumi.String("basic-class"),
//				Cpus:   pulumi.Int(4),
//				Memory: pulumi.Int(4096),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// **Create a class with a vGPU**
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vsphere/sdk/v4/go/vsphere"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vsphere.NewVirtualMachineClass(ctx, "vgp_class", &vsphere.VirtualMachineClassArgs{
//				Name:              pulumi.String("vgpu-class"),
//				Cpus:              pulumi.Int(4),
//				Memory:            pulumi.Int(4096),
//				MemoryReservation: pulumi.Int(100),
//				VgpuDevices: pulumi.StringArray{
//					pulumi.String("vgpu1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type VirtualMachineClass struct {
	pulumi.CustomResourceState

	// The percentage of the available CPU capacity which will be reserved.
	CpuReservation pulumi.IntPtrOutput `pulumi:"cpuReservation"`
	// The number of CPUs.
	Cpus pulumi.IntOutput `pulumi:"cpus"`
	// The amount of memory in MB.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// The percentage of memory reservation.
	MemoryReservation pulumi.IntPtrOutput `pulumi:"memoryReservation"`
	// The name for the class.
	Name pulumi.StringOutput `pulumi:"name"`
	// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
	VgpuDevices pulumi.StringArrayOutput `pulumi:"vgpuDevices"`
}

// NewVirtualMachineClass registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineClass(ctx *pulumi.Context,
	name string, args *VirtualMachineClassArgs, opts ...pulumi.ResourceOption) (*VirtualMachineClass, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cpus == nil {
		return nil, errors.New("invalid value for required argument 'Cpus'")
	}
	if args.Memory == nil {
		return nil, errors.New("invalid value for required argument 'Memory'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineClass
	err := ctx.RegisterResource("vsphere:index/virtualMachineClass:VirtualMachineClass", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineClass gets an existing VirtualMachineClass resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineClass(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineClassState, opts ...pulumi.ResourceOption) (*VirtualMachineClass, error) {
	var resource VirtualMachineClass
	err := ctx.ReadResource("vsphere:index/virtualMachineClass:VirtualMachineClass", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineClass resources.
type virtualMachineClassState struct {
	// The percentage of the available CPU capacity which will be reserved.
	CpuReservation *int `pulumi:"cpuReservation"`
	// The number of CPUs.
	Cpus *int `pulumi:"cpus"`
	// The amount of memory in MB.
	Memory *int `pulumi:"memory"`
	// The percentage of memory reservation.
	MemoryReservation *int `pulumi:"memoryReservation"`
	// The name for the class.
	Name *string `pulumi:"name"`
	// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
	VgpuDevices []string `pulumi:"vgpuDevices"`
}

type VirtualMachineClassState struct {
	// The percentage of the available CPU capacity which will be reserved.
	CpuReservation pulumi.IntPtrInput
	// The number of CPUs.
	Cpus pulumi.IntPtrInput
	// The amount of memory in MB.
	Memory pulumi.IntPtrInput
	// The percentage of memory reservation.
	MemoryReservation pulumi.IntPtrInput
	// The name for the class.
	Name pulumi.StringPtrInput
	// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
	VgpuDevices pulumi.StringArrayInput
}

func (VirtualMachineClassState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineClassState)(nil)).Elem()
}

type virtualMachineClassArgs struct {
	// The percentage of the available CPU capacity which will be reserved.
	CpuReservation *int `pulumi:"cpuReservation"`
	// The number of CPUs.
	Cpus int `pulumi:"cpus"`
	// The amount of memory in MB.
	Memory int `pulumi:"memory"`
	// The percentage of memory reservation.
	MemoryReservation *int `pulumi:"memoryReservation"`
	// The name for the class.
	Name *string `pulumi:"name"`
	// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
	VgpuDevices []string `pulumi:"vgpuDevices"`
}

// The set of arguments for constructing a VirtualMachineClass resource.
type VirtualMachineClassArgs struct {
	// The percentage of the available CPU capacity which will be reserved.
	CpuReservation pulumi.IntPtrInput
	// The number of CPUs.
	Cpus pulumi.IntInput
	// The amount of memory in MB.
	Memory pulumi.IntInput
	// The percentage of memory reservation.
	MemoryReservation pulumi.IntPtrInput
	// The name for the class.
	Name pulumi.StringPtrInput
	// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
	VgpuDevices pulumi.StringArrayInput
}

func (VirtualMachineClassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineClassArgs)(nil)).Elem()
}

type VirtualMachineClassInput interface {
	pulumi.Input

	ToVirtualMachineClassOutput() VirtualMachineClassOutput
	ToVirtualMachineClassOutputWithContext(ctx context.Context) VirtualMachineClassOutput
}

func (*VirtualMachineClass) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineClass)(nil)).Elem()
}

func (i *VirtualMachineClass) ToVirtualMachineClassOutput() VirtualMachineClassOutput {
	return i.ToVirtualMachineClassOutputWithContext(context.Background())
}

func (i *VirtualMachineClass) ToVirtualMachineClassOutputWithContext(ctx context.Context) VirtualMachineClassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineClassOutput)
}

// VirtualMachineClassArrayInput is an input type that accepts VirtualMachineClassArray and VirtualMachineClassArrayOutput values.
// You can construct a concrete instance of `VirtualMachineClassArrayInput` via:
//
//	VirtualMachineClassArray{ VirtualMachineClassArgs{...} }
type VirtualMachineClassArrayInput interface {
	pulumi.Input

	ToVirtualMachineClassArrayOutput() VirtualMachineClassArrayOutput
	ToVirtualMachineClassArrayOutputWithContext(context.Context) VirtualMachineClassArrayOutput
}

type VirtualMachineClassArray []VirtualMachineClassInput

func (VirtualMachineClassArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineClass)(nil)).Elem()
}

func (i VirtualMachineClassArray) ToVirtualMachineClassArrayOutput() VirtualMachineClassArrayOutput {
	return i.ToVirtualMachineClassArrayOutputWithContext(context.Background())
}

func (i VirtualMachineClassArray) ToVirtualMachineClassArrayOutputWithContext(ctx context.Context) VirtualMachineClassArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineClassArrayOutput)
}

// VirtualMachineClassMapInput is an input type that accepts VirtualMachineClassMap and VirtualMachineClassMapOutput values.
// You can construct a concrete instance of `VirtualMachineClassMapInput` via:
//
//	VirtualMachineClassMap{ "key": VirtualMachineClassArgs{...} }
type VirtualMachineClassMapInput interface {
	pulumi.Input

	ToVirtualMachineClassMapOutput() VirtualMachineClassMapOutput
	ToVirtualMachineClassMapOutputWithContext(context.Context) VirtualMachineClassMapOutput
}

type VirtualMachineClassMap map[string]VirtualMachineClassInput

func (VirtualMachineClassMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineClass)(nil)).Elem()
}

func (i VirtualMachineClassMap) ToVirtualMachineClassMapOutput() VirtualMachineClassMapOutput {
	return i.ToVirtualMachineClassMapOutputWithContext(context.Background())
}

func (i VirtualMachineClassMap) ToVirtualMachineClassMapOutputWithContext(ctx context.Context) VirtualMachineClassMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineClassMapOutput)
}

type VirtualMachineClassOutput struct{ *pulumi.OutputState }

func (VirtualMachineClassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineClass)(nil)).Elem()
}

func (o VirtualMachineClassOutput) ToVirtualMachineClassOutput() VirtualMachineClassOutput {
	return o
}

func (o VirtualMachineClassOutput) ToVirtualMachineClassOutputWithContext(ctx context.Context) VirtualMachineClassOutput {
	return o
}

// The percentage of the available CPU capacity which will be reserved.
func (o VirtualMachineClassOutput) CpuReservation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClass) pulumi.IntPtrOutput { return v.CpuReservation }).(pulumi.IntPtrOutput)
}

// The number of CPUs.
func (o VirtualMachineClassOutput) Cpus() pulumi.IntOutput {
	return o.ApplyT(func(v *VirtualMachineClass) pulumi.IntOutput { return v.Cpus }).(pulumi.IntOutput)
}

// The amount of memory in MB.
func (o VirtualMachineClassOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *VirtualMachineClass) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// The percentage of memory reservation.
func (o VirtualMachineClassOutput) MemoryReservation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualMachineClass) pulumi.IntPtrOutput { return v.MemoryReservation }).(pulumi.IntPtrOutput)
}

// The name for the class.
func (o VirtualMachineClassOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineClass) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The identifiers of the vGPU devices for the class. If this is set memory reservation needs to be 100.
func (o VirtualMachineClassOutput) VgpuDevices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineClass) pulumi.StringArrayOutput { return v.VgpuDevices }).(pulumi.StringArrayOutput)
}

type VirtualMachineClassArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineClassArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineClass)(nil)).Elem()
}

func (o VirtualMachineClassArrayOutput) ToVirtualMachineClassArrayOutput() VirtualMachineClassArrayOutput {
	return o
}

func (o VirtualMachineClassArrayOutput) ToVirtualMachineClassArrayOutputWithContext(ctx context.Context) VirtualMachineClassArrayOutput {
	return o
}

func (o VirtualMachineClassArrayOutput) Index(i pulumi.IntInput) VirtualMachineClassOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMachineClass {
		return vs[0].([]*VirtualMachineClass)[vs[1].(int)]
	}).(VirtualMachineClassOutput)
}

type VirtualMachineClassMapOutput struct{ *pulumi.OutputState }

func (VirtualMachineClassMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineClass)(nil)).Elem()
}

func (o VirtualMachineClassMapOutput) ToVirtualMachineClassMapOutput() VirtualMachineClassMapOutput {
	return o
}

func (o VirtualMachineClassMapOutput) ToVirtualMachineClassMapOutputWithContext(ctx context.Context) VirtualMachineClassMapOutput {
	return o
}

func (o VirtualMachineClassMapOutput) MapIndex(k pulumi.StringInput) VirtualMachineClassOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMachineClass {
		return vs[0].(map[string]*VirtualMachineClass)[vs[1].(string)]
	}).(VirtualMachineClassOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineClassInput)(nil)).Elem(), &VirtualMachineClass{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineClassArrayInput)(nil)).Elem(), VirtualMachineClassArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineClassMapInput)(nil)).Elem(), VirtualMachineClassMap{})
	pulumi.RegisterOutputType(VirtualMachineClassOutput{})
	pulumi.RegisterOutputType(VirtualMachineClassArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineClassMapOutput{})
}
