// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The `.ComputeClusterVmAffinityRule` resource can be used to manage
// VM affinity rules in a cluster, either created by the
// [`.ComputeCluster`][tf-vsphere-cluster-resource] resource or looked up
// by the [`.ComputeCluster`][tf-vsphere-cluster-data-source] data source.
// 
// [tf-vsphere-cluster-resource]: /docs/providers/vsphere/r/compute_cluster.html
// [tf-vsphere-cluster-data-source]: /docs/providers/vsphere/d/compute_cluster.html
// 
// This rule can be used to tell a set to virtual machines to run together on a
// single host within a cluster. When configured, DRS will make a best effort to
// ensure that the virtual machines run on the same host, or prevent any operation
// that would keep that from happening, depending on the value of the
// `mandatory` flag.
// 
// > Keep in mind that this rule can only be used to tell VMs to run together on
// a _non-specific_ host - it can't be used to pin VMs to a host. For that, see
// the
// [`.ComputeClusterVmHostRule`][tf-vsphere-cluster-vm-host-rule-resource]
// resource.
// 
// [tf-vsphere-cluster-vm-host-rule-resource]: /docs/providers/vsphere/r/compute_cluster_vm_host_rule.html
// 
// > **NOTE:** This resource requires vCenter and is not available on direct ESXi
// connections.
// 
// > **NOTE:** vSphere DRS requires a vSphere Enterprise Plus license.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-vsphere/blob/master/website/docs/r/compute_cluster_vm_affinity_rule.html.markdown.
type ComputeClusterVmAffinityRule struct {
	s *pulumi.ResourceState
}

// NewComputeClusterVmAffinityRule registers a new resource with the given unique name, arguments, and options.
func NewComputeClusterVmAffinityRule(ctx *pulumi.Context,
	name string, args *ComputeClusterVmAffinityRuleArgs, opts ...pulumi.ResourceOpt) (*ComputeClusterVmAffinityRule, error) {
	if args == nil || args.ComputeClusterId == nil {
		return nil, errors.New("missing required argument 'ComputeClusterId'")
	}
	if args == nil || args.VirtualMachineIds == nil {
		return nil, errors.New("missing required argument 'VirtualMachineIds'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["computeClusterId"] = nil
		inputs["enabled"] = nil
		inputs["mandatory"] = nil
		inputs["name"] = nil
		inputs["virtualMachineIds"] = nil
	} else {
		inputs["computeClusterId"] = args.ComputeClusterId
		inputs["enabled"] = args.Enabled
		inputs["mandatory"] = args.Mandatory
		inputs["name"] = args.Name
		inputs["virtualMachineIds"] = args.VirtualMachineIds
	}
	s, err := ctx.RegisterResource("vsphere:index/computeClusterVmAffinityRule:ComputeClusterVmAffinityRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ComputeClusterVmAffinityRule{s: s}, nil
}

// GetComputeClusterVmAffinityRule gets an existing ComputeClusterVmAffinityRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeClusterVmAffinityRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ComputeClusterVmAffinityRuleState, opts ...pulumi.ResourceOpt) (*ComputeClusterVmAffinityRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["computeClusterId"] = state.ComputeClusterId
		inputs["enabled"] = state.Enabled
		inputs["mandatory"] = state.Mandatory
		inputs["name"] = state.Name
		inputs["virtualMachineIds"] = state.VirtualMachineIds
	}
	s, err := ctx.ReadResource("vsphere:index/computeClusterVmAffinityRule:ComputeClusterVmAffinityRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ComputeClusterVmAffinityRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ComputeClusterVmAffinityRule) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ComputeClusterVmAffinityRule) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The [managed object reference
// ID][docs-about-morefs] of the cluster to put the group in.  Forces a new
// resource if changed.
func (r *ComputeClusterVmAffinityRule) ComputeClusterId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["computeClusterId"])
}

// Enable this rule in the cluster. Default: `true`.
func (r *ComputeClusterVmAffinityRule) Enabled() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["enabled"])
}

// When this value is `true`, prevents any virtual
// machine operations that may violate this rule. Default: `false`.
func (r *ComputeClusterVmAffinityRule) Mandatory() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["mandatory"])
}

// The name of the rule. This must be unique in the cluster.
func (r *ComputeClusterVmAffinityRule) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The UUIDs of the virtual machines to run
// on the same host together.
func (r *ComputeClusterVmAffinityRule) VirtualMachineIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["virtualMachineIds"])
}

// Input properties used for looking up and filtering ComputeClusterVmAffinityRule resources.
type ComputeClusterVmAffinityRuleState struct {
	// The [managed object reference
	// ID][docs-about-morefs] of the cluster to put the group in.  Forces a new
	// resource if changed.
	ComputeClusterId interface{}
	// Enable this rule in the cluster. Default: `true`.
	Enabled interface{}
	// When this value is `true`, prevents any virtual
	// machine operations that may violate this rule. Default: `false`.
	Mandatory interface{}
	// The name of the rule. This must be unique in the cluster.
	Name interface{}
	// The UUIDs of the virtual machines to run
	// on the same host together.
	VirtualMachineIds interface{}
}

// The set of arguments for constructing a ComputeClusterVmAffinityRule resource.
type ComputeClusterVmAffinityRuleArgs struct {
	// The [managed object reference
	// ID][docs-about-morefs] of the cluster to put the group in.  Forces a new
	// resource if changed.
	ComputeClusterId interface{}
	// Enable this rule in the cluster. Default: `true`.
	Enabled interface{}
	// When this value is `true`, prevents any virtual
	// machine operations that may violate this rule. Default: `false`.
	Mandatory interface{}
	// The name of the rule. This must be unique in the cluster.
	Name interface{}
	// The UUIDs of the virtual machines to run
	// on the same host together.
	VirtualMachineIds interface{}
}
