// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "vsphere:index/computeCluster:ComputeCluster":
		r, err = NewComputeCluster(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/computeClusterHostGroup:ComputeClusterHostGroup":
		r, err = NewComputeClusterHostGroup(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/computeClusterVmAffinityRule:ComputeClusterVmAffinityRule":
		r, err = NewComputeClusterVmAffinityRule(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/computeClusterVmAntiAffinityRule:ComputeClusterVmAntiAffinityRule":
		r, err = NewComputeClusterVmAntiAffinityRule(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/computeClusterVmDependencyRule:ComputeClusterVmDependencyRule":
		r, err = NewComputeClusterVmDependencyRule(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/computeClusterVmGroup:ComputeClusterVmGroup":
		r, err = NewComputeClusterVmGroup(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/computeClusterVmHostRule:ComputeClusterVmHostRule":
		r, err = NewComputeClusterVmHostRule(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/contentLibrary:ContentLibrary":
		r, err = NewContentLibrary(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/contentLibraryItem:ContentLibraryItem":
		r, err = NewContentLibraryItem(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/customAttribute:CustomAttribute":
		r, err = NewCustomAttribute(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/datacenter:Datacenter":
		r, err = NewDatacenter(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/datastoreCluster:DatastoreCluster":
		r, err = NewDatastoreCluster(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/datastoreClusterVmAntiAffinityRule:DatastoreClusterVmAntiAffinityRule":
		r, err = NewDatastoreClusterVmAntiAffinityRule(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/distributedPortGroup:DistributedPortGroup":
		r, err = NewDistributedPortGroup(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/distributedVirtualSwitch:DistributedVirtualSwitch":
		r, err = NewDistributedVirtualSwitch(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/dpmHostOverride:DpmHostOverride":
		r, err = NewDpmHostOverride(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/drsVmOverride:DrsVmOverride":
		r, err = NewDrsVmOverride(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/entityPermissions:EntityPermissions":
		r, err = NewEntityPermissions(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/file:File":
		r, err = NewFile(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/folder:Folder":
		r, err = NewFolder(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/haVmOverride:HaVmOverride":
		r, err = NewHaVmOverride(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/host:Host":
		r, err = NewHost(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/hostPortGroup:HostPortGroup":
		r, err = NewHostPortGroup(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/hostVirtualSwitch:HostVirtualSwitch":
		r, err = NewHostVirtualSwitch(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/license:License":
		r, err = NewLicense(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/nasDatastore:NasDatastore":
		r, err = NewNasDatastore(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/resourcePool:ResourcePool":
		r, err = NewResourcePool(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/role:Role":
		r, err = NewRole(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/storageDrsVmOverride:StorageDrsVmOverride":
		r, err = NewStorageDrsVmOverride(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/tag:Tag":
		r, err = NewTag(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/tagCategory:TagCategory":
		r, err = NewTagCategory(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/vappContainer:VappContainer":
		r, err = NewVappContainer(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/vappEntity:VappEntity":
		r, err = NewVappEntity(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/virtualDisk:VirtualDisk":
		r, err = NewVirtualDisk(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/virtualMachine:VirtualMachine":
		r, err = NewVirtualMachine(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/virtualMachineSnapshot:VirtualMachineSnapshot":
		r, err = NewVirtualMachineSnapshot(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/vmStoragePolicy:VmStoragePolicy":
		r, err = NewVmStoragePolicy(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/vmfsDatastore:VmfsDatastore":
		r, err = NewVmfsDatastore(ctx, name, nil, pulumi.URN_(urn))
	case "vsphere:index/vnic:Vnic":
		r, err = NewVnic(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:vsphere" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	return NewProvider(ctx, name, nil, pulumi.URN_(urn))
}

func init() {
	version, err := PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/computeCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/computeClusterHostGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/computeClusterVmAffinityRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/computeClusterVmAntiAffinityRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/computeClusterVmDependencyRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/computeClusterVmGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/computeClusterVmHostRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/contentLibrary",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/contentLibraryItem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/customAttribute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/datacenter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/datastoreCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/datastoreClusterVmAntiAffinityRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/distributedPortGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/distributedVirtualSwitch",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/dpmHostOverride",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/drsVmOverride",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/entityPermissions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/file",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/folder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/haVmOverride",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/host",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/hostPortGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/hostVirtualSwitch",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/license",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/nasDatastore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/resourcePool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/storageDrsVmOverride",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/tag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/tagCategory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/vappContainer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/vappEntity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/virtualDisk",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/virtualMachine",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/virtualMachineSnapshot",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/vmStoragePolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/vmfsDatastore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"vsphere",
		"index/vnic",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"vsphere",
		&pkg{version},
	)
}
