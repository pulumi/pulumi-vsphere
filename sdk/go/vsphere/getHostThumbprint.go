// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-vsphere/sdk/v4/go/vsphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The `vsphereThumbprint` data source can be used to discover the host
// thumbprint of an ESXi host. This can be used when adding the `Host`
// resource. If the ESXi host is using a certificate chain, the first one returned
// will be used to generate the thumbprint.
func GetHostThumbprint(ctx *pulumi.Context, args *GetHostThumbprintArgs, opts ...pulumi.InvokeOption) (*GetHostThumbprintResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHostThumbprintResult
	err := ctx.Invoke("vsphere:index/getHostThumbprint:getHostThumbprint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHostThumbprint.
type GetHostThumbprintArgs struct {
	// The address of the ESXi host to retrieve the
	// thumbprint from.
	Address string `pulumi:"address"`
	// Disables SSL certificate verification.
	// Default: `false`
	Insecure *bool `pulumi:"insecure"`
	// The port to use connecting to the ESXi host. Default: 443
	Port *string `pulumi:"port"`
}

// A collection of values returned by getHostThumbprint.
type GetHostThumbprintResult struct {
	Address string `pulumi:"address"`
	// The provider-assigned unique ID for this managed resource.
	Id       string  `pulumi:"id"`
	Insecure *bool   `pulumi:"insecure"`
	Port     *string `pulumi:"port"`
}

func GetHostThumbprintOutput(ctx *pulumi.Context, args GetHostThumbprintOutputArgs, opts ...pulumi.InvokeOption) GetHostThumbprintResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHostThumbprintResult, error) {
			args := v.(GetHostThumbprintArgs)
			r, err := GetHostThumbprint(ctx, &args, opts...)
			var s GetHostThumbprintResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetHostThumbprintResultOutput)
}

// A collection of arguments for invoking getHostThumbprint.
type GetHostThumbprintOutputArgs struct {
	// The address of the ESXi host to retrieve the
	// thumbprint from.
	Address pulumi.StringInput `pulumi:"address"`
	// Disables SSL certificate verification.
	// Default: `false`
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// The port to use connecting to the ESXi host. Default: 443
	Port pulumi.StringPtrInput `pulumi:"port"`
}

func (GetHostThumbprintOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostThumbprintArgs)(nil)).Elem()
}

// A collection of values returned by getHostThumbprint.
type GetHostThumbprintResultOutput struct{ *pulumi.OutputState }

func (GetHostThumbprintResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostThumbprintResult)(nil)).Elem()
}

func (o GetHostThumbprintResultOutput) ToGetHostThumbprintResultOutput() GetHostThumbprintResultOutput {
	return o
}

func (o GetHostThumbprintResultOutput) ToGetHostThumbprintResultOutputWithContext(ctx context.Context) GetHostThumbprintResultOutput {
	return o
}

func (o GetHostThumbprintResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetHostThumbprintResult] {
	return pulumix.Output[GetHostThumbprintResult]{
		OutputState: o.OutputState,
	}
}

func (o GetHostThumbprintResultOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostThumbprintResult) string { return v.Address }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHostThumbprintResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostThumbprintResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHostThumbprintResultOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetHostThumbprintResult) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o GetHostThumbprintResultOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHostThumbprintResult) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHostThumbprintResultOutput{})
}
