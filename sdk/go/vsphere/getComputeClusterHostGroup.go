// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `ComputeClusterHostGroup` data source can be used to discover
// the IDs ESXi hosts in a host group and return host group attributes to other
// resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-vsphere/sdk/v4/go/vsphere"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			datacenter, err := vsphere.LookupDatacenter(ctx, &vsphere.LookupDatacenterArgs{
//				Name: pulumi.StringRef(_var.Vsphere_datacenter),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			cluster, err := vsphere.LookupComputeCluster(ctx, &vsphere.LookupComputeClusterArgs{
//				Name:         _var.Vsphere_cluster,
//				DatacenterId: pulumi.StringRef(datacenter.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			hostGroup1, err := vsphere.LookupComputeClusterHostGroup(ctx, &vsphere.LookupComputeClusterHostGroupArgs{
//				Name:             "host_group1",
//				ComputeClusterId: cluster.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = vsphere.NewComputeClusterVmHostRule(ctx, "hostRule1", &vsphere.ComputeClusterVmHostRuleArgs{
//				ComputeClusterId:      *pulumi.String(cluster.Id),
//				VmGroupName:           pulumi.String("vm_group1"),
//				AffinityHostGroupName: *pulumi.String(hostGroup1.Name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupComputeClusterHostGroup(ctx *pulumi.Context, args *LookupComputeClusterHostGroupArgs, opts ...pulumi.InvokeOption) (*LookupComputeClusterHostGroupResult, error) {
	var rv LookupComputeClusterHostGroupResult
	err := ctx.Invoke("vsphere:index/getComputeClusterHostGroup:getComputeClusterHostGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeClusterHostGroup.
type LookupComputeClusterHostGroupArgs struct {
	// The [managed object reference ID][docs-about-morefs]
	// of the compute cluster for the host group.
	ComputeClusterId string `pulumi:"computeClusterId"`
	// The name of the host group.
	Name string `pulumi:"name"`
}

// A collection of values returned by getComputeClusterHostGroup.
type LookupComputeClusterHostGroupResult struct {
	ComputeClusterId string `pulumi:"computeClusterId"`
	// The [managed object reference ID][docs-about-morefs] of
	// the ESXi hosts in the host group.
	HostSystemIds []string `pulumi:"hostSystemIds"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupComputeClusterHostGroupOutput(ctx *pulumi.Context, args LookupComputeClusterHostGroupOutputArgs, opts ...pulumi.InvokeOption) LookupComputeClusterHostGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupComputeClusterHostGroupResult, error) {
			args := v.(LookupComputeClusterHostGroupArgs)
			r, err := LookupComputeClusterHostGroup(ctx, &args, opts...)
			var s LookupComputeClusterHostGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupComputeClusterHostGroupResultOutput)
}

// A collection of arguments for invoking getComputeClusterHostGroup.
type LookupComputeClusterHostGroupOutputArgs struct {
	// The [managed object reference ID][docs-about-morefs]
	// of the compute cluster for the host group.
	ComputeClusterId pulumi.StringInput `pulumi:"computeClusterId"`
	// The name of the host group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupComputeClusterHostGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeClusterHostGroupArgs)(nil)).Elem()
}

// A collection of values returned by getComputeClusterHostGroup.
type LookupComputeClusterHostGroupResultOutput struct{ *pulumi.OutputState }

func (LookupComputeClusterHostGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupComputeClusterHostGroupResult)(nil)).Elem()
}

func (o LookupComputeClusterHostGroupResultOutput) ToLookupComputeClusterHostGroupResultOutput() LookupComputeClusterHostGroupResultOutput {
	return o
}

func (o LookupComputeClusterHostGroupResultOutput) ToLookupComputeClusterHostGroupResultOutputWithContext(ctx context.Context) LookupComputeClusterHostGroupResultOutput {
	return o
}

func (o LookupComputeClusterHostGroupResultOutput) ComputeClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeClusterHostGroupResult) string { return v.ComputeClusterId }).(pulumi.StringOutput)
}

// The [managed object reference ID][docs-about-morefs] of
// the ESXi hosts in the host group.
func (o LookupComputeClusterHostGroupResultOutput) HostSystemIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupComputeClusterHostGroupResult) []string { return v.HostSystemIds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupComputeClusterHostGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeClusterHostGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupComputeClusterHostGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupComputeClusterHostGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupComputeClusterHostGroupResultOutput{})
}
