// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a VMware vSphere vnic resource.
type Vnic struct {
	pulumi.CustomResourceState

	// Key of the distributed portgroup the nic will connect to.
	DistributedPortGroup pulumi.StringPtrOutput `pulumi:"distributedPortGroup"`
	// UUID of the DVSwitch the nic will be attached to. Do not set if you set portgroup.
	DistributedSwitchPort pulumi.StringPtrOutput `pulumi:"distributedSwitchPort"`
	// ESX host the interface belongs to
	Host pulumi.StringOutput `pulumi:"host"`
	// IPv4 settings. Either this or `ipv6` needs to be set. See  ipv4 options below.
	Ipv4 VnicIpv4PtrOutput `pulumi:"ipv4"`
	// IPv6 settings. Either this or `ipv6` needs to be set. See  ipv6 options below.
	Ipv6 VnicIpv6PtrOutput `pulumi:"ipv6"`
	// MAC address of the interface.
	Mac pulumi.StringOutput `pulumi:"mac"`
	// MTU of the interface.
	Mtu pulumi.IntOutput `pulumi:"mtu"`
	// TCP/IP stack setting for this interface. Possible values are 'defaultTcpipStack', 'vmotion', 'vSphereProvisioning'. Changing this will force the creation of a new interface since it's not possible to change the stack once it gets created. (Default: `defaultTcpipStack`)
	Netstack pulumi.StringPtrOutput `pulumi:"netstack"`
	// Portgroup to attach the nic to. Do not set if you set distributed_switch_port.
	Portgroup pulumi.StringPtrOutput `pulumi:"portgroup"`
}

// NewVnic registers a new resource with the given unique name, arguments, and options.
func NewVnic(ctx *pulumi.Context,
	name string, args *VnicArgs, opts ...pulumi.ResourceOption) (*Vnic, error) {
	if args == nil || args.Host == nil {
		return nil, errors.New("missing required argument 'Host'")
	}
	if args == nil {
		args = &VnicArgs{}
	}
	var resource Vnic
	err := ctx.RegisterResource("vsphere:index/vnic:Vnic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVnic gets an existing Vnic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVnic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VnicState, opts ...pulumi.ResourceOption) (*Vnic, error) {
	var resource Vnic
	err := ctx.ReadResource("vsphere:index/vnic:Vnic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vnic resources.
type vnicState struct {
	// Key of the distributed portgroup the nic will connect to.
	DistributedPortGroup *string `pulumi:"distributedPortGroup"`
	// UUID of the DVSwitch the nic will be attached to. Do not set if you set portgroup.
	DistributedSwitchPort *string `pulumi:"distributedSwitchPort"`
	// ESX host the interface belongs to
	Host *string `pulumi:"host"`
	// IPv4 settings. Either this or `ipv6` needs to be set. See  ipv4 options below.
	Ipv4 *VnicIpv4 `pulumi:"ipv4"`
	// IPv6 settings. Either this or `ipv6` needs to be set. See  ipv6 options below.
	Ipv6 *VnicIpv6 `pulumi:"ipv6"`
	// MAC address of the interface.
	Mac *string `pulumi:"mac"`
	// MTU of the interface.
	Mtu *int `pulumi:"mtu"`
	// TCP/IP stack setting for this interface. Possible values are 'defaultTcpipStack', 'vmotion', 'vSphereProvisioning'. Changing this will force the creation of a new interface since it's not possible to change the stack once it gets created. (Default: `defaultTcpipStack`)
	Netstack *string `pulumi:"netstack"`
	// Portgroup to attach the nic to. Do not set if you set distributed_switch_port.
	Portgroup *string `pulumi:"portgroup"`
}

type VnicState struct {
	// Key of the distributed portgroup the nic will connect to.
	DistributedPortGroup pulumi.StringPtrInput
	// UUID of the DVSwitch the nic will be attached to. Do not set if you set portgroup.
	DistributedSwitchPort pulumi.StringPtrInput
	// ESX host the interface belongs to
	Host pulumi.StringPtrInput
	// IPv4 settings. Either this or `ipv6` needs to be set. See  ipv4 options below.
	Ipv4 VnicIpv4PtrInput
	// IPv6 settings. Either this or `ipv6` needs to be set. See  ipv6 options below.
	Ipv6 VnicIpv6PtrInput
	// MAC address of the interface.
	Mac pulumi.StringPtrInput
	// MTU of the interface.
	Mtu pulumi.IntPtrInput
	// TCP/IP stack setting for this interface. Possible values are 'defaultTcpipStack', 'vmotion', 'vSphereProvisioning'. Changing this will force the creation of a new interface since it's not possible to change the stack once it gets created. (Default: `defaultTcpipStack`)
	Netstack pulumi.StringPtrInput
	// Portgroup to attach the nic to. Do not set if you set distributed_switch_port.
	Portgroup pulumi.StringPtrInput
}

func (VnicState) ElementType() reflect.Type {
	return reflect.TypeOf((*vnicState)(nil)).Elem()
}

type vnicArgs struct {
	// Key of the distributed portgroup the nic will connect to.
	DistributedPortGroup *string `pulumi:"distributedPortGroup"`
	// UUID of the DVSwitch the nic will be attached to. Do not set if you set portgroup.
	DistributedSwitchPort *string `pulumi:"distributedSwitchPort"`
	// ESX host the interface belongs to
	Host string `pulumi:"host"`
	// IPv4 settings. Either this or `ipv6` needs to be set. See  ipv4 options below.
	Ipv4 *VnicIpv4 `pulumi:"ipv4"`
	// IPv6 settings. Either this or `ipv6` needs to be set. See  ipv6 options below.
	Ipv6 *VnicIpv6 `pulumi:"ipv6"`
	// MAC address of the interface.
	Mac *string `pulumi:"mac"`
	// MTU of the interface.
	Mtu *int `pulumi:"mtu"`
	// TCP/IP stack setting for this interface. Possible values are 'defaultTcpipStack', 'vmotion', 'vSphereProvisioning'. Changing this will force the creation of a new interface since it's not possible to change the stack once it gets created. (Default: `defaultTcpipStack`)
	Netstack *string `pulumi:"netstack"`
	// Portgroup to attach the nic to. Do not set if you set distributed_switch_port.
	Portgroup *string `pulumi:"portgroup"`
}

// The set of arguments for constructing a Vnic resource.
type VnicArgs struct {
	// Key of the distributed portgroup the nic will connect to.
	DistributedPortGroup pulumi.StringPtrInput
	// UUID of the DVSwitch the nic will be attached to. Do not set if you set portgroup.
	DistributedSwitchPort pulumi.StringPtrInput
	// ESX host the interface belongs to
	Host pulumi.StringInput
	// IPv4 settings. Either this or `ipv6` needs to be set. See  ipv4 options below.
	Ipv4 VnicIpv4PtrInput
	// IPv6 settings. Either this or `ipv6` needs to be set. See  ipv6 options below.
	Ipv6 VnicIpv6PtrInput
	// MAC address of the interface.
	Mac pulumi.StringPtrInput
	// MTU of the interface.
	Mtu pulumi.IntPtrInput
	// TCP/IP stack setting for this interface. Possible values are 'defaultTcpipStack', 'vmotion', 'vSphereProvisioning'. Changing this will force the creation of a new interface since it's not possible to change the stack once it gets created. (Default: `defaultTcpipStack`)
	Netstack pulumi.StringPtrInput
	// Portgroup to attach the nic to. Do not set if you set distributed_switch_port.
	Portgroup pulumi.StringPtrInput
}

func (VnicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vnicArgs)(nil)).Elem()
}
