// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vsphere

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [docs-about-morefs]: /docs/providers/vsphere/index.html#use-of-managed-object-references-by-the-vsphere-provider
//
// The `getDynamic` data source can be used to get the [managed object
//   reference ID][docs-about-morefs] of any tagged managed object in vCenter
//   by providing a list of tag IDs and an optional regular expression to filter
//   objects by name.
func GetDynamic(ctx *pulumi.Context, args *GetDynamicArgs, opts ...pulumi.InvokeOption) (*GetDynamicResult, error) {
	var rv GetDynamicResult
	err := ctx.Invoke("vsphere:index/getDynamic:getDynamic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDynamic.
type GetDynamicArgs struct {
	// A list of tag IDs that must be present on an object to
	// be a match.
	Filters []string `pulumi:"filters"`
	// A regular expression that will be used to match
	// the object's name.
	NameRegex *string `pulumi:"nameRegex"`
	// The managed object type the returned object must match.
	// For a full list, click [here](https://code.vmware.com/apis/196/vsphere).
	Type *string `pulumi:"type"`
}

// A collection of values returned by getDynamic.
type GetDynamicResult struct {
	Filters []string `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	NameRegex *string `pulumi:"nameRegex"`
	Type      *string `pulumi:"type"`
}

func GetDynamicOutput(ctx *pulumi.Context, args GetDynamicOutputArgs, opts ...pulumi.InvokeOption) GetDynamicResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDynamicResult, error) {
			args := v.(GetDynamicArgs)
			r, err := GetDynamic(ctx, &args, opts...)
			return *r, err
		}).(GetDynamicResultOutput)
}

// A collection of arguments for invoking getDynamic.
type GetDynamicOutputArgs struct {
	// A list of tag IDs that must be present on an object to
	// be a match.
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// A regular expression that will be used to match
	// the object's name.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// The managed object type the returned object must match.
	// For a full list, click [here](https://code.vmware.com/apis/196/vsphere).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetDynamicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicArgs)(nil)).Elem()
}

// A collection of values returned by getDynamic.
type GetDynamicResultOutput struct{ *pulumi.OutputState }

func (GetDynamicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicResult)(nil)).Elem()
}

func (o GetDynamicResultOutput) ToGetDynamicResultOutput() GetDynamicResultOutput {
	return o
}

func (o GetDynamicResultOutput) ToGetDynamicResultOutputWithContext(ctx context.Context) GetDynamicResultOutput {
	return o
}

func (o GetDynamicResultOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDynamicResult) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDynamicResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDynamicResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDynamicResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetDynamicResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDynamicResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDynamicResultOutput{})
}
