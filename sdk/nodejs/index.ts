// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// Export members:
export * from "./computeCluster";
export * from "./computeClusterHostGroup";
export * from "./computeClusterVmAffinityRule";
export * from "./computeClusterVmAntiAffinityRule";
export * from "./computeClusterVmDependencyRule";
export * from "./computeClusterVmGroup";
export * from "./computeClusterVmHostRule";
export * from "./customAttribute";
export * from "./datacenter";
export * from "./datastoreCluster";
export * from "./datastoreClusterVmAntiAffinityRule";
export * from "./distributedPortGroup";
export * from "./distributedVirtualSwitch";
export * from "./dpmHostOverride";
export * from "./drsVmOverride";
export * from "./file";
export * from "./folder";
export * from "./getComputeCluster";
export * from "./getCustomAttribute";
export * from "./getDatacenter";
export * from "./getDatastore";
export * from "./getDatastoreCluster";
export * from "./getDistributedVirtualSwitch";
export * from "./getFolder";
export * from "./getHost";
export * from "./getNetwork";
export * from "./getResourcePool";
export * from "./getTag";
export * from "./getTagCategory";
export * from "./getVappContainer";
export * from "./getVirtualMachine";
export * from "./getVmfsDisks";
export * from "./haVmOverride";
export * from "./host";
export * from "./hostPortGroup";
export * from "./hostVirtualSwitch";
export * from "./license";
export * from "./nasDatastore";
export * from "./provider";
export * from "./resourcePool";
export * from "./storageDrsVmOverride";
export * from "./tag";
export * from "./tagCategory";
export * from "./vappContainer";
export * from "./vappEntity";
export * from "./virtualDisk";
export * from "./virtualMachine";
export * from "./virtualMachineSnapshot";
export * from "./vmfsDatastore";
export * from "./vnic";

// Export sub-modules:
import * as config from "./config/index";
import * as types from "./types/index";
export {config, types};
