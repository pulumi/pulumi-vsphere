// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `vsphere.Tag` data source can be used to reference tags that are not
 * managed by this provider. Its attributes are exactly the same as the `vsphere.Tag`
 * resource, and, like importing, the data source takes a name and
 * category to search on. The `id` and other attributes are then populated with
 * the data found by the search.
 *
 * > **NOTE:** Tagging support is unsupported on direct ESXi connections and
 * requires vCenter 6.0 or higher.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vsphere from "@pulumi/vsphere";
 *
 * const category = pulumi.output(vsphere.getTagCategory({
 *     name: "test-category",
 * }, { async: true }));
 * const tag = category.apply(category => vsphere.getTag({
 *     categoryId: category.id,
 *     name: "test-tag",
 * }, { async: true }));
 * ```
 */
export function getTag(args: GetTagArgs, opts?: pulumi.InvokeOptions): Promise<GetTagResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("vsphere:index/getTag:getTag", {
        "categoryId": args.categoryId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagArgs {
    /**
     * The ID of the tag category the tag is located in.
     */
    readonly categoryId: string;
    /**
     * The name of the tag.
     */
    readonly name: string;
}

/**
 * A collection of values returned by getTag.
 */
export interface GetTagResult {
    readonly categoryId: string;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
}
