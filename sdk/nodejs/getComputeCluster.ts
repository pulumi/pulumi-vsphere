// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `vsphere.ComputeCluster` data source can be used to discover the ID of a
 * cluster in vSphere. This is useful to fetch the ID of a cluster that you want
 * to use for virtual machine placement via the `vsphere.VirtualMachine` resource, allowing to specify the cluster's root resource pool directly versus
 * using the alias available through the `vsphere.ResourcePool`
 * data source.
 *
 * > You may also wish to see the `vsphere.ComputeCluster`
 *  resource for more information about clusters and how to managed the resource
 *  in this provider.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vsphere from "@pulumi/vsphere";
 *
 * const datacenter = vsphere.getDatacenter({
 *     name: "dc-01",
 * });
 * const computeCluster = datacenter.then(datacenter => vsphere.getComputeCluster({
 *     name: "cluster-01",
 *     datacenterId: datacenter.id,
 * }));
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getComputeCluster(args: GetComputeClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vsphere:index/getComputeCluster:getComputeCluster", {
        "datacenterId": args.datacenterId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeCluster.
 */
export interface GetComputeClusterArgs {
    /**
     * The managed object reference ID
     * of the datacenter the cluster is located in.  This can be omitted if the
     * search path used in `name` is an absolute path. For default datacenters,
     * use the `id` attribute from an empty `vsphere.Datacenter` data source.
     */
    datacenterId?: string;
    /**
     * The name or absolute path to the cluster.
     */
    name: string;
}

/**
 * A collection of values returned by getComputeCluster.
 */
export interface GetComputeClusterResult {
    readonly datacenterId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * The managed object reference ID of
     * the root resource pool for the cluster.
     */
    readonly resourcePoolId: string;
}
/**
 * The `vsphere.ComputeCluster` data source can be used to discover the ID of a
 * cluster in vSphere. This is useful to fetch the ID of a cluster that you want
 * to use for virtual machine placement via the `vsphere.VirtualMachine` resource, allowing to specify the cluster's root resource pool directly versus
 * using the alias available through the `vsphere.ResourcePool`
 * data source.
 *
 * > You may also wish to see the `vsphere.ComputeCluster`
 *  resource for more information about clusters and how to managed the resource
 *  in this provider.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vsphere from "@pulumi/vsphere";
 *
 * const datacenter = vsphere.getDatacenter({
 *     name: "dc-01",
 * });
 * const computeCluster = datacenter.then(datacenter => vsphere.getComputeCluster({
 *     name: "cluster-01",
 *     datacenterId: datacenter.id,
 * }));
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getComputeClusterOutput(args: GetComputeClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeClusterResult> {
    return pulumi.output(args).apply((a: any) => getComputeCluster(a, opts))
}

/**
 * A collection of arguments for invoking getComputeCluster.
 */
export interface GetComputeClusterOutputArgs {
    /**
     * The managed object reference ID
     * of the datacenter the cluster is located in.  This can be omitted if the
     * search path used in `name` is an absolute path. For default datacenters,
     * use the `id` attribute from an empty `vsphere.Datacenter` data source.
     */
    datacenterId?: pulumi.Input<string>;
    /**
     * The name or absolute path to the cluster.
     */
    name: pulumi.Input<string>;
}
