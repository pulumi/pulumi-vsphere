// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `vsphere.GuestOsCustomization` resource can be used to a customization specification for a guest operating system.
 *
 * > **NOTE:** The name attribute is unique identifier for the guest OS spec per VC.
 */
export class GuestOsCustomization extends pulumi.CustomResource {
    /**
     * Get an existing GuestOsCustomization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GuestOsCustomizationState, opts?: pulumi.CustomResourceOptions): GuestOsCustomization {
        return new GuestOsCustomization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vsphere:index/guestOsCustomization:GuestOsCustomization';

    /**
     * Returns true if the given object is an instance of GuestOsCustomization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GuestOsCustomization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GuestOsCustomization.__pulumiType;
    }

    /**
     * The number of last changed version to the customization specification.
     */
    public /*out*/ readonly changeVersion!: pulumi.Output<string>;
    /**
     * The description for the customization specification.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The time of last modification to the customization specification.
     */
    public /*out*/ readonly lastUpdateTime!: pulumi.Output<string>;
    /**
     * The name of the customization specification is the unique identifier per vCenter Server instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Container object for the Guest OS properties about to be customized . See virtual machine customizations
     */
    public readonly spec!: pulumi.Output<outputs.GuestOsCustomizationSpec>;
    /**
     * The type of customization specification: One among: Windows, Linux.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a GuestOsCustomization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GuestOsCustomizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GuestOsCustomizationArgs | GuestOsCustomizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GuestOsCustomizationState | undefined;
            resourceInputs["changeVersion"] = state ? state.changeVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastUpdateTime"] = state ? state.lastUpdateTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as GuestOsCustomizationArgs | undefined;
            if ((!args || args.spec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spec'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["spec"] = args ? args.spec : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["changeVersion"] = undefined /*out*/;
            resourceInputs["lastUpdateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GuestOsCustomization.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GuestOsCustomization resources.
 */
export interface GuestOsCustomizationState {
    /**
     * The number of last changed version to the customization specification.
     */
    changeVersion?: pulumi.Input<string>;
    /**
     * The description for the customization specification.
     */
    description?: pulumi.Input<string>;
    /**
     * The time of last modification to the customization specification.
     */
    lastUpdateTime?: pulumi.Input<string>;
    /**
     * The name of the customization specification is the unique identifier per vCenter Server instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Container object for the Guest OS properties about to be customized . See virtual machine customizations
     */
    spec?: pulumi.Input<inputs.GuestOsCustomizationSpec>;
    /**
     * The type of customization specification: One among: Windows, Linux.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GuestOsCustomization resource.
 */
export interface GuestOsCustomizationArgs {
    /**
     * The description for the customization specification.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the customization specification is the unique identifier per vCenter Server instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Container object for the Guest OS properties about to be customized . See virtual machine customizations
     */
    spec: pulumi.Input<inputs.GuestOsCustomizationSpec>;
    /**
     * The type of customization specification: One among: Windows, Linux.
     */
    type: pulumi.Input<string>;
}
