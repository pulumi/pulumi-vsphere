// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DistributedVirtualSwitchPvlanMapping extends pulumi.CustomResource {
    /**
     * Get an existing DistributedVirtualSwitchPvlanMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DistributedVirtualSwitchPvlanMappingState, opts?: pulumi.CustomResourceOptions): DistributedVirtualSwitchPvlanMapping {
        return new DistributedVirtualSwitchPvlanMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vsphere:index/distributedVirtualSwitchPvlanMapping:DistributedVirtualSwitchPvlanMapping';

    /**
     * Returns true if the given object is an instance of DistributedVirtualSwitchPvlanMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DistributedVirtualSwitchPvlanMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DistributedVirtualSwitchPvlanMapping.__pulumiType;
    }

    /**
     * The ID of the distributed virtual switch to attach this mapping to.
     */
    declare public readonly distributedVirtualSwitchId: pulumi.Output<string>;
    /**
     * The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     */
    declare public readonly primaryVlanId: pulumi.Output<number>;
    /**
     * The private VLAN type. Valid values are promiscuous, community and isolated.
     */
    declare public readonly pvlanType: pulumi.Output<string>;
    /**
     * The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     */
    declare public readonly secondaryVlanId: pulumi.Output<number>;

    /**
     * Create a DistributedVirtualSwitchPvlanMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DistributedVirtualSwitchPvlanMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DistributedVirtualSwitchPvlanMappingArgs | DistributedVirtualSwitchPvlanMappingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DistributedVirtualSwitchPvlanMappingState | undefined;
            resourceInputs["distributedVirtualSwitchId"] = state?.distributedVirtualSwitchId;
            resourceInputs["primaryVlanId"] = state?.primaryVlanId;
            resourceInputs["pvlanType"] = state?.pvlanType;
            resourceInputs["secondaryVlanId"] = state?.secondaryVlanId;
        } else {
            const args = argsOrState as DistributedVirtualSwitchPvlanMappingArgs | undefined;
            if (args?.distributedVirtualSwitchId === undefined && !opts.urn) {
                throw new Error("Missing required property 'distributedVirtualSwitchId'");
            }
            if (args?.primaryVlanId === undefined && !opts.urn) {
                throw new Error("Missing required property 'primaryVlanId'");
            }
            if (args?.pvlanType === undefined && !opts.urn) {
                throw new Error("Missing required property 'pvlanType'");
            }
            if (args?.secondaryVlanId === undefined && !opts.urn) {
                throw new Error("Missing required property 'secondaryVlanId'");
            }
            resourceInputs["distributedVirtualSwitchId"] = args?.distributedVirtualSwitchId;
            resourceInputs["primaryVlanId"] = args?.primaryVlanId;
            resourceInputs["pvlanType"] = args?.pvlanType;
            resourceInputs["secondaryVlanId"] = args?.secondaryVlanId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DistributedVirtualSwitchPvlanMapping.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DistributedVirtualSwitchPvlanMapping resources.
 */
export interface DistributedVirtualSwitchPvlanMappingState {
    /**
     * The ID of the distributed virtual switch to attach this mapping to.
     */
    distributedVirtualSwitchId?: pulumi.Input<string>;
    /**
     * The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     */
    primaryVlanId?: pulumi.Input<number>;
    /**
     * The private VLAN type. Valid values are promiscuous, community and isolated.
     */
    pvlanType?: pulumi.Input<string>;
    /**
     * The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     */
    secondaryVlanId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DistributedVirtualSwitchPvlanMapping resource.
 */
export interface DistributedVirtualSwitchPvlanMappingArgs {
    /**
     * The ID of the distributed virtual switch to attach this mapping to.
     */
    distributedVirtualSwitchId: pulumi.Input<string>;
    /**
     * The primary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     */
    primaryVlanId: pulumi.Input<number>;
    /**
     * The private VLAN type. Valid values are promiscuous, community and isolated.
     */
    pvlanType: pulumi.Input<string>;
    /**
     * The secondary VLAN ID. The VLAN IDs of 0 and 4095 are reserved and cannot be used in this property.
     */
    secondaryVlanId: pulumi.Input<number>;
}
