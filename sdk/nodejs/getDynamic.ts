// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * [docs-about-morefs]: /docs/providers/vsphere/index.html#use-of-managed-object-references-by-the-vsphere-provider
 *
 * The `vsphere.getDynamic` data source can be used to get the [managed object
 *   reference ID][docs-about-morefs] of any tagged managed object in vCenter
 *   by providing a list of tag IDs and an optional regular expression to filter
 *   objects by name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vsphere from "@pulumi/vsphere";
 *
 * const cat = vsphere.getTagCategory({
 *     name: "SomeCategory",
 * });
 * const tag1 = cat.then(cat => vsphere.getTag({
 *     name: "FirstTag",
 *     categoryId: cat.id,
 * }));
 * const tag2 = cat.then(cat => vsphere.getTag({
 *     name: "SecondTag",
 *     categoryId: cat.id,
 * }));
 * const dyn = Promise.all([tag1, tag1]).then(([tag1, tag11]) => vsphere.getDynamic({
 *     filters: [
 *         tag1.id,
 *         tag11.id,
 *     ],
 *     nameRegex: "ubuntu",
 *     type: "Datacenter",
 * }));
 * ```
 */
export function getDynamic(args: GetDynamicArgs, opts?: pulumi.InvokeOptions): Promise<GetDynamicResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vsphere:index/getDynamic:getDynamic", {
        "filters": args.filters,
        "nameRegex": args.nameRegex,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getDynamic.
 */
export interface GetDynamicArgs {
    /**
     * A list of tag IDs that must be present on an object to
     * be a match.
     */
    filters: string[];
    /**
     * A regular expression that will be used to match
     * the object's name.
     */
    nameRegex?: string;
    /**
     * The managed object type the returned object must match.
     * The managed object types can be found in the managed object type section
     * [here](https://developer.vmware.com/apis/968/vsphere).
     */
    type?: string;
}

/**
 * A collection of values returned by getDynamic.
 */
export interface GetDynamicResult {
    readonly filters: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly type?: string;
}

export function getDynamicOutput(args: GetDynamicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDynamicResult> {
    return pulumi.output(args).apply(a => getDynamic(a, opts))
}

/**
 * A collection of arguments for invoking getDynamic.
 */
export interface GetDynamicOutputArgs {
    /**
     * A list of tag IDs that must be present on an object to
     * be a match.
     */
    filters: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A regular expression that will be used to match
     * the object's name.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The managed object type the returned object must match.
     * The managed object types can be found in the managed object type section
     * [here](https://developer.vmware.com/apis/968/vsphere).
     */
    type?: pulumi.Input<string>;
}
