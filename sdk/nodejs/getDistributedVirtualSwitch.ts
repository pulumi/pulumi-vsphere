// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDistributedVirtualSwitch(args: GetDistributedVirtualSwitchArgs, opts?: pulumi.InvokeOptions): Promise<GetDistributedVirtualSwitchResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vsphere:index/getDistributedVirtualSwitch:getDistributedVirtualSwitch", {
        "datacenterId": args.datacenterId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDistributedVirtualSwitch.
 */
export interface GetDistributedVirtualSwitchArgs {
    /**
     * The managed object reference
     * ID of the datacenter the VDS is located in. This can be
     * omitted if the search path used in `name` is an absolute path. For default
     * datacenters, use the id attribute from an empty `vsphere.Datacenter` data
     * source.
     */
    datacenterId?: string;
    /**
     * The name of the VDS. This can be a
     * name or path.
     */
    name: string;
}

/**
 * A collection of values returned by getDistributedVirtualSwitch.
 */
export interface GetDistributedVirtualSwitchResult {
    readonly datacenterId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly uplinks: string[];
}

export function getDistributedVirtualSwitchOutput(args: GetDistributedVirtualSwitchOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDistributedVirtualSwitchResult> {
    return pulumi.output(args).apply(a => getDistributedVirtualSwitch(a, opts))
}

/**
 * A collection of arguments for invoking getDistributedVirtualSwitch.
 */
export interface GetDistributedVirtualSwitchOutputArgs {
    /**
     * The managed object reference
     * ID of the datacenter the VDS is located in. This can be
     * omitted if the search path used in `name` is an absolute path. For default
     * datacenters, use the id attribute from an empty `vsphere.Datacenter` data
     * source.
     */
    datacenterId?: pulumi.Input<string>;
    /**
     * The name of the VDS. This can be a
     * name or path.
     */
    name: pulumi.Input<string>;
}
